{"version":3,"sources":["../../../../../src/streaming/vo/MediaInfo.js"],"names":["MediaInfo","id","index","type","streamInfo","representationCount","lang","viewpoint","accessibility","audioChannelConfiguration","roles","codec","mimeType","contentProtection","isText","KID","bitrateList","mediaInfo","sameId","sameViewpoint","sameLang","sameRoles","toString","sameAccessibility","sameAudioChannelConfiguration"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;IAIMA,S;AACF,yBAAc;AAAA;;AACV,aAAKC,EAAL,GAAU,IAAV;AACA,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,IAAL,GAAY,IAAZ;AACA,aAAKC,UAAL,GAAkB,IAAlB;AACA,aAAKC,mBAAL,GAA2B,CAA3B;AACA,aAAKC,IAAL,GAAY,IAAZ;AACA,aAAKC,SAAL,GAAiB,IAAjB;AACA,aAAKC,aAAL,GAAqB,IAArB;AACA,aAAKC,yBAAL,GAAiC,IAAjC;AACA,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACA,aAAKC,iBAAL,GAAyB,IAAzB;AACA,aAAKC,MAAL,GAAc,KAAd;AACA,aAAKC,GAAL,GAAW,IAAX;AACA,aAAKC,WAAL,GAAmB,IAAnB;AACH;;;;yCAEgBC,S,EAAW;AACxB,gBAAI,CAACA,SAAL,EAAgB;AACZ,uBAAO,KAAP;AACH;;AAED,gBAAMC,SAAS,KAAKjB,EAAL,KAAYgB,UAAUhB,EAArC;AACA,gBAAMkB,gBAAgB,KAAKZ,SAAL,KAAmBU,UAAUV,SAAnD;AACA,gBAAMa,WAAW,KAAKd,IAAL,KAAcW,UAAUX,IAAzC;AACA,gBAAMe,YAAY,KAAKX,KAAL,CAAWY,QAAX,OAA0BL,UAAUP,KAAV,CAAgBY,QAAhB,EAA5C;AACA,gBAAMC,oBAAoB,KAAKf,aAAL,CAAmBc,QAAnB,OAAkCL,UAAUT,aAAV,CAAwBc,QAAxB,EAA5D;AACA,gBAAME,gCAAgC,KAAKf,yBAAL,CAA+Ba,QAA/B,OAA8CL,UAAUR,yBAAV,CAAoCa,QAApC,EAApF;;AAEA,mBAAQJ,UAAUC,aAAV,IAA2BC,QAA3B,IAAuCC,SAAvC,IAAoDE,iBAApD,IAAyEC,6BAAjF;AACH;;;;;;kBAGUxB,S","file":"MediaInfo.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass MediaInfo {\r\n    constructor() {\r\n        this.id = null;\r\n        this.index = null;\r\n        this.type = null;\r\n        this.streamInfo = null;\r\n        this.representationCount = 0;\r\n        this.lang = null;\r\n        this.viewpoint = null;\r\n        this.accessibility = null;\r\n        this.audioChannelConfiguration = null;\r\n        this.roles = null;\r\n        this.codec = null;\r\n        this.mimeType = null;\r\n        this.contentProtection = null;\r\n        this.isText = false;\r\n        this.KID = null;\r\n        this.bitrateList = null;\r\n    }\r\n\r\n    isMediaInfoEqual(mediaInfo) {\r\n        if (!mediaInfo) {\r\n            return false;\r\n        }\r\n\r\n        const sameId = this.id === mediaInfo.id;\r\n        const sameViewpoint = this.viewpoint === mediaInfo.viewpoint;\r\n        const sameLang = this.lang === mediaInfo.lang;\r\n        const sameRoles = this.roles.toString() === mediaInfo.roles.toString();\r\n        const sameAccessibility = this.accessibility.toString() === mediaInfo.accessibility.toString();\r\n        const sameAudioChannelConfiguration = this.audioChannelConfiguration.toString() === mediaInfo.audioChannelConfiguration.toString();\r\n\r\n        return (sameId && sameViewpoint && sameLang && sameRoles && sameAccessibility && sameAudioChannelConfiguration);\r\n    }\r\n}\r\n\r\nexport default MediaInfo;"]}