{"version":3,"sources":["../../../../../src/streaming/models/CmcdModel.js"],"names":["CMCD_REQUEST_FIELD_NAME","CMCD_VERSION","OBJECT_TYPES","MANIFEST","AUDIO","VIDEO","INIT","CAPTION","ISOBMFF_TEXT_TRACK","ENCRYPTION_KEY","OTHER","STREAMING_FORMATS","DASH","MSS","STREAM_TYPES","VOD","LIVE","CmcdModel","logger","dashManifestModel","instance","internalData","abrController","dashMetrics","playbackController","_isStartup","_bufferLevelStarved","_initialMediaRequestsDone","context","eventBus","getInstance","settings","setup","getLogger","_resetInitialSettings","initialize","on","MediaPlayerEvents","PLAYBACK_RATE_CHANGED","_onPlaybackRateChanged","MANIFEST_LOADED","_onManifestLoaded","BUFFER_LEVEL_STATE_CHANGED","_onBufferLevelStateChanged","PLAYBACK_SEEKED","_onPlaybackSeeked","setConfig","config","pr","nor","st","sf","sid","Utils","generateUuid","cid","getQueryParameter","request","get","streaming","cmcd","enabled","cmcdData","_getCmcdData","finalPayloadString","_buildFinalString","trigger","MetricsReportingEvents","CMCD_DATA_GENERATED","url","mediaType","cmcdString","key","value","e","type","HTTPRequest","MPD_TYPE","_setDefaultContentId","_getCmcdDataForMpd","MEDIA_SEGMENT_TYPE","_initForMediaType","_getCmcdDataForMediaSegment","INIT_SEGMENT_TYPE","_getCmcdDataForInitSegment","OTHER_TYPE","XLINK_EXPANSION_TYPE","_getCmcdDataForOther","generateHashCode","data","_getGenericCmcdData","ot","encodedBitrate","_getBitrateByRequest","d","_getObjectDurationByRequest","mtp","_getMeasuredThroughputByType","dl","_getDeadlineByType","bl","_getBufferLevelByType","tb","_getTopBitrateByType","br","isNaN","bs","su","hasOwnProperty","v","quality","bitrateList","mediaInfo","parseInt","bandwidth","info","getTopBitrateInfoFor","bitrate","duration","Math","round","getThroughputHistory","getSafeAverageThroughput","playbackRate","bufferLevel","getCurrentBufferLevel","isDynamic","getIsDynamic","protocol","state","BUFFER_EMPTY","keys","Object","sort","a","b","length","reduce","acc","index","string","replace","encodeURIComponent","reset","off","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"sEA8BA,6C,iDACA,uD,mEACA,yE,6EACA,qD,yDACA,uC,2CACA,6C,iDACA,sDACA,sE,mEACA,uC,8HAEA,GAAMA,yBAA0B,MAAhC,CAxCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCA,GAAMC,cAAe,CAArB,CACA,GAAMC,cAAe,CACjBC,SAAU,GADO,CAEjBC,MAAO,GAFU,CAGjBC,MAAO,GAHU,CAIjBC,KAAM,GAJW,CAKjBC,QAAS,GALQ,CAMjBC,mBAAoB,IANH,CAOjBC,eAAgB,GAPC,CAQjBC,MAAO,GARU,CAArB,CAUA,GAAMC,mBAAoB,CACtBC,KAAM,GADgB,CAEtBC,IAAK,GAFiB,CAA1B,CAIA,GAAMC,cAAe,CACjBC,IAAK,GADY,CAEjBC,KAAM,GAFW,CAArB,CAKA,QAASC,UAAT,EAAqB,CAEjB,GAAIC,cAAJ,CACIC,wBADJ,CAEIC,eAFJ,CAGIC,mBAHJ,CAIIC,oBAJJ,CAKIC,kBALJ,CAMIC,yBANJ,CAOIC,iBAPJ,CAQIC,0BARJ,CASIC,gCATJ,CAWA,GAAIC,SAAU,KAAKA,OAAnB,CACA,GAAIC,UAAW,uBAASD,OAAT,EAAkBE,WAAlB,EAAf,CACA,GAAIC,UAAW,uBAASH,OAAT,EAAkBE,WAAlB,EAAf,CAEA,QAASE,MAAT,EAAiB,CACbd,OAAS,oBAAMU,OAAN,EAAeE,WAAf,GAA6BG,SAA7B,CAAuCb,QAAvC,CAAT,CACAD,kBAAoB,gCAAkBS,OAAlB,EAA2BE,WAA3B,EAApB,CAEAI,wBACH,CAED,QAASC,WAAT,EAAsB,CAClBN,SAASO,EAAT,CAAYC,4BAAkBC,qBAA9B,CAAqDC,sBAArD,CAA6EnB,QAA7E,EACAS,SAASO,EAAT,CAAYC,4BAAkBG,eAA9B,CAA+CC,iBAA/C,CAAkErB,QAAlE,EACAS,SAASO,EAAT,CAAYC,4BAAkBK,0BAA9B,CAA0DC,0BAA1D,CAAsFvB,QAAtF,EACAS,SAASO,EAAT,CAAYC,4BAAkBO,eAA9B,CAA+CC,iBAA/C,CAAkEzB,QAAlE,EACH,CAED,QAAS0B,UAAT,CAAmBC,MAAnB,CAA2B,CACvB,GAAI,CAACA,MAAL,CAAa,OAEb,GAAIA,OAAOzB,aAAX,CAA0B,CACtBA,cAAgByB,OAAOzB,aAAvB,CACH,CAED,GAAIyB,OAAOxB,WAAX,CAAwB,CACpBA,YAAcwB,OAAOxB,WAArB,CACH,CAED,GAAIwB,OAAOvB,kBAAX,CAA+B,CAC3BA,mBAAqBuB,OAAOvB,kBAA5B,CACH,CACJ,CAED,QAASU,sBAAT,EAAiC,CAC7Bb,aAAe,CACX2B,GAAI,CADO,CAEXC,IAAK,IAFM,CAGXC,GAAI,IAHO,CAIXC,GAAI,IAJO,CAKXC,OAAQC,gBAAMC,YAAN,EALG,CAMXC,IAAK,IANM,CAAf,CAQA7B,oBAAsB,EAAtB,CACAD,WAAa,EAAb,CACAE,0BAA4B,EAA5B,CACH,CAED,QAAS6B,kBAAT,CAA2BC,OAA3B,CAAoC,CAChC,GAAI,CACA,GAAI1B,SAAS2B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,EAAiC7B,SAAS2B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BC,OAAnE,CAA4E,CACxE,GAAMC,UAAWC,aAAaN,OAAb,CAAjB,CACA,GAAMO,oBAAqBC,kBAAkBH,QAAlB,CAA3B,CAEAjC,SAASqC,OAAT,CAAiBC,iCAAuBC,mBAAxC,CAA6D,CACzDC,IAAKZ,QAAQY,GAD4C,CAEzDC,UAAWb,QAAQa,SAFsC,CAGzDR,iBAHyD,CAIzDS,WAAYP,kBAJ6C,CAA7D,EAMA,MAAO,CACHQ,IAAKxE,uBADF,CAEHyE,MAAOT,kBAFJ,CAAP,CAIH,CAED,MAAO,KAAP,CACH,CAAC,MAAOU,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASX,aAAT,CAAsBN,OAAtB,CAA+B,CAC3B,GAAI,CACA,GAAIK,UAAW,IAAf,CAEA,GAAIL,QAAQkB,IAAR,GAAiBC,yBAAYC,QAAjC,CAA2C,CACvCC,qBAAqBrB,OAArB,EACA,MAAOsB,oBAAmBtB,OAAnB,CAAP,CACH,CAHD,IAGO,IAAIA,QAAQkB,IAAR,GAAiBC,yBAAYI,kBAAjC,CAAqD,CACxDC,kBAAkBxB,QAAQa,SAA1B,EACA,MAAOY,6BAA4BzB,OAA5B,CAAP,CACH,CAHM,IAGA,IAAIA,QAAQkB,IAAR,GAAiBC,yBAAYO,iBAAjC,CAAoD,CACvD,MAAOC,4BAA2B3B,OAA3B,CAAP,CACH,CAFM,IAEA,IAAIA,QAAQkB,IAAR,GAAiBC,yBAAYS,UAA7B,EAA2C5B,QAAQkB,IAAR,GAAiBC,yBAAYU,oBAA5E,CAAkG,CACrG,MAAOC,sBAAqB9B,OAArB,CAAP,CACH,CAED,MAAOK,SAAP,CACH,CAAC,MAAOY,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASI,qBAAT,CAA8BrB,OAA9B,CAAuC,CACnC,GAAI,CACApC,aAAakC,GAAb,IAAsBF,gBAAMmC,gBAAN,CAAuB/B,QAAQY,GAA/B,CAAtB,CACH,CAAC,MAAOK,CAAP,CAAU,CAEX,CACJ,CAED,QAASK,mBAAT,EAA8B,CAC1B,GAAMU,MAAOC,qBAAb,CAEAD,KAAKE,EAAL,IAAazF,aAAaC,QAA1B,CAEA,MAAOsF,KAAP,CACH,CAED,QAASP,4BAAT,CAAqCzB,OAArC,CAA8C,CAC1C,GAAMgC,MAAOC,qBAAb,CACA,GAAME,gBAAiBC,qBAAqBpC,OAArB,CAAvB,CACA,GAAMqC,GAAIC,4BAA4BtC,OAA5B,CAAV,CACA,GAAMkC,IAAKlC,QAAQa,SAAR,GAAsB,OAAtB,IAAmCpE,aAAaG,KAAhD,CAA0DoD,QAAQa,SAAR,GAAsB,OAAtB,IAAmCpE,aAAaE,KAAhD,CAA0DqD,QAAQa,SAAR,GAAsB,gBAAtB,IAA4CpE,aAAaK,OAAzD,CAAqE,IAApM,CACA,GAAMyF,KAAMC,6BAA6BxC,QAAQa,SAArC,CAAZ,CACA,GAAM4B,IAAKC,mBAAmB1C,QAAQa,SAA3B,CAAX,CACA,GAAM8B,IAAKC,sBAAsB5C,QAAQa,SAA9B,CAAX,CACA,GAAMgC,IAAKC,qBAAqB9C,QAAQa,SAA7B,CAAX,CACA,GAAMtB,IAAK3B,aAAa2B,EAAxB,CAEA,GAAI4C,cAAJ,CAAoB,CAChBH,KAAKe,EAAL,CAAUZ,cAAV,CACH,CAED,GAAID,EAAJ,CAAQ,CACJF,KAAKE,EAAL,CAAUA,EAAV,CACH,CAED,GAAI,CAACc,MAAMX,CAAN,CAAL,CAAe,CACXL,KAAKK,CAAL,CAASA,CAAT,CACH,CAED,GAAI,CAACW,MAAMT,GAAN,CAAL,CAAiB,CACbP,KAAKO,GAAL,CAAWA,GAAX,CACH,CAED,GAAI,CAACS,MAAMP,EAAN,CAAL,CAAgB,CACZT,KAAKS,EAAL,CAAUA,EAAV,CACH,CAED,GAAI,CAACO,MAAML,EAAN,CAAL,CAAgB,CACZX,KAAKW,EAAL,CAAUA,EAAV,CACH,CAED,GAAI,CAACK,MAAMH,EAAN,CAAL,CAAgB,CACZb,KAAKa,EAAL,CAAUA,EAAV,CACH,CAED,GAAI,CAACG,MAAMzD,EAAN,CAAD,EAAcA,KAAO,CAAzB,CAA4B,CACxByC,KAAKzC,EAAL,CAAUA,EAAV,CACH,CAED,GAAItB,oBAAoB+B,QAAQa,SAA5B,CAAJ,CAA4C,CACxCmB,KAAKiB,EAAL,CAAU,IAAV,CACAhF,oBAAoB+B,QAAQa,SAA5B,EAAyC,KAAzC,CACH,CAED,GAAI7C,WAAWgC,QAAQa,SAAnB,GAAiC,CAAC3C,0BAA0B8B,QAAQa,SAAlC,CAAtC,CAAoF,CAChFmB,KAAKkB,EAAL,CAAU,IAAV,CACAlF,WAAWgC,QAAQa,SAAnB,EAAgC,KAAhC,CACA3C,0BAA0B8B,QAAQa,SAAlC,EAA+C,IAA/C,CACH,CAED,MAAOmB,KAAP,CACH,CAED,QAASR,kBAAT,CAA2BX,SAA3B,CAAsC,CAElC,GAAI,CAAC3C,0BAA0BiF,cAA1B,CAAyCtC,SAAzC,CAAL,CAA0D,CACtD3C,0BAA0B2C,SAA1B,EAAuC,KAAvC,CACH,CAED,GAAI,CAAC7C,WAAWmF,cAAX,CAA0BtC,SAA1B,CAAL,CAA2C,CACvC7C,WAAW6C,SAAX,EAAwB,KAAxB,CACH,CAED,GAAI,CAAC5C,oBAAoBkF,cAApB,CAAmCtC,SAAnC,CAAL,CAAoD,CAChD5C,oBAAoB4C,SAApB,EAAiC,KAAjC,CACH,CACJ,CAED,QAASc,2BAAT,EAAsC,CAClC,GAAMK,MAAOC,qBAAb,CAEAD,KAAKE,EAAL,IAAazF,aAAaI,IAA1B,CACAmF,KAAKkB,EAAL,CAAU,IAAV,CAEA,MAAOlB,KAAP,CACH,CAED,QAASF,qBAAT,EAAgC,CAC5B,GAAME,MAAOC,qBAAb,CAEAD,KAAKE,EAAL,IAAazF,aAAaQ,KAA1B,CAEA,MAAO+E,KAAP,CACH,CAGD,QAASC,oBAAT,EAA+B,CAC3B,GAAMD,MAAO,EAAb,CAEAA,KAAKoB,CAAL,CAAS5G,YAAT,CACAwF,KAAKrC,GAAL,CAAWrB,SAAS2B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BR,GAA9B,CAAoCrB,SAAS2B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BR,GAAlE,CAAwE/B,aAAa+B,GAAhG,CACAqC,KAAKlC,GAAL,CAAWxB,SAAS2B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BL,GAA9B,CAAoCxB,SAAS2B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BL,GAAlE,CAAwElC,aAAakC,GAAhG,CAEAkC,KAAKrC,GAAL,IAAcqC,KAAKrC,GAAnB,CACAqC,KAAKlC,GAAL,IAAckC,KAAKlC,GAAnB,CAEA,GAAI,CAACkD,MAAMpF,aAAa2B,EAAnB,CAAD,EAA2B3B,aAAa2B,EAAb,GAAoB,CAA/C,EAAoD3B,aAAa2B,EAAb,GAAoB,IAA5E,CAAkF,CAC9EyC,KAAKzC,EAAL,CAAU3B,aAAa2B,EAAvB,CACH,CAED,GAAI3B,aAAa6B,EAAjB,CAAqB,CACjBuC,KAAKvC,EAAL,CAAU7B,aAAa6B,EAAvB,CACH,CAED,GAAI7B,aAAa8B,EAAjB,CAAqB,CACjBsC,KAAKtC,EAAL,CAAU9B,aAAa8B,EAAvB,CACH,CAED,MAAOsC,KAAP,CACH,CAED,QAASI,qBAAT,CAA8BpC,OAA9B,CAAuC,CACnC,GAAI,CACA,GAAMqD,SAAUrD,QAAQqD,OAAxB,CACA,GAAMC,aAActD,QAAQuD,SAAR,CAAkBD,WAAtC,CAEA,MAAOE,UAASF,YAAYD,OAAZ,EAAqBI,SAArB,CAAiC,IAA1C,CAAP,CACH,CAAC,MAAOxC,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAAS6B,qBAAT,CAA8BjC,SAA9B,CAAyC,CACrC,GAAI,CACA,GAAM6C,MAAO7F,cAAc8F,oBAAd,CAAmC9C,SAAnC,CAAb,CACA,MAAO6C,MAAKE,OAAZ,CACH,CAAC,MAAO3C,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASqB,4BAAT,CAAqCtC,OAArC,CAA8C,CAC1C,GAAI,CACA,MAAO,CAACgD,MAAMhD,QAAQ6D,QAAd,CAAD,CAA2BC,KAAKC,KAAL,CAAW/D,QAAQ6D,QAAR,CAAmB,IAA9B,CAA3B,CAAiE,IAAxE,CACH,CAAC,MAAO5C,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASuB,6BAAT,CAAsC3B,SAAtC,CAAiD,CAC7C,GAAI,CACA,MAAO2C,UAAS3F,cAAcmG,oBAAd,GAAqCC,wBAArC,CAA8DpD,SAA9D,EAA2E,GAApF,EAA2F,GAAlG,CACH,CAAC,MAAOI,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASyB,mBAAT,CAA4B7B,SAA5B,CAAuC,CACnC,GAAI,CACA,GAAMqD,cAAetG,aAAa2B,EAAlC,CACA,GAAM4E,aAAcrG,YAAYsG,qBAAZ,CAAkCvD,SAAlC,CAApB,CAEA,GAAI,CAACmC,MAAMkB,YAAN,CAAD,EAAwB,CAAClB,MAAMmB,WAAN,CAA7B,CAAiD,CAC7C,MAAOX,UAAUW,YAAcD,YAAf,CAA+B,EAAxC,EAA8C,GAArD,CACH,CAED,MAAO,KAAP,CACH,CAAC,MAAOjD,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAAS2B,sBAAT,CAA+B/B,SAA/B,CAA0C,CACtC,GAAI,CACA,GAAMsD,aAAcrG,YAAYsG,qBAAZ,CAAkCvD,SAAlC,CAApB,CAEA,GAAI,CAACmC,MAAMmB,WAAN,CAAL,CAAyB,CACrB,MAAOX,UAASW,YAAc,EAAvB,EAA6B,GAApC,CACH,CAED,MAAO,KAAP,CACH,CAAC,MAAOlD,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASnC,uBAAT,CAAgCkD,IAAhC,CAAsC,CAClC,GAAI,CACApE,aAAa2B,EAAb,CAAkByC,KAAKkC,YAAvB,CACH,CAAC,MAAOjD,CAAP,CAAU,CAEX,CACJ,CAED,QAASjC,kBAAT,CAA2BgD,IAA3B,CAAiC,CAC7B,GAAI,CACA,GAAMqC,WAAY3G,kBAAkB4G,YAAlB,CAA+BtC,KAAKA,IAApC,CAAlB,CACA,GAAMvC,IAAK4E,aAAehH,aAAaE,IAA5B,IAAwCF,aAAaC,GAAhE,CACA,GAAMoC,IAAKsC,KAAKuC,QAAL,EAAiBvC,KAAKuC,QAAL,GAAkB,KAAnC,IAA8CrH,kBAAkBE,GAAhE,IAA2EF,kBAAkBC,IAAxG,CAEAS,aAAa6B,EAAb,IAAqBA,EAArB,CACA7B,aAAa8B,EAAb,IAAqBA,EAArB,CACH,CAAC,MAAOuB,CAAP,CAAU,CACX,CACJ,CAED,QAAS/B,2BAAT,CAAoC8C,IAApC,CAA0C,CACtC,GAAI,CACA,GAAIA,KAAKwC,KAAL,EAAcxC,KAAKnB,SAAvB,CAAkC,CAC9B,GAAImB,KAAKwC,KAAL,GAAe5F,4BAAkB6F,YAArC,CAAmD,CAE/C,GAAI,CAACxG,oBAAoB+D,KAAKnB,SAAzB,CAAL,CAA0C,CACtC5C,oBAAoB+D,KAAKnB,SAAzB,EAAsC,IAAtC,CACH,CACD,GAAI,CAAC7C,WAAWgE,KAAKnB,SAAhB,CAAL,CAAiC,CAC7B7C,WAAWgE,KAAKnB,SAAhB,EAA6B,IAA7B,CACH,CACJ,CACJ,CACJ,CAAC,MAAOI,CAAP,CAAU,CAEX,CACJ,CAED,QAAS7B,kBAAT,EAA6B,CACzB,IAAK,GAAI2B,IAAT,GAAgB9C,oBAAhB,CAAqC,CACjC,GAAIA,oBAAoBkF,cAApB,CAAmCpC,GAAnC,CAAJ,CAA6C,CACzC9C,oBAAoB8C,GAApB,EAA2B,IAA3B,CACH,CACJ,CAED,IAAK,GAAIA,KAAT,GAAgB/C,WAAhB,CAA4B,CACxB,GAAIA,WAAWmF,cAAX,CAA0BpC,IAA1B,CAAJ,CAAoC,CAChC/C,WAAW+C,IAAX,EAAkB,IAAlB,CACH,CACJ,CACJ,CAED,QAASP,kBAAT,CAA2BH,QAA3B,CAAqC,CACjC,GAAI,CACA,GAAI,CAACA,QAAL,CAAe,CACX,MAAO,KAAP,CACH,CACD,GAAMqE,MAAOC,OAAOD,IAAP,CAAYrE,QAAZ,EAAsBuE,IAAtB,CAA2B,SAACC,CAAD,CAAIC,CAAJ,QAAUD,GAAIC,CAAd,EAA3B,CAAb,CACA,GAAMC,QAASL,KAAKK,MAApB,CAEA,GAAIjE,YAAa4D,KAAKM,MAAL,CAAY,SAACC,GAAD,CAAMlE,GAAN,CAAWmE,KAAX,CAAqB,CAC9C,GAAInE,MAAQ,GAAR,EAAeV,SAASU,GAAT,IAAkB,CAArC,CAAwC,MAAOkE,IAAP,CACxC,GAAI,MAAO5E,UAASU,GAAT,CAAP,GAAyB,QAAzB,GAAsCA,MAAQ,IAAR,EAAgBA,MAAQ,IAAxB,EAAgCA,MAAQ,IAA9E,CAAJ,CAAyF,CACrF,GAAIoE,QAAS9E,SAASU,GAAT,EAAcqE,OAAd,CAAsB,IAAtB,CAA4B,IAA5B,CAAb,CACAH,KAAUlE,GAAV,MAAkBoE,MAAlB,KACH,CAHD,IAGO,CACHF,KAAUlE,GAAV,KAAiBV,SAASU,GAAT,CAAjB,CACH,CACD,GAAImE,MAAQH,OAAS,CAArB,CAAwB,CACpBE,KAAO,GAAP,CACH,CAED,MAAOA,IAAP,CACH,CAbgB,CAad,EAbc,CAAjB,CAeAnE,WAAaA,WAAWsE,OAAX,CAAmB,QAAnB,CAA6B,EAA7B,CAAb,CACAtE,WAAauE,mBAAmBvE,UAAnB,CAAb,CAEA,MAAOA,WAAP,CACH,CAAC,MAAOG,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASqE,MAAT,EAAiB,CACblH,SAASmH,GAAT,CAAa3G,4BAAkBC,qBAA/B,CAAsDC,sBAAtD,CAA8E,IAA9E,EACAV,SAASmH,GAAT,CAAa3G,4BAAkBG,eAA/B,CAAgDC,iBAAhD,CAAmE,IAAnE,EACAZ,SAASmH,GAAT,CAAa3G,4BAAkBK,0BAA/B,CAA2DC,0BAA3D,CAAuFvB,QAAvF,EACAS,SAASmH,GAAT,CAAa3G,4BAAkBO,eAA/B,CAAgDC,iBAAhD,CAAmEzB,QAAnE,EAEAc,wBACH,CAEDd,SAAW,CACPoC,mCADO,CAEPV,mBAFO,CAGPiG,WAHO,CAIP5G,qBAJO,CAAX,CAOAH,QAEA,MAAOZ,SAAP,CACH,CAEDH,UAAUgI,qBAAV,CAAkC,WAAlC,C,gBACeC,uBAAaC,mBAAb,CAAiClI,SAAjC,C","file":"CmcdModel.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../../core/EventBus';\r\nimport MediaPlayerEvents from '../MediaPlayerEvents';\r\nimport MetricsReportingEvents from '../metrics/MetricsReportingEvents';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Debug from '../../core/Debug';\r\nimport Settings from '../../core/Settings';\r\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\r\nimport DashManifestModel from '../../dash/models/DashManifestModel';\r\nimport Utils from '../../core/Utils';\r\n\r\nconst CMCD_REQUEST_FIELD_NAME = 'CMCD';\r\nconst CMCD_VERSION = 1;\r\nconst OBJECT_TYPES = {\r\n    MANIFEST: 'm',\r\n    AUDIO: 'a',\r\n    VIDEO: 'v',\r\n    INIT: 'i',\r\n    CAPTION: 'c',\r\n    ISOBMFF_TEXT_TRACK: 'tt',\r\n    ENCRYPTION_KEY: 'k',\r\n    OTHER: 'o'\r\n};\r\nconst STREAMING_FORMATS = {\r\n    DASH: 'd',\r\n    MSS: 's'\r\n};\r\nconst STREAM_TYPES = {\r\n    VOD: 'v',\r\n    LIVE: 'l'\r\n};\r\n\r\nfunction CmcdModel() {\r\n\r\n    let logger,\r\n        dashManifestModel,\r\n        instance,\r\n        internalData,\r\n        abrController,\r\n        dashMetrics,\r\n        playbackController,\r\n        _isStartup,\r\n        _bufferLevelStarved,\r\n        _initialMediaRequestsDone;\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n    let settings = Settings(context).getInstance();\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        dashManifestModel = DashManifestModel(context).getInstance();\r\n\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    function initialize() {\r\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\r\n        eventBus.on(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, instance);\r\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\r\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.abrController) {\r\n            abrController = config.abrController;\r\n        }\r\n\r\n        if (config.dashMetrics) {\r\n            dashMetrics = config.dashMetrics;\r\n        }\r\n\r\n        if (config.playbackController) {\r\n            playbackController = config.playbackController;\r\n        }\r\n    }\r\n\r\n    function _resetInitialSettings() {\r\n        internalData = {\r\n            pr: 1,\r\n            nor: null,\r\n            st: null,\r\n            sf: null,\r\n            sid: `${Utils.generateUuid()}`,\r\n            cid: null\r\n        };\r\n        _bufferLevelStarved = {};\r\n        _isStartup = {};\r\n        _initialMediaRequestsDone = {};\r\n    }\r\n\r\n    function getQueryParameter(request) {\r\n        try {\r\n            if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\r\n                const cmcdData = _getCmcdData(request);\r\n                const finalPayloadString = _buildFinalString(cmcdData);\r\n\r\n                eventBus.trigger(MetricsReportingEvents.CMCD_DATA_GENERATED, {\r\n                    url: request.url,\r\n                    mediaType: request.mediaType,\r\n                    cmcdData,\r\n                    cmcdString: finalPayloadString\r\n                });\r\n                return {\r\n                    key: CMCD_REQUEST_FIELD_NAME,\r\n                    value: finalPayloadString\r\n                };\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getCmcdData(request) {\r\n        try {\r\n            let cmcdData = null;\r\n\r\n            if (request.type === HTTPRequest.MPD_TYPE) {\r\n                _setDefaultContentId(request);\r\n                return _getCmcdDataForMpd(request);\r\n            } else if (request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\r\n                _initForMediaType(request.mediaType);\r\n                return _getCmcdDataForMediaSegment(request);\r\n            } else if (request.type === HTTPRequest.INIT_SEGMENT_TYPE) {\r\n                return _getCmcdDataForInitSegment(request);\r\n            } else if (request.type === HTTPRequest.OTHER_TYPE || request.type === HTTPRequest.XLINK_EXPANSION_TYPE) {\r\n                return _getCmcdDataForOther(request);\r\n            }\r\n\r\n            return cmcdData;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _setDefaultContentId(request) {\r\n        try {\r\n            internalData.cid = `${Utils.generateHashCode(request.url)}`;\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    function _getCmcdDataForMpd() {\r\n        const data = _getGenericCmcdData();\r\n\r\n        data.ot = `${OBJECT_TYPES.MANIFEST}`;\r\n\r\n        return data;\r\n    }\r\n\r\n    function _getCmcdDataForMediaSegment(request) {\r\n        const data = _getGenericCmcdData();\r\n        const encodedBitrate = _getBitrateByRequest(request);\r\n        const d = _getObjectDurationByRequest(request);\r\n        const ot = request.mediaType === 'video' ? `${OBJECT_TYPES.VIDEO}` : request.mediaType === 'audio' ? `${OBJECT_TYPES.AUDIO}` : request.mediaType === 'fragmentedText' ? `${OBJECT_TYPES.CAPTION}` : null;\r\n        const mtp = _getMeasuredThroughputByType(request.mediaType);\r\n        const dl = _getDeadlineByType(request.mediaType);\r\n        const bl = _getBufferLevelByType(request.mediaType);\r\n        const tb = _getTopBitrateByType(request.mediaType);\r\n        const pr = internalData.pr;\r\n\r\n        if (encodedBitrate) {\r\n            data.br = encodedBitrate;\r\n        }\r\n\r\n        if (ot) {\r\n            data.ot = ot;\r\n        }\r\n\r\n        if (!isNaN(d)) {\r\n            data.d = d;\r\n        }\r\n\r\n        if (!isNaN(mtp)) {\r\n            data.mtp = mtp;\r\n        }\r\n\r\n        if (!isNaN(dl)) {\r\n            data.dl = dl;\r\n        }\r\n\r\n        if (!isNaN(bl)) {\r\n            data.bl = bl;\r\n        }\r\n\r\n        if (!isNaN(tb)) {\r\n            data.tb = tb;\r\n        }\r\n\r\n        if (!isNaN(pr) && pr !== 1) {\r\n            data.pr = pr;\r\n        }\r\n\r\n        if (_bufferLevelStarved[request.mediaType]) {\r\n            data.bs = true;\r\n            _bufferLevelStarved[request.mediaType] = false;\r\n        }\r\n\r\n        if (_isStartup[request.mediaType] || !_initialMediaRequestsDone[request.mediaType]) {\r\n            data.su = true;\r\n            _isStartup[request.mediaType] = false;\r\n            _initialMediaRequestsDone[request.mediaType] = true;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    function _initForMediaType(mediaType) {\r\n\r\n        if (!_initialMediaRequestsDone.hasOwnProperty(mediaType)) {\r\n            _initialMediaRequestsDone[mediaType] = false;\r\n        }\r\n\r\n        if (!_isStartup.hasOwnProperty(mediaType)) {\r\n            _isStartup[mediaType] = false;\r\n        }\r\n\r\n        if (!_bufferLevelStarved.hasOwnProperty(mediaType)) {\r\n            _bufferLevelStarved[mediaType] = false;\r\n        }\r\n    }\r\n\r\n    function _getCmcdDataForInitSegment() {\r\n        const data = _getGenericCmcdData();\r\n\r\n        data.ot = `${OBJECT_TYPES.INIT}`;\r\n        data.su = true;\r\n\r\n        return data;\r\n    }\r\n\r\n    function _getCmcdDataForOther() {\r\n        const data = _getGenericCmcdData();\r\n\r\n        data.ot = `${OBJECT_TYPES.OTHER}`;\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    function _getGenericCmcdData() {\r\n        const data = {};\r\n\r\n        data.v = CMCD_VERSION;\r\n        data.sid = settings.get().streaming.cmcd.sid ? settings.get().streaming.cmcd.sid : internalData.sid;\r\n        data.cid = settings.get().streaming.cmcd.cid ? settings.get().streaming.cmcd.cid : internalData.cid;\r\n\r\n        data.sid = `${data.sid}`;\r\n        data.cid = `${data.cid}`;\r\n\r\n        if (!isNaN(internalData.pr) && internalData.pr !== 1 && internalData.pr !== null) {\r\n            data.pr = internalData.pr;\r\n        }\r\n\r\n        if (internalData.st) {\r\n            data.st = internalData.st;\r\n        }\r\n\r\n        if (internalData.sf) {\r\n            data.sf = internalData.sf;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    function _getBitrateByRequest(request) {\r\n        try {\r\n            const quality = request.quality;\r\n            const bitrateList = request.mediaInfo.bitrateList;\r\n\r\n            return parseInt(bitrateList[quality].bandwidth / 1000);\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getTopBitrateByType(mediaType) {\r\n        try {\r\n            const info = abrController.getTopBitrateInfoFor(mediaType);\r\n            return info.bitrate;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getObjectDurationByRequest(request) {\r\n        try {\r\n            return !isNaN(request.duration) ? Math.round(request.duration * 1000) : null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getMeasuredThroughputByType(mediaType) {\r\n        try {\r\n            return parseInt(abrController.getThroughputHistory().getSafeAverageThroughput(mediaType) / 100) * 100;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getDeadlineByType(mediaType) {\r\n        try {\r\n            const playbackRate = internalData.pr;\r\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\r\n\r\n            if (!isNaN(playbackRate) && !isNaN(bufferLevel)) {\r\n                return parseInt((bufferLevel / playbackRate) * 10) * 100;\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getBufferLevelByType(mediaType) {\r\n        try {\r\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\r\n\r\n            if (!isNaN(bufferLevel)) {\r\n                return parseInt(bufferLevel * 10) * 100;\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _onPlaybackRateChanged(data) {\r\n        try {\r\n            internalData.pr = data.playbackRate;\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    function _onManifestLoaded(data) {\r\n        try {\r\n            const isDynamic = dashManifestModel.getIsDynamic(data.data);\r\n            const st = isDynamic ? `${STREAM_TYPES.LIVE}` : `${STREAM_TYPES.VOD}`;\r\n            const sf = data.protocol && data.protocol === 'MSS' ? `${STREAMING_FORMATS.MSS}` : `${STREAMING_FORMATS.DASH}`;\r\n\r\n            internalData.st = `${st}`;\r\n            internalData.sf = `${sf}`;\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    function _onBufferLevelStateChanged(data) {\r\n        try {\r\n            if (data.state && data.mediaType) {\r\n                if (data.state === MediaPlayerEvents.BUFFER_EMPTY) {\r\n\r\n                    if (!_bufferLevelStarved[data.mediaType]) {\r\n                        _bufferLevelStarved[data.mediaType] = true;\r\n                    }\r\n                    if (!_isStartup[data.mediaType]) {\r\n                        _isStartup[data.mediaType] = true;\r\n                    }\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    function _onPlaybackSeeked() {\r\n        for (let key in _bufferLevelStarved) {\r\n            if (_bufferLevelStarved.hasOwnProperty(key)) {\r\n                _bufferLevelStarved[key] = true;\r\n            }\r\n        }\r\n\r\n        for (let key in _isStartup) {\r\n            if (_isStartup.hasOwnProperty(key)) {\r\n                _isStartup[key] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _buildFinalString(cmcdData) {\r\n        try {\r\n            if (!cmcdData) {\r\n                return null;\r\n            }\r\n            const keys = Object.keys(cmcdData).sort((a, b) => a > b);\r\n            const length = keys.length;\r\n\r\n            let cmcdString = keys.reduce((acc, key, index) => {\r\n                if (key === 'v' && cmcdData[key] === 1) return acc;\r\n                if (typeof cmcdData[key] === 'string' && (key !== 'ot' || key !== 'sf' || key !== 'st')) {\r\n                    let string = cmcdData[key].replace(/\"/g, '\\\"');\r\n                    acc += `${key}=\"${string}\"`;\r\n                } else {\r\n                    acc += `${key}=${cmcdData[key]}`;\r\n                }\r\n                if (index < length - 1) {\r\n                    acc += ',';\r\n                }\r\n\r\n                return acc;\r\n            }, '');\r\n\r\n            cmcdString = cmcdString.replace(/=true/g, '');\r\n            cmcdString = encodeURIComponent(cmcdString);\r\n\r\n            return cmcdString;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, this);\r\n        eventBus.off(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, this);\r\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\r\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\r\n\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    instance = {\r\n        getQueryParameter,\r\n        setConfig,\r\n        reset,\r\n        initialize\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nCmcdModel.__dashjs_factory_name = 'CmcdModel';\r\nexport default FactoryMaker.getSingletonFactory(CmcdModel);\r\n"]}