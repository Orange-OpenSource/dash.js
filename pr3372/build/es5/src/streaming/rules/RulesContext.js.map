{"version":3,"sources":["../../../../../src/streaming/rules/RulesContext.js"],"names":["RulesContext","config","instance","abrController","switchHistory","droppedFramesHistory","currentRequest","bufferOccupancyABR","useBufferOccupancyABR","scheduleController","streamProcessor","getScheduleController","representationInfo","getRepresentationInfo","getMediaType","mediaInfo","getMediaInfo","type","getStreamInfo","streamInfo","getAbrController","getSwitchHistory","getDroppedFramesHistory","getCurrentRequest","__dashjs_factory_name","FactoryMaker","getClassFactory"],"mappings":"sEA+BA,qD,4IAEA,QAASA,aAAT,CAAsBC,MAAtB,CAA8B,CAE1BA,OAASA,QAAU,EAAnB,CACA,GAAIC,gBAAJ,CACA,GAAMC,eAAgBF,OAAOE,aAA7B,CACA,GAAMC,eAAgBH,OAAOG,aAA7B,CACA,GAAMC,sBAAuBJ,OAAOI,oBAApC,CACA,GAAMC,gBAAiBL,OAAOK,cAA9B,CACA,GAAMC,oBAAqBN,OAAOO,qBAAlC,CACA,GAAMC,oBAAqBR,OAAOS,eAAP,CAAyBT,OAAOS,eAAP,CAAuBC,qBAAvB,EAAzB,CAA0E,IAArG,CACA,GAAMC,oBAAqBX,OAAOS,eAAP,CAAyBT,OAAOS,eAAP,CAAuBG,qBAAvB,EAAzB,CAA0E,IAArG,CAEA,QAASC,aAAT,EAAwB,CACpB,GAAMC,WAAYC,cAAlB,CACA,MAAOD,WAAYA,UAAUE,IAAtB,CAA6B,IAApC,CACH,CAED,QAASC,cAAT,EAAyB,CACrB,GAAMH,WAAYC,cAAlB,CACA,MAAOD,WAAYA,UAAUI,UAAtB,CAAmC,IAA1C,CACH,CAED,QAASH,aAAT,EAAwB,CACpB,MAAOJ,oBAAqBA,mBAAmBG,SAAxC,CAAoD,IAA3D,CACH,CAED,QAASF,sBAAT,EAAiC,CAC7B,MAAOD,mBAAP,CACH,CAED,QAASD,sBAAT,EAAiC,CAC7B,MAAOF,mBAAP,CACH,CAED,QAASW,iBAAT,EAA4B,CACxB,MAAOjB,cAAP,CACH,CAED,QAASkB,iBAAT,EAA4B,CACxB,MAAOjB,cAAP,CACH,CAED,QAASkB,wBAAT,EAAmC,CAC/B,MAAOjB,qBAAP,CACH,CAED,QAASkB,kBAAT,EAA6B,CACzB,MAAOjB,eAAP,CACH,CAED,QAASE,sBAAT,EAAiC,CAC7B,MAAOD,mBAAP,CACH,CAEDL,SAAW,CACPY,aAAcA,YADP,CAEPE,aAAcA,YAFP,CAGPM,wBAAyBA,uBAHlB,CAIPC,kBAAmBA,iBAJZ,CAKPF,iBAAkBA,gBALX,CAMPH,cAAeA,aANR,CAOPP,sBAAuBA,qBAPhB,CAQPS,iBAAkBA,gBARX,CASPP,sBAAuBA,qBAThB,CAUPL,sBAAuBA,qBAVhB,CAAX,CAaA,MAAON,SAAP,CACH,CArGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuGAF,aAAawB,qBAAb,CAAqC,cAArC,C,gBACeC,uBAAaC,eAAb,CAA6B1B,YAA7B,C","file":"RulesContext.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nfunction RulesContext(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    const abrController = config.abrController;\r\n    const switchHistory = config.switchHistory;\r\n    const droppedFramesHistory = config.droppedFramesHistory;\r\n    const currentRequest = config.currentRequest;\r\n    const bufferOccupancyABR = config.useBufferOccupancyABR;\r\n    const scheduleController = config.streamProcessor ? config.streamProcessor.getScheduleController() : null;\r\n    const representationInfo = config.streamProcessor ? config.streamProcessor.getRepresentationInfo() : null;\r\n\r\n    function getMediaType() {\r\n        const mediaInfo = getMediaInfo();\r\n        return mediaInfo ? mediaInfo.type : null;\r\n    }\r\n\r\n    function getStreamInfo() {\r\n        const mediaInfo = getMediaInfo();\r\n        return mediaInfo ? mediaInfo.streamInfo : null;\r\n    }\r\n\r\n    function getMediaInfo() {\r\n        return representationInfo ? representationInfo.mediaInfo : null;\r\n    }\r\n\r\n    function getRepresentationInfo() {\r\n        return representationInfo;\r\n    }\r\n\r\n    function getScheduleController() {\r\n        return scheduleController;\r\n    }\r\n\r\n    function getAbrController() {\r\n        return abrController;\r\n    }\r\n\r\n    function getSwitchHistory() {\r\n        return switchHistory;\r\n    }\r\n\r\n    function getDroppedFramesHistory() {\r\n        return droppedFramesHistory;\r\n    }\r\n\r\n    function getCurrentRequest() {\r\n        return currentRequest;\r\n    }\r\n\r\n    function useBufferOccupancyABR() {\r\n        return bufferOccupancyABR;\r\n    }\r\n\r\n    instance = {\r\n        getMediaType: getMediaType,\r\n        getMediaInfo: getMediaInfo,\r\n        getDroppedFramesHistory: getDroppedFramesHistory,\r\n        getCurrentRequest: getCurrentRequest,\r\n        getSwitchHistory: getSwitchHistory,\r\n        getStreamInfo: getStreamInfo,\r\n        getScheduleController: getScheduleController,\r\n        getAbrController: getAbrController,\r\n        getRepresentationInfo: getRepresentationInfo,\r\n        useBufferOccupancyABR: useBufferOccupancyABR\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nRulesContext.__dashjs_factory_name = 'RulesContext';\r\nexport default FactoryMaker.getClassFactory(RulesContext);\r\n"]}