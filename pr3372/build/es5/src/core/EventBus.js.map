{"version":3,"sources":["../../../../src/core/EventBus.js"],"names":["EVENT_PRIORITY_LOW","EVENT_PRIORITY_HIGH","EventBus","handlers","on","type","listener","scope","priority","Error","getHandlerIdx","handler","callback","getStreamId","streamId","getType","mediaType","inserted","some","item","idx","splice","push","off","trigger","payload","filters","hasOwnProperty","filter","eventHandlers","forEach","call","index","reset","instance","__dashjs_factory_name","factory","FactoryMaker","getSingletonFactory","updateSingletonFactory"],"mappings":"sEA8BA,4C,4IAEA,GAAMA,oBAAqB,CAA3B,CAhCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCA,GAAMC,qBAAsB,IAA5B,CAEA,QAASC,SAAT,EAAoB,CAEhB,GAAIC,UAAW,EAAf,CAEA,QAASC,GAAT,CAAYC,IAAZ,CAAkBC,QAAlB,CAA4BC,KAA5B,CAAkE,IAA/BC,SAA+B,2DAApBR,kBAAoB,CAE9D,GAAI,CAACK,IAAL,CAAW,CACP,KAAM,IAAII,MAAJ,CAAU,wCAAV,CAAN,CACH,CACD,GAAI,CAACH,QAAD,EAAa,MAAQA,SAAR,GAAsB,UAAvC,CAAmD,CAC/C,KAAM,IAAIG,MAAJ,CAAU,gCAAkCH,QAA5C,CAAN,CACH,CAED,GAAII,cAAcL,IAAd,CAAoBC,QAApB,CAA8BC,KAA9B,GAAwC,CAA5C,CAA+C,OAE/CJ,SAASE,IAAT,EAAiBF,SAASE,IAAT,GAAkB,EAAnC,CAEA,GAAMM,SAAU,CACZC,SAAUN,QADE,CAEZC,MAAOA,KAFK,CAGZC,SAAUA,QAHE,CAAhB,CAMA,GAAID,OAASA,MAAMM,WAAnB,CAAgC,CAC5BF,QAAQG,QAAR,CAAmBP,MAAMM,WAAN,EAAnB,CACH,CACD,GAAIN,OAASA,MAAMQ,OAAnB,CAA4B,CACxBJ,QAAQK,SAAR,CAAoBT,MAAMQ,OAAN,EAApB,CACH,CAED,GAAME,UAAWd,SAASE,IAAT,EAAea,IAAf,CAAoB,SAACC,IAAD,CAAQC,GAAR,CAAgB,CACjD,GAAID,MAAQX,SAAWW,KAAKX,QAA5B,CAAuC,CACnCL,SAASE,IAAT,EAAegB,MAAf,CAAsBD,GAAtB,CAA2B,CAA3B,CAA8BT,OAA9B,EACA,MAAO,KAAP,CACH,CACJ,CALgB,CAAjB,CAOA,GAAI,CAACM,QAAL,CAAe,CACXd,SAASE,IAAT,EAAeiB,IAAf,CAAoBX,OAApB,EACH,CACJ,CAED,QAASY,IAAT,CAAalB,IAAb,CAAmBC,QAAnB,CAA6BC,KAA7B,CAAoC,CAChC,GAAI,CAACF,IAAD,EAAS,CAACC,QAAV,EAAsB,CAACH,SAASE,IAAT,CAA3B,CAA2C,OAC3C,GAAMe,KAAMV,cAAcL,IAAd,CAAoBC,QAApB,CAA8BC,KAA9B,CAAZ,CACA,GAAIa,IAAM,CAAV,CAAa,OACbjB,SAASE,IAAT,EAAee,GAAf,EAAsB,IAAtB,CACH,CAED,QAASI,QAAT,CAAiBnB,IAAjB,CAAmD,IAA5BoB,QAA4B,2DAAlB,EAAkB,IAAdC,QAAc,2DAAJ,EAAI,CAC/C,GAAI,CAACrB,IAAD,EAAS,CAACF,SAASE,IAAT,CAAd,CAA8B,OAE9BoB,QAAUA,SAAW,EAArB,CAEA,GAAIA,QAAQE,cAAR,CAAuB,MAAvB,CAAJ,CAAoC,KAAM,IAAIlB,MAAJ,CAAU,mDAAV,CAAN,CAEpCgB,QAAQpB,IAAR,CAAeA,IAAf,CAEAF,SAASE,IAAT,EAAiBF,SAASE,IAAT,EAAeuB,MAAf,CAAsB,SAACT,IAAD,QAAUA,KAAV,EAAtB,CAAjB,CACA,GAAMU,eAAgB1B,SAASE,IAAT,EAAeuB,MAAf,CAAsB,cAAQ,CAChD,GAAIF,QAAQZ,QAAR,EAAoBK,KAAKL,QAAzB,EAAqCK,KAAKL,QAAL,GAAkBY,QAAQZ,QAAnE,CAA6E,MAAO,MAAP,CAC7E,GAAIY,QAAQV,SAAR,EAAqBG,KAAKH,SAA1B,EAAuCG,KAAKH,SAAL,GAAmBU,QAAQV,SAAtE,CAAiF,MAAO,MAAP,CACjF,MAAO,KAAP,CACH,CAJqB,CAAtB,CAMAa,cAAcC,OAAd,CAAsB,wBAAWnB,UAAWA,QAAQC,QAAR,CAAiBmB,IAAjB,CAAsBpB,QAAQJ,KAA9B,CAAqCkB,OAArC,CAAtB,EAAtB,EACH,CAED,QAASf,cAAT,CAAuBL,IAAvB,CAA6BC,QAA7B,CAAuCC,KAAvC,CAA8C,CAE1C,GAAIa,KAAM,CAAC,CAAX,CAEA,GAAI,CAACjB,SAASE,IAAT,CAAL,CAAqB,MAAOe,IAAP,CAErBjB,SAASE,IAAT,EAAea,IAAf,CAAqB,SAACC,IAAD,CAAOa,KAAP,CAAiB,CAClC,GAAIb,MAAQA,KAAKP,QAAL,GAAkBN,QAA1B,GAAuC,CAACC,KAAD,EAAUA,QAAUY,KAAKZ,KAAhE,CAAJ,CAA4E,CACxEa,IAAMY,KAAN,CACA,MAAO,KAAP,CACH,CACJ,CALD,EAMA,MAAOZ,IAAP,CACH,CAED,QAASa,MAAT,EAAiB,CACb9B,SAAW,EAAX,CACH,CAED,GAAM+B,UAAW,CACb9B,GAAIA,EADS,CAEbmB,IAAKA,GAFQ,CAGbC,QAASA,OAHI,CAIbS,MAAOA,KAJM,CAAjB,CAOA,MAAOC,SAAP,CACH,CAEDhC,SAASiC,qBAAT,CAAiC,UAAjC,CACA,GAAMC,SAAUC,uBAAaC,mBAAb,CAAiCpC,QAAjC,CAAhB,CACAkC,QAAQpC,kBAAR,CAA6BA,kBAA7B,CACAoC,QAAQnC,mBAAR,CAA8BA,mBAA9B,CACAoC,uBAAaE,sBAAb,CAAoCrC,SAASiC,qBAA7C,CAAoEC,OAApE,E,gBACeA,O","file":"EventBus.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from './FactoryMaker';\r\n\r\nconst EVENT_PRIORITY_LOW = 0;\r\nconst EVENT_PRIORITY_HIGH = 5000;\r\n\r\nfunction EventBus() {\r\n\r\n    let handlers = {};\r\n\r\n    function on(type, listener, scope, priority = EVENT_PRIORITY_LOW) {\r\n\r\n        if (!type) {\r\n            throw new Error('event type cannot be null or undefined');\r\n        }\r\n        if (!listener || typeof (listener) !== 'function') {\r\n            throw new Error('listener must be a function: ' + listener);\r\n        }\r\n\r\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\r\n\r\n        handlers[type] = handlers[type] || [];\r\n\r\n        const handler = {\r\n            callback: listener,\r\n            scope: scope,\r\n            priority: priority\r\n        };\r\n\r\n        if (scope && scope.getStreamId) {\r\n            handler.streamId = scope.getStreamId();\r\n        }\r\n        if (scope && scope.getType) {\r\n            handler.mediaType = scope.getType();\r\n        }\r\n\r\n        const inserted = handlers[type].some((item , idx) => {\r\n            if (item && priority > item.priority ) {\r\n                handlers[type].splice(idx, 0, handler);\r\n                return true;\r\n            }\r\n        });\r\n\r\n        if (!inserted) {\r\n            handlers[type].push(handler);\r\n        }\r\n    }\r\n\r\n    function off(type, listener, scope) {\r\n        if (!type || !listener || !handlers[type]) return;\r\n        const idx = getHandlerIdx(type, listener, scope);\r\n        if (idx < 0) return;\r\n        handlers[type][idx] = null;\r\n    }\r\n\r\n    function trigger(type, payload = {}, filters = {}) {\r\n        if (!type || !handlers[type]) return;\r\n\r\n        payload = payload || {};\r\n\r\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\r\n\r\n        payload.type = type;\r\n\r\n        handlers[type] = handlers[type].filter((item) => item);\r\n        const eventHandlers = handlers[type].filter(item => {\r\n            if (filters.streamId && item.streamId && item.streamId !== filters.streamId) return false;\r\n            if (filters.mediaType && item.mediaType && item.mediaType !== filters.mediaType) return false;\r\n            return true;\r\n        });\r\n\r\n        eventHandlers.forEach(handler => handler && handler.callback.call(handler.scope, payload));\r\n    }\r\n\r\n    function getHandlerIdx(type, listener, scope) {\r\n\r\n        let idx = -1;\r\n\r\n        if (!handlers[type]) return idx;\r\n\r\n        handlers[type].some( (item, index) => {\r\n            if (item && item.callback === listener && (!scope || scope === item.scope)) {\r\n                idx = index;\r\n                return true;\r\n            }\r\n        });\r\n        return idx;\r\n    }\r\n\r\n    function reset() {\r\n        handlers = {};\r\n    }\r\n\r\n    const instance = {\r\n        on: on,\r\n        off: off,\r\n        trigger: trigger,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nEventBus.__dashjs_factory_name = 'EventBus';\r\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\r\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\r\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\r\nFactoryMaker.updateSingletonFactory(EventBus.__dashjs_factory_name, factory);\r\nexport default factory;\r\n"]}