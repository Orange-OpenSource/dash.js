{"version":3,"sources":["../../../../src/dash/DashAdapter.js"],"names":["DashAdapter","instance","dashManifestModel","voPeriods","voAdaptations","currentMediaInfo","constants","cea608parser","context","PROFILE_DVB","setup","getInstance","reset","getVoAdaptations","getVoPeriods","setConfig","config","errHandler","BASE64","convertRepresentationToRepresentationInfo","voRepresentation","representationInfo","RepresentationInfo","realAdaptation","adaptation","period","mpd","manifest","Period_asArray","index","AdaptationSet_asArray","realRepresentation","getRepresentationFor","id","quality","bandwidth","getBandwidth","DVRWindow","segmentAvailabilityRange","fragmentDuration","segmentDuration","segments","length","duration","NaN","MSETimeOffset","mediaInfo","convertAdaptationToMediaInfo","getMediaInfoForType","streamInfo","type","selectedVoPeriod","getPeriodForStreamInfo","periodId","getAdaptationsForPeriod","getAdaptationForType","idx","getIndexForAdaptation","getIsMain","getRolesForAdaptation","filter","role","value","DashConstants","MAIN","periodIndex","adaptations","getAdaptationsForType","allMediaInfoForType","getAllMediaInfoForType","i","ln","areMediaInfosEqual","mInfoOne","mInfoTwo","sameId","sameViewpoint","viewpoint","sameLang","lang","sameRoles","roles","toString","sameAccessibility","accessibility","sameAudioChannelConfiguration","audioChannelConfiguration","externalManifest","voLocalPeriods","mediaArr","data","media","j","checkConfig","getRegularPeriods","adaptationsForType","EMBEDDED_TEXT","VIDEO","accessibilityLength","indexOf","substring","parts","split","call","convertVideoInfoToEmbeddedTextInfo","push","CC1","IMAGE","convertVideoInfoToThumbnailInfo","updatePeriods","newManifest","getStreamsInfo","maxStreamsInfo","streams","convertPeriodToStreamInfo","getRealAdaptation","getAdaptationForId","getAdaptationForIndex","getVoRepresentations","voReps","voAdaptation","getAdaptationForMediaInfo","getRepresentationsForAdaptation","getEvent","eventBox","eventStreams","startTime","event","Event","schemeIdUri","scheme_id_uri","timescale","presentationTimeDelta","calculatedPresentationTime","version","presentation_time_delta","event_duration","messageData","message_data","eventStream","getEventsFor","info","events","StreamInfo","getEventsForPeriod","MediaInfo","getEventStreamForAdaptationSet","getEventStreamForRepresentation","setCurrentMediaInfo","streamId","getIsTextTrack","getUTCTimingSources","getManifest","getSuggestedPresentationDelay","getAvailabilityStartTime","getMpd","getIsDynamic","getDuration","getLocation","getManifestUpdatePeriod","latencyOfLastUpdate","getIsDVB","hasProfile","getBaseURLsFromElement","node","getRepresentationSortFunction","getCodec","representationId","addResolutionInfo","getBandwidthForRepresentation","periodIdx","representation","getPeriod","findRepresentation","getIndexForRepresentation","findRepresentationIndex","getMaxIndexForBufferType","bufferType","findMaxBufferIndex","getPeriodById","periods","p","undefined","voPeriodsArray","voPeriod","representationCount","getRepresentationCount","labels","getLabelsForAdaptation","getLanguageForAdaptation","getViewpointForAdaptation","getAccessibilityForAdaptation","map","accessibilityValue","accessibilityData","search","embeddedCaptions","getAudioChannelConfigurationForAdaptation","Array","isArray","Representation_asArray","getAudioChannelConfigurationForRepresentation","codec","mimeType","getMimeType","contentProtection","getContentProtectionData","bitrateList","getBitrateListForAdaptation","forEach","item","KID","getKID","isText","supplementalProperties","getSupplementalPropperties","channel","parseInt","isEmbedded","THRESHOLD","start","manifestInfo","convertMpdToManifestInfo","isLast","Math","abs","ManifestInfo","DVRWindowSize","timeShiftBufferDepth","loadedTime","availableFrom","availabilityStartTime","minBufferTime","maxFragmentDuration","maxSegmentDuration","isDynamic","serviceDescriptions","getServiceDescriptions","protocol","Error","returnIndex","adaptationSet","adaptationSetArray","representationArray","adaptationSetArrayIndex","representationArrayIndex","getIsTypeOf","convertDataToRepresentationInfo","getDataForMedia","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"DashAdapter.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport DashConstants from './constants/DashConstants';\r\nimport RepresentationInfo from './vo/RepresentationInfo';\r\nimport MediaInfo from './vo/MediaInfo';\r\nimport StreamInfo from './vo/StreamInfo';\r\nimport ManifestInfo from './vo/ManifestInfo';\r\nimport Event from './vo/Event';\r\nimport FactoryMaker from '../core/FactoryMaker';\r\nimport DashManifestModel from './models/DashManifestModel';\r\n\r\n/**\r\n * @module DashAdapter\r\n */\r\n\r\nfunction DashAdapter() {\r\n    let instance,\r\n        dashManifestModel,\r\n        voPeriods,\r\n        voAdaptations,\r\n        currentMediaInfo,\r\n        constants,\r\n        cea608parser;\r\n\r\n    const context = this.context;\r\n\r\n    const PROFILE_DVB = 'urn:dvb:dash:profile:dvb-dash:2014';\r\n\r\n    function setup() {\r\n        dashManifestModel = DashManifestModel(context).getInstance();\r\n        reset();\r\n    }\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n    function getVoAdaptations() {\r\n        return voAdaptations;\r\n    }\r\n\r\n    function getVoPeriods() {\r\n        return voPeriods;\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.constants) {\r\n            constants = config.constants;\r\n        }\r\n\r\n        if (config.cea608parser) {\r\n            cea608parser = config.cea608parser;\r\n        }\r\n\r\n        if (config.errHandler) {\r\n            dashManifestModel.setConfig({errHandler: config.errHandler});\r\n        }\r\n\r\n        if (config.BASE64) {\r\n            dashManifestModel.setConfig({BASE64: config.BASE64});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of RepresentationInfo based on a representation value object\r\n     * @param {object} voRepresentation\r\n     * @returns {RepresentationInfo|null} representationInfo\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function convertRepresentationToRepresentationInfo(voRepresentation) {\r\n        if (voRepresentation) {\r\n            let representationInfo = new RepresentationInfo();\r\n            const realAdaptation = voRepresentation.adaptation.period.mpd.manifest.Period_asArray[voRepresentation.adaptation.period.index].AdaptationSet_asArray[voRepresentation.adaptation.index];\r\n            const realRepresentation = dashManifestModel.getRepresentationFor(voRepresentation.index, realAdaptation);\r\n\r\n            representationInfo.id = voRepresentation.id;\r\n            representationInfo.quality = voRepresentation.index;\r\n            representationInfo.bandwidth = dashManifestModel.getBandwidth(realRepresentation);\r\n            representationInfo.DVRWindow = voRepresentation.segmentAvailabilityRange;\r\n            representationInfo.fragmentDuration = voRepresentation.segmentDuration || (voRepresentation.segments && voRepresentation.segments.length > 0 ? voRepresentation.segments[0].duration : NaN);\r\n            representationInfo.MSETimeOffset = voRepresentation.MSETimeOffset;\r\n            representationInfo.mediaInfo = convertAdaptationToMediaInfo(voRepresentation.adaptation);\r\n\r\n            return representationInfo;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a MediaInfo object for a given media type.\r\n     * @param {object} streamInfo\r\n     * @param {MediaType }type\r\n     * @returns {null|MediaInfo} mediaInfo\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getMediaInfoForType(streamInfo, type) {\r\n        if (voPeriods.length === 0 || !streamInfo) {\r\n            return null;\r\n        }\r\n\r\n        let selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\r\n        if (!selectedVoPeriod) return null;\r\n\r\n        let periodId = selectedVoPeriod.id;\r\n        voAdaptations[periodId] = voAdaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\r\n\r\n        let realAdaptation = getAdaptationForType(streamInfo.index, type, streamInfo);\r\n        if (!realAdaptation) return null;\r\n        let idx = dashManifestModel.getIndexForAdaptation(realAdaptation, voPeriods[0].mpd.manifest, streamInfo.index);\r\n\r\n        return convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);\r\n    }\r\n\r\n    /**\r\n     * Checks if the role of the specified AdaptationSet is set to main\r\n     * @param {object} adaptation\r\n     * @returns {boolean}\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getIsMain(adaptation) {\r\n        return dashManifestModel.getRolesForAdaptation(adaptation).filter(function (role) {\r\n            return role.value === DashConstants.MAIN;\r\n        })[0];\r\n    }\r\n\r\n    /**\r\n     * Returns the AdaptationSet for a given period and a given mediaType.\r\n     * @param {number} periodIndex\r\n     * @param {MediaType} type\r\n     * @param {object} streamInfo\r\n     * @returns {null|object} adaptation\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getAdaptationForType(periodIndex, type, streamInfo) {\r\n        const adaptations = dashManifestModel.getAdaptationsForType(voPeriods[0].mpd.manifest, periodIndex, type);\r\n\r\n        if (!adaptations || adaptations.length === 0) return null;\r\n\r\n        if (adaptations.length > 1 && streamInfo) {\r\n            const allMediaInfoForType = getAllMediaInfoForType(streamInfo, type);\r\n\r\n            if (currentMediaInfo[streamInfo.id] && currentMediaInfo[streamInfo.id][type]) {\r\n                for (let i = 0, ln = adaptations.length; i < ln; i++) {\r\n                    if (areMediaInfosEqual(currentMediaInfo[streamInfo.id][type], allMediaInfoForType[i])) {\r\n                        return adaptations[i];\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\r\n                if (getIsMain(adaptations[i])) {\r\n                    return adaptations[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return adaptations[0];\r\n    }\r\n\r\n    /**\r\n     * Compares two mediaInfo objects\r\n     * @param {MediaInfo} mInfoOne\r\n     * @param {MediaInfo} mInfoTwo\r\n     * @returns {boolean}\r\n     */\r\n    function areMediaInfosEqual(mInfoOne, mInfoTwo) {\r\n        if (!mInfoOne || !mInfoTwo) {\r\n            return false;\r\n        }\r\n\r\n        const sameId = mInfoOne.id === mInfoTwo.id;\r\n        const sameViewpoint = mInfoOne.viewpoint === mInfoTwo.viewpoint;\r\n        const sameLang = mInfoOne.lang === mInfoTwo.lang;\r\n        const sameRoles = mInfoOne.roles.toString() === mInfoTwo.roles.toString();\r\n        const sameAccessibility = mInfoOne.accessibility.toString() === mInfoTwo.accessibility.toString();\r\n        const sameAudioChannelConfiguration = mInfoOne.audioChannelConfiguration.toString() === mInfoTwo.audioChannelConfiguration.toString();\r\n\r\n        return (sameId && sameViewpoint && sameLang && sameRoles && sameAccessibility && sameAudioChannelConfiguration);\r\n    }\r\n\r\n    /**\r\n     * Returns the mediaInfo for a given mediaType\r\n     * @param {object} streamInfo\r\n     * @param {MediaType} type\r\n     * @param {object} externalManifest Set to null or undefined if no external manifest is to be used\r\n     * @returns {Array} mediaArr\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getAllMediaInfoForType(streamInfo, type, externalManifest) {\r\n        let voLocalPeriods = voPeriods;\r\n        let manifest = externalManifest;\r\n        let mediaArr = [];\r\n        let data,\r\n            media,\r\n            idx,\r\n            i,\r\n            j,\r\n            ln,\r\n            periodId;\r\n\r\n        if (manifest) {\r\n            checkConfig();\r\n\r\n            voLocalPeriods = getRegularPeriods(manifest);\r\n        } else {\r\n            if (voPeriods.length > 0) {\r\n                manifest = voPeriods[0].mpd.manifest;\r\n            } else {\r\n                return mediaArr;\r\n            }\r\n        }\r\n\r\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voLocalPeriods);\r\n        if (selectedVoPeriod) {\r\n            periodId = selectedVoPeriod.id;\r\n        }\r\n        const adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo ? streamInfo.index : null, type !== constants.EMBEDDED_TEXT ? type : constants.VIDEO);\r\n\r\n        if (!adaptationsForType || adaptationsForType.length === 0) return mediaArr;\r\n\r\n        voAdaptations[periodId] = voAdaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\r\n\r\n        for (i = 0, ln = adaptationsForType.length; i < ln; i++) {\r\n            data = adaptationsForType[i];\r\n            idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\r\n            media = convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);\r\n\r\n            if (type === constants.EMBEDDED_TEXT) {\r\n                let accessibilityLength = media.accessibility.length;\r\n                for (j = 0; j < accessibilityLength; j++) {\r\n                    if (!media) {\r\n                        continue;\r\n                    }\r\n                    let accessibility = media.accessibility[j];\r\n                    if (accessibility.indexOf('cea-608:') === 0) {\r\n                        let value = accessibility.substring(8);\r\n                        let parts = value.split(';');\r\n                        if (parts[0].substring(0, 2) === 'CC') {\r\n                            for (j = 0; j < parts.length; j++) {\r\n                                if (!media) {\r\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[periodId][idx]);\r\n                                }\r\n                                convertVideoInfoToEmbeddedTextInfo(media, parts[j].substring(0, 3), parts[j].substring(4));\r\n                                mediaArr.push(media);\r\n                                media = null;\r\n                            }\r\n                        } else {\r\n                            for (j = 0; j < parts.length; j++) { // Only languages for CC1, CC2, ...\r\n                                if (!media) {\r\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[periodId][idx]);\r\n                                }\r\n                                convertVideoInfoToEmbeddedTextInfo(media, 'CC' + (j + 1), parts[j]);\r\n                                mediaArr.push(media);\r\n                                media = null;\r\n                            }\r\n                        }\r\n                    } else if (accessibility.indexOf('cea-608') === 0) { // Nothing known. We interpret it as CC1=eng\r\n                        convertVideoInfoToEmbeddedTextInfo(media, constants.CC1, 'eng');\r\n                        mediaArr.push(media);\r\n                        media = null;\r\n                    }\r\n                }\r\n            } else if (type === constants.IMAGE) {\r\n                convertVideoInfoToThumbnailInfo(media);\r\n                mediaArr.push(media);\r\n                media = null;\r\n            } else if (media) {\r\n                mediaArr.push(media);\r\n            }\r\n        }\r\n\r\n        return mediaArr;\r\n    }\r\n\r\n    /**\r\n     * @param {object} newManifest\r\n     * @returns {*}\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function updatePeriods(newManifest) {\r\n        if (!newManifest) return null;\r\n\r\n        checkConfig();\r\n\r\n        voPeriods = getRegularPeriods(newManifest);\r\n\r\n        voAdaptations = {};\r\n    }\r\n\r\n    /**\r\n     * @param {object} externalManifest\r\n     * @param {number} maxStreamsInfo\r\n     * @returns {Array} streams\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getStreamsInfo(externalManifest, maxStreamsInfo) {\r\n        const streams = [];\r\n        let voLocalPeriods = voPeriods;\r\n\r\n        //if manifest is defined, getStreamsInfo is for an outside manifest, not the current one\r\n        if (externalManifest) {\r\n            checkConfig();\r\n            voLocalPeriods = getRegularPeriods(externalManifest);\r\n        }\r\n\r\n        if (voLocalPeriods.length > 0) {\r\n            if (!maxStreamsInfo || maxStreamsInfo > voLocalPeriods.length) {\r\n                maxStreamsInfo = voLocalPeriods.length;\r\n            }\r\n            for (let i = 0; i < maxStreamsInfo; i++) {\r\n                streams.push(convertPeriodToStreamInfo(voLocalPeriods[i]));\r\n            }\r\n        }\r\n\r\n        return streams;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} streamInfo\r\n     * @param {object} mediaInfo\r\n     * @returns {object} realAdaptation\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getRealAdaptation(streamInfo, mediaInfo) {\r\n        let id,\r\n            realAdaptation;\r\n\r\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\r\n\r\n        id = mediaInfo ? mediaInfo.id : null;\r\n\r\n        if (voPeriods.length > 0 && selectedVoPeriod) {\r\n            realAdaptation = id ? dashManifestModel.getAdaptationForId(id, voPeriods[0].mpd.manifest, selectedVoPeriod.index) : dashManifestModel.getAdaptationForIndex(mediaInfo ? mediaInfo.index : null, voPeriods[0].mpd.manifest, selectedVoPeriod.index);\r\n        }\r\n\r\n        return realAdaptation;\r\n    }\r\n\r\n    /**\r\n     * Returns all voRepresentations for a given mediaInfo\r\n     * @param {object} mediaInfo\r\n     * @returns {Array} voReps\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getVoRepresentations(mediaInfo) {\r\n        let voReps;\r\n\r\n        const voAdaptation = getAdaptationForMediaInfo(mediaInfo);\r\n        voReps = dashManifestModel.getRepresentationsForAdaptation(voAdaptation);\r\n\r\n        return voReps;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} eventBox\r\n     * @param {Array} eventStreams\r\n     * @param {number} startTime\r\n     * @returns {null|Event}\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getEvent(eventBox, eventStreams, startTime) {\r\n        if (!eventBox || !eventStreams) {\r\n            return null;\r\n        }\r\n        const event = new Event();\r\n        const schemeIdUri = eventBox.scheme_id_uri;\r\n        const value = eventBox.value;\r\n        const timescale = eventBox.timescale;\r\n        let presentationTimeDelta;\r\n        let calculatedPresentationTime;\r\n        if (eventBox.version === 0) {\r\n            presentationTimeDelta = eventBox.presentation_time_delta;\r\n            calculatedPresentationTime = startTime * timescale + presentationTimeDelta;\r\n        } else {\r\n            presentationTimeDelta = 0;\r\n            calculatedPresentationTime = eventBox.presentation_time_delta;\r\n        }\r\n        const duration = eventBox.event_duration;\r\n        const id = eventBox.id;\r\n        const messageData = eventBox.message_data;\r\n\r\n        if (!eventStreams[schemeIdUri + '/' + value]) return null;\r\n\r\n        event.eventStream = eventStreams[schemeIdUri + '/' + value];\r\n        event.eventStream.value = value;\r\n        event.eventStream.timescale = timescale;\r\n        event.duration = duration;\r\n        event.id = id;\r\n        event.calculatedPresentationTime = calculatedPresentationTime;\r\n        event.messageData = messageData;\r\n        event.presentationTimeDelta = presentationTimeDelta;\r\n\r\n        return event;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} info\r\n     * @param {object} voRepresentation\r\n     * @returns {Array}\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getEventsFor(info, voRepresentation) {\r\n        let events = [];\r\n\r\n        if (voPeriods.length > 0) {\r\n            const manifest = voPeriods[0].mpd.manifest;\r\n\r\n            if (info instanceof StreamInfo) {\r\n                events = dashManifestModel.getEventsForPeriod(getPeriodForStreamInfo(info, voPeriods));\r\n            } else if (info instanceof MediaInfo) {\r\n                events = dashManifestModel.getEventStreamForAdaptationSet(manifest, getAdaptationForMediaInfo(info));\r\n            } else if (info instanceof RepresentationInfo) {\r\n                events = dashManifestModel.getEventStreamForRepresentation(manifest, voRepresentation);\r\n            }\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} streamId\r\n     * @param {MediaType} type\r\n     * @param {object} mediaInfo\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function setCurrentMediaInfo(streamId, type, mediaInfo) {\r\n        currentMediaInfo[streamId] = currentMediaInfo[streamId] || {};\r\n        currentMediaInfo[streamId][type] = currentMediaInfo[streamId][type] || {};\r\n        currentMediaInfo[streamId][type] = mediaInfo;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} type\r\n     * @returns {boolean}\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getIsTextTrack(type) {\r\n        return dashManifestModel.getIsTextTrack(type);\r\n    }\r\n\r\n    /**\r\n     * Returns the UTC Timing Sources specified in the manifest\r\n     * @returns {Array} utcTimingSources\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getUTCTimingSources() {\r\n        const manifest = getManifest();\r\n        return dashManifestModel.getUTCTimingSources(manifest);\r\n    }\r\n\r\n    /**\r\n     * Returns the suggestedPresentationDelay as specified in the manifest\r\n     * @returns {String} suggestedPresentationDelay\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getSuggestedPresentationDelay() {\r\n        const mpd = voPeriods.length > 0 ? voPeriods[0].mpd : null;\r\n        return dashManifestModel.getSuggestedPresentationDelay(mpd);\r\n    }\r\n\r\n    /**\r\n     * Returns the availabilityStartTime as specified in the manifest\r\n     * @param {object} externalManifest Omit this value if no external manifest should be used\r\n     * @returns {string} availabilityStartTime\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getAvailabilityStartTime(externalManifest) {\r\n        const mpd = getMpd(externalManifest);\r\n        return dashManifestModel.getAvailabilityStartTime(mpd);\r\n    }\r\n\r\n    /**\r\n     * Returns a boolean indicating if the manifest is dynamic or not\r\n     * @param {object} externalManifest Omit this value if no external manifest should be used\r\n     * @returns {boolean}\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getIsDynamic(externalManifest) {\r\n        const manifest = getManifest(externalManifest);\r\n        return dashManifestModel.getIsDynamic(manifest);\r\n    }\r\n\r\n    /**\r\n     * Returns the duration of the MPD\r\n     * @param {object} externalManifest Omit this value if no external manifest should be used\r\n     * @returns {number} duration\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getDuration(externalManifest) {\r\n        const manifest = getManifest(externalManifest);\r\n        return dashManifestModel.getDuration(manifest);\r\n    }\r\n\r\n    /**\r\n     * Returns all periods of the MPD\r\n     * @param {object} externalManifest Omit this value if no external manifest should be used\r\n     * @returns {Array} periods\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getRegularPeriods(externalManifest) {\r\n        const mpd = getMpd(externalManifest);\r\n        return dashManifestModel.getRegularPeriods(mpd);\r\n    }\r\n\r\n    /**\r\n     * Returns an MPD object\r\n     * @param {object} externalManifest Omit this value if no external manifest should be used\r\n     * @returns {object} MPD\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getMpd(externalManifest) {\r\n        const manifest = getManifest(externalManifest);\r\n        return dashManifestModel.getMpd(manifest);\r\n    }\r\n\r\n    /**\r\n     * Returns the location element of the MPD\r\n     * @param {object} manifest\r\n     * @returns {String} location\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getLocation(manifest) {\r\n        return dashManifestModel.getLocation(manifest);\r\n    }\r\n\r\n    /**\r\n     * Returns the manifest update period used for dynamic manifests\r\n     * @param {object} manifest\r\n     * @param {number} latencyOfLastUpdate\r\n     * @returns {NaN|number} manifestUpdatePeriod\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\r\n        return dashManifestModel.getManifestUpdatePeriod(manifest, latencyOfLastUpdate);\r\n    }\r\n\r\n    /**\r\n     * Checks if the manifest has a DVB profile\r\n     * @param {object} manifest\r\n     * @returns {boolean}\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getIsDVB(manifest) {\r\n        return dashManifestModel.hasProfile(manifest, PROFILE_DVB);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} node\r\n     * @returns {Array}\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getBaseURLsFromElement(node) {\r\n        return dashManifestModel.getBaseURLsFromElement(node);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {*}\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getRepresentationSortFunction() {\r\n        return dashManifestModel.getRepresentationSortFunction();\r\n    }\r\n\r\n    /**\r\n     * Returns the codec for a given adaptation set and a given representation id.\r\n     * @param {object} adaptation\r\n     * @param {number} representationId\r\n     * @param {boolean} addResolutionInfo Defines whether to include resolution information in the output\r\n     * @returns {String} codec\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getCodec(adaptation, representationId, addResolutionInfo) {\r\n        return dashManifestModel.getCodec(adaptation, representationId, addResolutionInfo);\r\n    }\r\n\r\n    /**\r\n     * Returns the bandwidth for a given representation id\r\n     * @param {number} representationId\r\n     * @param {number} periodIdx\r\n     * @returns {number} bandwidth\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getBandwidthForRepresentation(representationId, periodIdx) {\r\n        let representation;\r\n        let period = getPeriod(periodIdx);\r\n\r\n        representation = findRepresentation(period, representationId);\r\n\r\n        return representation ? representation.bandwidth : null;\r\n    }\r\n\r\n    /**\r\n     * Returns the index for a given representation id\r\n     * @param {string} representationId\r\n     * @param {number} periodIdx\r\n     * @returns {number} index\r\n     * @memberOf module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getIndexForRepresentation(representationId, periodIdx) {\r\n        let period = getPeriod(periodIdx);\r\n\r\n        return findRepresentationIndex(period, representationId);\r\n    }\r\n\r\n    /**\r\n     * This method returns the current max index based on what is defined in the MPD.\r\n     *\r\n     * @param {string} bufferType - String 'audio' or 'video',\r\n     * @param {number} periodIdx - Make sure this is the period index not id\r\n     * @return {number}\r\n     * @memberof module:DashAdapter\r\n     * @instance\r\n     */\r\n    function getMaxIndexForBufferType(bufferType, periodIdx) {\r\n        let period = getPeriod(periodIdx);\r\n\r\n        return findMaxBufferIndex(period, bufferType);\r\n    }\r\n\r\n    /**\r\n     * Returns the voPeriod object for a given id\r\n     * @param {String} id\r\n     * @returns {object|null}\r\n     */\r\n    function getPeriodById(id) {\r\n        if (!id || voPeriods.length === 0) {\r\n            return null;\r\n        }\r\n        const periods = voPeriods.filter((p) => {\r\n            return p.id === id;\r\n        });\r\n\r\n        if (periods && periods.length > 0) {\r\n            return periods[0];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function reset() {\r\n        voPeriods = [];\r\n        voAdaptations = {};\r\n        currentMediaInfo = {};\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n    function getManifest(externalManifest) {\r\n        return externalManifest ? externalManifest : voPeriods.length > 0 ? voPeriods[0].mpd.manifest : null;\r\n    }\r\n\r\n    function getAdaptationForMediaInfo(mediaInfo) {\r\n        if (!mediaInfo || !mediaInfo.streamInfo || mediaInfo.streamInfo.id === undefined || !voAdaptations[mediaInfo.streamInfo.id]) return null;\r\n        return voAdaptations[mediaInfo.streamInfo.id][mediaInfo.index];\r\n    }\r\n\r\n    function getPeriodForStreamInfo(streamInfo, voPeriodsArray) {\r\n        const ln = voPeriodsArray.length;\r\n\r\n        for (let i = 0; i < ln; i++) {\r\n            let voPeriod = voPeriodsArray[i];\r\n\r\n            if (streamInfo && streamInfo.id === voPeriod.id) return voPeriod;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function convertAdaptationToMediaInfo(adaptation) {\r\n        if (!adaptation) {\r\n            return null;\r\n        }\r\n\r\n        let mediaInfo = new MediaInfo();\r\n        const realAdaptation = adaptation.period.mpd.manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index];\r\n        let viewpoint;\r\n\r\n        mediaInfo.id = adaptation.id;\r\n        mediaInfo.index = adaptation.index;\r\n        mediaInfo.type = adaptation.type;\r\n        mediaInfo.streamInfo = convertPeriodToStreamInfo(adaptation.period);\r\n        mediaInfo.representationCount = dashManifestModel.getRepresentationCount(realAdaptation);\r\n        mediaInfo.labels = dashManifestModel.getLabelsForAdaptation(realAdaptation);\r\n        mediaInfo.lang = dashManifestModel.getLanguageForAdaptation(realAdaptation);\r\n        viewpoint = dashManifestModel.getViewpointForAdaptation(realAdaptation);\r\n        mediaInfo.viewpoint = viewpoint ? viewpoint.value : undefined;\r\n        mediaInfo.accessibility = dashManifestModel.getAccessibilityForAdaptation(realAdaptation).map(function (accessibility) {\r\n            let accessibilityValue = accessibility.value;\r\n            let accessibilityData = accessibilityValue;\r\n            if (accessibility.schemeIdUri && (accessibility.schemeIdUri.search('cea-608') >= 0) && typeof (cea608parser) !== 'undefined') {\r\n                if (accessibilityValue) {\r\n                    accessibilityData = 'cea-608:' + accessibilityValue;\r\n                } else {\r\n                    accessibilityData = 'cea-608';\r\n                }\r\n                mediaInfo.embeddedCaptions = true;\r\n            }\r\n            return accessibilityData;\r\n        });\r\n\r\n        mediaInfo.audioChannelConfiguration = dashManifestModel.getAudioChannelConfigurationForAdaptation(realAdaptation).map(function (audioChannelConfiguration) {\r\n            return audioChannelConfiguration.value;\r\n        });\r\n\r\n        if (mediaInfo.audioChannelConfiguration.length === 0 && Array.isArray(realAdaptation.Representation_asArray) && realAdaptation.Representation_asArray.length > 0) {\r\n            mediaInfo.audioChannelConfiguration = dashManifestModel.getAudioChannelConfigurationForRepresentation(realAdaptation.Representation_asArray[0]).map(function (audioChannelConfiguration) {\r\n                return audioChannelConfiguration.value;\r\n            });\r\n        }\r\n        mediaInfo.roles = dashManifestModel.getRolesForAdaptation(realAdaptation).map(function (role) {\r\n            return role.value;\r\n        });\r\n        mediaInfo.codec = dashManifestModel.getCodec(realAdaptation);\r\n        mediaInfo.mimeType = dashManifestModel.getMimeType(realAdaptation);\r\n        mediaInfo.contentProtection = dashManifestModel.getContentProtectionData(realAdaptation);\r\n        mediaInfo.bitrateList = dashManifestModel.getBitrateListForAdaptation(realAdaptation);\r\n\r\n        if (mediaInfo.contentProtection) {\r\n            mediaInfo.contentProtection.forEach(function (item) {\r\n                item.KID = dashManifestModel.getKID(item);\r\n            });\r\n        }\r\n\r\n        mediaInfo.isText = dashManifestModel.getIsTextTrack(mediaInfo.mimeType);\r\n        mediaInfo.supplementalProperties = dashManifestModel.getSupplementalPropperties(realAdaptation);\r\n\r\n        return mediaInfo;\r\n    }\r\n\r\n    function convertVideoInfoToEmbeddedTextInfo(mediaInfo, channel, lang) {\r\n        mediaInfo.id = channel; // CC1, CC2, CC3, or CC4\r\n        mediaInfo.index = 100 + parseInt(channel.substring(2, 3));\r\n        mediaInfo.type = constants.EMBEDDED_TEXT;\r\n        mediaInfo.codec = 'cea-608-in-SEI';\r\n        mediaInfo.isText = true;\r\n        mediaInfo.isEmbedded = true;\r\n        mediaInfo.lang = lang;\r\n        mediaInfo.roles = ['caption'];\r\n    }\r\n\r\n    function convertVideoInfoToThumbnailInfo(mediaInfo) {\r\n        mediaInfo.type = constants.IMAGE;\r\n    }\r\n\r\n    function convertPeriodToStreamInfo(period) {\r\n        let streamInfo = new StreamInfo();\r\n        const THRESHOLD = 1;\r\n\r\n        streamInfo.id = period.id;\r\n        streamInfo.index = period.index;\r\n        streamInfo.start = period.start;\r\n        streamInfo.duration = period.duration;\r\n        streamInfo.manifestInfo = convertMpdToManifestInfo(period.mpd);\r\n        streamInfo.isLast = period.mpd.manifest.Period_asArray.length === 1 || Math.abs((streamInfo.start + streamInfo.duration) - streamInfo.manifestInfo.duration) < THRESHOLD;\r\n\r\n        return streamInfo;\r\n    }\r\n\r\n    function convertMpdToManifestInfo(mpd) {\r\n        let manifestInfo = new ManifestInfo();\r\n\r\n        manifestInfo.DVRWindowSize = mpd.timeShiftBufferDepth;\r\n        manifestInfo.loadedTime = mpd.manifest.loadedTime;\r\n        manifestInfo.availableFrom = mpd.availabilityStartTime;\r\n        manifestInfo.minBufferTime = mpd.manifest.minBufferTime;\r\n        manifestInfo.maxFragmentDuration = mpd.maxSegmentDuration;\r\n        manifestInfo.duration = dashManifestModel.getDuration(mpd.manifest);\r\n        manifestInfo.isDynamic = dashManifestModel.getIsDynamic(mpd.manifest);\r\n        manifestInfo.serviceDescriptions = dashManifestModel.getServiceDescriptions(mpd.manifest);\r\n        manifestInfo.protocol = mpd.manifest.protocol;\r\n\r\n        return manifestInfo;\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!constants) {\r\n            throw new Error('setConfig function has to be called previously');\r\n        }\r\n    }\r\n\r\n    function getPeriod(periodIdx) {\r\n        return voPeriods.length > 0 ? voPeriods[0].mpd.manifest.Period_asArray[periodIdx] : null;\r\n    }\r\n\r\n    function findRepresentationIndex(period, representationId) {\r\n        const index = findRepresentation(period, representationId, true);\r\n\r\n        return index !== null ? index : -1;\r\n    }\r\n\r\n    function findRepresentation(period, representationId, returnIndex) {\r\n        let adaptationSet,\r\n            adaptationSetArray,\r\n            representation,\r\n            representationArray,\r\n            adaptationSetArrayIndex,\r\n            representationArrayIndex;\r\n\r\n        if (period) {\r\n            adaptationSetArray = period.AdaptationSet_asArray;\r\n            for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\r\n                adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\r\n                representationArray = adaptationSet.Representation_asArray;\r\n                for (representationArrayIndex = 0; representationArrayIndex < representationArray.length; representationArrayIndex = representationArrayIndex + 1) {\r\n                    representation = representationArray[representationArrayIndex];\r\n                    if (representationId === representation.id) {\r\n                        if (returnIndex) {\r\n                            return representationArrayIndex;\r\n                        } else {\r\n                            return representation;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function findMaxBufferIndex(period, bufferType) {\r\n        let adaptationSet,\r\n            adaptationSetArray,\r\n            representationArray,\r\n            adaptationSetArrayIndex;\r\n\r\n        if (!period || !bufferType) return -1;\r\n\r\n        adaptationSetArray = period.AdaptationSet_asArray;\r\n        for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\r\n            adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\r\n            representationArray = adaptationSet.Representation_asArray;\r\n            if (dashManifestModel.getIsTypeOf(adaptationSet, bufferType)) {\r\n                return representationArray.length;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    // #endregion PRIVATE FUNCTIONS\r\n\r\n    instance = {\r\n        getBandwidthForRepresentation: getBandwidthForRepresentation,\r\n        getIndexForRepresentation: getIndexForRepresentation,\r\n        getMaxIndexForBufferType: getMaxIndexForBufferType,\r\n        convertDataToRepresentationInfo: convertRepresentationToRepresentationInfo,\r\n        getDataForMedia: getAdaptationForMediaInfo,\r\n        getStreamsInfo: getStreamsInfo,\r\n        getMediaInfoForType: getMediaInfoForType,\r\n        getAllMediaInfoForType: getAllMediaInfoForType,\r\n        getAdaptationForType: getAdaptationForType,\r\n        getRealAdaptation: getRealAdaptation,\r\n        getVoRepresentations: getVoRepresentations,\r\n        getEventsFor: getEventsFor,\r\n        getEvent: getEvent,\r\n        getMpd,\r\n        setConfig: setConfig,\r\n        updatePeriods: updatePeriods,\r\n        getIsTextTrack: getIsTextTrack,\r\n        getUTCTimingSources: getUTCTimingSources,\r\n        getSuggestedPresentationDelay: getSuggestedPresentationDelay,\r\n        getAvailabilityStartTime: getAvailabilityStartTime,\r\n        getIsDynamic: getIsDynamic,\r\n        getDuration: getDuration,\r\n        getRegularPeriods: getRegularPeriods,\r\n        getLocation: getLocation,\r\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\r\n        getIsDVB: getIsDVB,\r\n        getBaseURLsFromElement: getBaseURLsFromElement,\r\n        getRepresentationSortFunction: getRepresentationSortFunction,\r\n        getCodec: getCodec,\r\n        getVoAdaptations: getVoAdaptations,\r\n        getVoPeriods: getVoPeriods,\r\n        getPeriodById,\r\n        setCurrentMediaInfo: setCurrentMediaInfo,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nDashAdapter.__dashjs_factory_name = 'DashAdapter';\r\nexport default FactoryMaker.getSingletonFactory(DashAdapter);\r\n"]}