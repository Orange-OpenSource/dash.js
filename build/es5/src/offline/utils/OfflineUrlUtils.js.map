{"version":3,"sources":["../../../../../src/offline/utils/OfflineUrlUtils.js"],"names":["FactoryMaker","OfflineConstants","DefaultURLUtils","OfflineUrlUtils","defaultURLUtils","context","setup","getInstance","getRegex","OFFLINE_URL_REGEX","parseBaseUrl","url","parseOrigin","parseScheme","isSchemeRelative","isHTTPURL","isHTTPS","isPathAbsolute","removeHostname","replace","isRelative","resolve","baseUrl","charAt","length","substring","instance","__dashjs_factory_name","getSingletonFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA,MAAOA,aAAP,KAAyB,yBAAzB,CACA,MAAOC,iBAAP,KAA6B,+BAA7B,CACA,MAAOC,gBAAP,KAA4B,yCAA5B,CAEA;;;;;;GAOA,QAASC,gBAAT,EAA2B,CAEvB,GAAIC,gBAAJ,CACA,KAAMC,SAAU,KAAKA,OAArB,CAEA,QAASC,MAAT,EAAiB,CACbF,gBAAkBF,gBAAgBG,OAAhB,EAAyBE,WAAzB,EAAlB,CACH,CAED,QAASC,SAAT,EAAoB,CAChB,MAAOP,kBAAiBQ,iBAAxB,CACH,CAED;;;;OAKA,QAASC,aAAT,CAAsBC,GAAtB,CAA2B,CACvB,MAAOP,iBAAgBM,YAAhB,CAA6BC,GAA7B,CAAP,CACH,CAED,QAASC,YAAT,CAAqBD,GAArB,CAA0B,CACtB,MAAOP,iBAAgBQ,WAAhB,CAA4BD,GAA5B,CAAP,CACH,CAED,QAASE,YAAT,CAAqBF,GAArB,CAA0B,CACtB,MAAOP,iBAAgBS,WAAhB,CAA4BF,GAA5B,CAAP,CACH,CAED,QAASG,iBAAT,CAA0BH,GAA1B,CAA+B,CAC3B,MAAOP,iBAAgBU,gBAAhB,CAAiCH,GAAjC,CAAP,CACH,CAED,QAASI,UAAT,CAAmBJ,GAAnB,CAAwB,CACpB,MAAOP,iBAAgBW,SAAhB,CAA0BJ,GAA1B,CAAP,CACH,CAED,QAASK,QAAT,CAAiBL,GAAjB,CAAsB,CAClB,MAAOP,iBAAgBY,OAAhB,CAAwBL,GAAxB,CAAP,CACH,CAED,QAASM,eAAT,CAAwBN,GAAxB,CAA6B,CACzB,MAAOP,iBAAgBa,cAAhB,CAA+BN,GAA/B,CAAP,CACH,CAED;;;;OAKA,QAASO,eAAT,CAAwBP,GAAxB,CAA6B,CACzB,MAAOA,KAAIQ,OAAJ,CAAY,eAAZ,CAA6B,EAA7B,CAAP,CACH,CAED,QAASC,WAAT,EAAsB,CAClB,MAAO,MAAP,CACH,CAED,QAASC,QAAT,CAAiBV,GAAjB,CAAsBW,OAAtB,CAA+B,CAC3B,GAAKA,QAAQC,MAAR,CAAeD,QAAQE,MAAR,CAAiB,CAAhC,EAAsC,CAAtC,GAA4C,CAAjD,CAAqD,CACjD,MAAOF,SAAQG,SAAR,CAAkB,CAAlB,CAAqBH,QAAQE,MAAR,CAAiB,CAAtC,EAA2Cb,GAAlD,CACH,CAFD,IAEO,CACH,MAAOW,SAAUX,GAAjB,CACH,CACJ,CAEDL,QACA,KAAMoB,UAAW,CACblB,SAAoBA,QADP,CAEbE,aAAoBA,YAFP,CAGbE,YAAoBA,WAHP,CAIbC,YAAoBA,WAJP,CAKbO,WAAoBA,UALP,CAMbH,eAAoBA,cANP,CAObH,iBAAoBA,gBAPP,CAQbC,UAAoBA,SARP,CASbC,QAAoBA,OATP,CAUbE,eAAoBA,cAVP,CAWbG,QAAoBA,OAXP,CAAjB,CAaA,MAAOK,SAAP,CACH,CAEDvB,gBAAgBwB,qBAAhB,CAAwC,iBAAxC,CACA,cAAe3B,cAAa4B,mBAAb,CAAiCzB,eAAjC,CAAf","file":"OfflineUrlUtils.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport OfflineConstants from '../constants/OfflineConstants';\r\nimport DefaultURLUtils from './../../streaming/utils/DefaultURLUtils';\r\n\r\n/**\r\n * @module OfflineUrlUtils\r\n * @description Provides utility functions for operating on offline URLs.\r\n * Initially this is simply a method to determine the Base URL of a URL, but\r\n * should probably include other things provided all over the place such as\r\n * determining whether a URL is relative/absolute, resolving two paths etc.\r\n */\r\nfunction OfflineUrlUtils() {\r\n\r\n    let defaultURLUtils;\r\n    const context = this.context;\r\n\r\n    function setup() {\r\n        defaultURLUtils = DefaultURLUtils(context).getInstance();\r\n    }\r\n\r\n    function getRegex() {\r\n        return OfflineConstants.OFFLINE_URL_REGEX;\r\n    }\r\n\r\n    /*\r\n     * -------------------\r\n     * DEFAULT BEHAVIOUR\r\n     * -------------------\r\n     */\r\n    function parseBaseUrl(url) {\r\n        return defaultURLUtils.parseBaseUrl(url);\r\n    }\r\n\r\n    function parseOrigin(url) {\r\n        return defaultURLUtils.parseOrigin(url);\r\n    }\r\n\r\n    function parseScheme(url) {\r\n        return defaultURLUtils.parseScheme(url);\r\n    }\r\n\r\n    function isSchemeRelative(url) {\r\n        return defaultURLUtils.isSchemeRelative(url);\r\n    }\r\n\r\n    function isHTTPURL(url) {\r\n        return defaultURLUtils.isHTTPURL(url);\r\n    }\r\n\r\n    function isHTTPS(url) {\r\n        return defaultURLUtils.isHTTPS(url);\r\n    }\r\n\r\n    function isPathAbsolute(url) {\r\n        return defaultURLUtils.isPathAbsolute(url);\r\n    }\r\n\r\n    /*\r\n     * -------------------\r\n     * SPECIFIC BEHAVIOUR\r\n     * -------------------\r\n     */\r\n    function removeHostname(url) {\r\n        return url.replace(/(^\\w+:|^)\\/\\//, '');\r\n    }\r\n\r\n    function isRelative() {\r\n        return false;\r\n    }\r\n\r\n    function resolve(url, baseUrl) {\r\n        if ((baseUrl.charAt(baseUrl.length - 1 ) % 1 === 0)) {\r\n            return baseUrl.substring(0, baseUrl.length - 1) + url;\r\n        } else {\r\n            return baseUrl + url;\r\n        }\r\n    }\r\n\r\n    setup();\r\n    const instance = {\r\n        getRegex:           getRegex,\r\n        parseBaseUrl:       parseBaseUrl,\r\n        parseOrigin:        parseOrigin,\r\n        parseScheme:        parseScheme,\r\n        isRelative:         isRelative,\r\n        isPathAbsolute:     isPathAbsolute,\r\n        isSchemeRelative:   isSchemeRelative,\r\n        isHTTPURL:          isHTTPURL,\r\n        isHTTPS:            isHTTPS,\r\n        removeHostname:     removeHostname,\r\n        resolve:            resolve\r\n    };\r\n    return instance;\r\n}\r\n\r\nOfflineUrlUtils.__dashjs_factory_name = 'OfflineUrlUtils';\r\nexport default FactoryMaker.getSingletonFactory(OfflineUrlUtils);\r\n"]}