{"version":3,"sources":["../../../../../src/dash/models/DashManifestModel.js"],"names":["DashManifestModel","config","instance","logger","context","urlUtils","getInstance","timelineConverter","errHandler","BASE64","PROFILE_DVB","isInteger","Number","value","isFinite","Math","floor","setup","getLogger","getIsTypeOf","adaptation","type","i","len","representation","col","mimeTypeRegEx","codecs","result","found","Error","hasOwnProperty","ContentComponent_asArray","Constants","TEXT","RegExp","Representation_asArray","length","essentialProperties","getEssentialPropertiesForRepresentation","THUMBNAILS_SCHEME_ID_URIS","indexOf","schemeIdUri","IMAGE","DashConstants","CODECS","search","STPP","WVTT","FRAGMENTED_TEXT","MUXED","contentType","MIME_TYPE","test","mimeType","getIsAudio","AUDIO","getIsVideo","VIDEO","getIsFragmentedText","getIsMuxed","getIsImage","getIsTextTrack","getLanguageForAdaptation","lang","LANG","replace","getViewpointForAdaptation","VIEWPOINT","Viewpoint","getRolesForAdaptation","ROLE_ASARRAY","Role_asArray","getAccessibilityForAdaptation","ACCESSIBILITY_ASARRAY","Accessibility_asArray","getAudioChannelConfigurationForAdaptation","AUDIOCHANNELCONFIGURATION_ASARRAY","AudioChannelConfiguration_asArray","getRepresentationSortFunction","a","b","bandwidth","processAdaptation","realAdaptation","undefined","sort","getRealAdaptations","manifest","periodIndex","Period_asArray","AdaptationSet_asArray","getAdaptationForId","id","realAdaptations","ID","getAdaptationForIndex","index","getIndexForAdaptation","objectUtils","areEqual","getAdaptationsForType","adaptations","push","getCodec","representationId","addResolutionInfo","codec","width","height","getMimeType","getKID","CENC_DEFAULT_KID","getLabelsForAdaptation","Label_asArray","labelArray","text","__text","getContentProtectionData","CONTENTPROTECTION_ASARRAY","ContentProtection_asArray","getIsDynamic","isDynamic","DYNAMIC","hasProfile","profile","has","profiles","getIsDVB","getDuration","mpdDuration","MEDIA_PRESENTATION_DURATION","mediaPresentationDuration","MAX_SAFE_INTEGER","MAX_VALUE","getBandwidth","NaN","getManifestUpdatePeriod","latencyOfLastUpdate","delay","MINIMUM_UPDATE_PERIOD","minimumUpdatePeriod","isNaN","max","getRepresentationCount","getBitrateListForAdaptation","processedRealAdaptation","realRepresentations","map","realRepresentation","scanType","EssentialProperty_asArray","prop","getRepresentationFor","getRealAdaptationFor","voAdaptation","period","periodArray","mpd","isLastRepeatAttributeValid","segmentTimeline","s","S_asArray","r","getUseCalculatedLiveEdgeTimeForAdaptation","segmentInfo","SEGMENT_LIST","SegmentList","SEGMENT_TIMELINE","SegmentTimeline","SEGMENT_TEMPLATE","SegmentTemplate","getRepresentationsForAdaptation","voRepresentations","baseUrl","baseUrls","getBaseURLsFromElement","voRepresentation","Representation","CODEC_PRIVATE_DATA","codecPrivateData","BANDWITH","WIDTH","HEIGHT","SCAN_TYPE","MAX_PLAYOUT_RATE","maxPlayoutRate","SEGMENT_BASE","SegmentBase","segmentInfoType","useCalculatedLiveEdgeTime","INITIALIZATION_MINUS","initialization","split","join","BASE_URL","INITIALIZATION","Initialization","SOURCE_URL","sourceURL","RANGE","range","TIMESCALE","timescale","DURATION","segmentDuration","duration","MEDIA","media","START_NUMBER","startNumber","INDEX_RANGE","indexRange","PRESENTATION_TIME_OFFSET","presentationTimeOffset","AVAILABILITY_TIME_OFFSET","availabilityTimeOffset","AVAILABILITY_TIME_COMPLETE","availabilityTimeComplete","MSETimeOffset","calcMSETimeOffset","path","getAdaptationsForPeriod","voPeriod","realPeriod","voAdaptations","voAdaptationSet","realAdaptationSet","AdaptationSet","getRegularPeriods","voPeriods","realPreviousPeriod","voPreviousPeriod","START","Period","start","parseFloat","toFixed","warn","getPeriodId","getEndTimeForLastPeriod","DEFAULT_ID","getMpd","Mpd","AVAILABILITY_START_TIME","availabilityStartTime","Date","getTime","loadedTime","AVAILABILITY_END_TIME","availabilityEndTime","SUGGESTED_PRESENTATION_DELAY","suggestedPresentationDelay","TIMESHIFT_BUFFER_DEPTH","timeShiftBufferDepth","MAX_SEGMENT_DURATION","maxSegmentDuration","periodEnd","POSITIVE_INFINITY","error","DashJSError","Errors","MANIFEST_ERROR_ID_PARSE_CODE","getEventsForPeriod","eventStreams","EventStream_asArray","events","j","eventStream","EventStream","SCHEME_ID_URI","VALUE","Event_asArray","event","Event","presentationTime","PRESENTATION_TIME","Signal","Binary","messageData","decodeArray","getEventStreams","inbandStreams","getEventStreamForAdaptationSet","adaptationArray","InbandEventStream_asArray","getEventStreamForRepresentation","representationArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","forEach","utcTiming","entry","UTCTiming","toString","node","entries","BaseURL_asArray","baseUri","earlyReturn","some","BaseURL","isRelative","resolve","url","SERVICE_LOCATION","serviceLocation","DVB_PRIORITY","dvb_priority","DVB_WEIGHT","dvb_weight","getLocation","LOCATION","Location","Location_asArray","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"DashManifestModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants';\nimport DashConstants from '../constants/DashConstants';\nimport Representation from '../vo/Representation';\nimport AdaptationSet from '../vo/AdaptationSet';\nimport Period from '../vo/Period';\nimport Mpd from '../vo/Mpd';\nimport UTCTiming from '../vo/UTCTiming';\nimport Event from '../vo/Event';\nimport BaseURL from '../vo/BaseURL';\nimport EventStream from '../vo/EventStream';\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport DashJSError from '../../streaming/vo/DashJSError';\nimport Errors from '../../core/errors/Errors';\nimport { THUMBNAILS_SCHEME_ID_URIS } from '../../streaming/thumbnail/ThumbnailTracks';\n\nfunction DashManifestModel(config) {\n\n    config = config || {};\n\n    let instance,\n        logger;\n\n    const context = this.context;\n    const urlUtils = URLUtils(context).getInstance();\n    const timelineConverter = config.timelineConverter;\n    const errHandler = config.errHandler;\n    const BASE64 = config.BASE64;\n\n    const PROFILE_DVB = 'urn:dvb:dash:profile:dvb-dash:2014';\n\n    const isInteger = Number.isInteger || function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    };\n\n    function setup () {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getIsTypeOf(adaptation, type) {\n\n        let i,\n            len,\n            representation,\n            col,\n            mimeTypeRegEx,\n            codecs;\n        let result = false;\n        let found = false;\n\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n\n        if (!type) {\n            throw new Error('type is not defined');\n        }\n\n        if (adaptation.hasOwnProperty('ContentComponent_asArray')) {\n            col = adaptation.ContentComponent_asArray;\n        }\n\n        mimeTypeRegEx = (type !== Constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\n\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length && adaptation.Representation_asArray.length > 0) {\n            let essentialProperties = getEssentialPropertiesForRepresentation(adaptation.Representation_asArray[0]);\n            if (essentialProperties && essentialProperties.length > 0 && THUMBNAILS_SCHEME_ID_URIS.indexOf(essentialProperties[0].schemeIdUri) >= 0) {\n                return type === Constants.IMAGE;\n            }\n            if (adaptation.Representation_asArray[0].hasOwnProperty(DashConstants.CODECS)) {\n                // Just check the start of the codecs string\n                codecs = adaptation.Representation_asArray[0].codecs;\n                if (codecs.search(Constants.STPP) === 0 || codecs.search(Constants.WVTT) === 0) {\n                    return type === Constants.FRAGMENTED_TEXT;\n                }\n            }\n        }\n\n        if (col) {\n            if (col.length > 1) {\n                return (type === Constants.MUXED);\n            } else if (col[0] && col[0].contentType === type) {\n                result = true;\n                found = true;\n            }\n        }\n\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n            result = mimeTypeRegEx.test(adaptation.mimeType);\n            found = true;\n        }\n\n        // couldn't find on adaptationset, so check a representation\n        if (!found) {\n            i = 0;\n            len = adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n            while (!found && i < len) {\n                representation = adaptation.Representation_asArray[i];\n\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    result = mimeTypeRegEx.test(representation.mimeType);\n                    found = true;\n                }\n\n                i++;\n            }\n        }\n\n        return result;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, Constants.AUDIO);\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, Constants.VIDEO);\n    }\n\n    function getIsFragmentedText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.FRAGMENTED_TEXT);\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, Constants.MUXED);\n    }\n\n    function getIsImage(adaptation) {\n        return getIsTypeOf(adaptation, Constants.IMAGE);\n    }\n\n    function getIsTextTrack(type) {\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\n    }\n\n    function getLanguageForAdaptation(adaptation) {\n        let lang = '';\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\n            //Filter out any other characters not allowed according to RFC5646\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g, '');\n        }\n\n        return lang;\n    }\n\n    function getViewpointForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.VIEWPOINT) ? adaptation.Viewpoint : null;\n    }\n\n    function getRolesForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) ? adaptation.Role_asArray : [];\n    }\n\n    function getAccessibilityForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) ? adaptation.Accessibility_asArray : [];\n    }\n\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? adaptation.AudioChannelConfiguration_asArray : [];\n    }\n\n    function getRepresentationSortFunction() {\n        return (a, b) => a.bandwidth - b.bandwidth;\n    }\n\n    function processAdaptation(realAdaptation) {\n        if (realAdaptation && realAdaptation.Representation_asArray !== undefined && realAdaptation.Representation_asArray !== null) {\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\n        }\n\n        return realAdaptation;\n    }\n\n    function getRealAdaptations(manifest, periodIndex) {\n        return manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n    }\n\n    function getAdaptationForId(id, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\n                return realAdaptations[i];\n            }\n        }\n\n        return null;\n    }\n\n    function getAdaptationForIndex(index, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        if (realAdaptations.length > 0 && isInteger(index)) {\n            return realAdaptations[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        const len = realAdaptations.length;\n\n        if (realAdaptation) {\n            for (let i = 0; i < len; i++) {\n                let objectUtils = ObjectUtils(context).getInstance();\n                if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    function getAdaptationsForType(manifest, periodIndex, type) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n        const adaptations = [];\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (getIsTypeOf(realAdaptations[i], type)) {\n                adaptations.push(processAdaptation(realAdaptations[i]));\n            }\n        }\n\n        return adaptations;\n    }\n\n    function getCodec(adaptation, representationId, addResolutionInfo) {\n        let codec = null;\n\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\n            const representation = isInteger(representationId) && representationId >= 0 && representationId < adaptation.Representation_asArray.length ?\n                adaptation.Representation_asArray[representationId] : adaptation.Representation_asArray[0];\n            if (representation) {\n                codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\n                if (addResolutionInfo && representation.width !== undefined) {\n                    codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\n                }\n            }\n        }\n\n        return codec;\n    }\n\n    function getMimeType(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\n    }\n\n    function getKID(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\n            return null;\n        }\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\n    }\n\n    function getLabelsForAdaptation(adaptation) {\n        if (!adaptation.Label_asArray || !adaptation.Label_asArray.length) {\n            return [];\n        }\n\n        const labelArray = [];\n\n        for (let i = 0; i < adaptation.Label_asArray.length; i++) {\n            labelArray.push({\n                lang: adaptation.Label_asArray[i].lang,\n                text: adaptation.Label_asArray[i].__text || adaptation.Label_asArray[i]\n            });\n        }\n\n        return labelArray;\n    }\n\n    function getContentProtectionData(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\n            return null;\n        }\n        return adaptation.ContentProtection_asArray;\n    }\n\n    function getIsDynamic(manifest) {\n        let isDynamic = false;\n        if (manifest && manifest.hasOwnProperty('type')) {\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\n        }\n        return isDynamic;\n    }\n\n    function hasProfile(manifest, profile) {\n        let has = false;\n\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\n            has = (manifest.profiles.indexOf(profile) !== -1);\n        }\n\n        return has;\n    }\n\n    function getIsDVB(manifest) {\n        return hasProfile(manifest, PROFILE_DVB);\n    }\n\n    function getDuration(manifest) {\n        let mpdDuration;\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n            mpdDuration = manifest.mediaPresentationDuration;\n        } else {\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\n        }\n\n        return mpdDuration;\n    }\n\n    function getBandwidth(representation) {\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\n    }\n\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        let delay = NaN;\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n            delay = manifest.minimumUpdatePeriod;\n        }\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\n    }\n\n    function getRepresentationCount(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n    }\n\n    function getBitrateListForAdaptation(realAdaptation) {\n        if (!realAdaptation || !realAdaptation.Representation_asArray || !realAdaptation.Representation_asArray.length) return null;\n\n        const processedRealAdaptation = processAdaptation(realAdaptation);\n        const realRepresentations = processedRealAdaptation.Representation_asArray;\n\n        return realRepresentations.map((realRepresentation) => {\n            return {\n                bandwidth: realRepresentation.bandwidth,\n                width: realRepresentation.width || 0,\n                height: realRepresentation.height || 0,\n                scanType: realRepresentation.scanType || null\n            };\n        });\n    }\n\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\n        if (!realRepresentation || ! realRepresentation.EssentialProperty_asArray || !realRepresentation.EssentialProperty_asArray.length) return null;\n\n        return realRepresentation.EssentialProperty_asArray.map( (prop) => {\n            return {\n                schemeIdUri: prop.schemeIdUri,\n                value: prop.value\n            };\n        });\n    }\n\n    function getRepresentationFor(index, adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 &&\n            isInteger(index) ? adaptation.Representation_asArray[index] : null;\n    }\n\n    function getRealAdaptationFor(voAdaptation) {\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\n                return processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\n            }\n        }\n    }\n\n    function isLastRepeatAttributeValid(segmentTimeline) {\n        let s = segmentTimeline.S_asArray[segmentTimeline.S_asArray.length - 1];\n        return !s.hasOwnProperty('r') || s.r >= 0;\n    }\n\n    function getUseCalculatedLiveEdgeTimeForAdaptation(voAdaptation) {\n        let realRepresentation = getRealAdaptationFor(voAdaptation).Representation_asArray[0];\n        let segmentInfo;\n        if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n            segmentInfo = realRepresentation.SegmentList;\n            return segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ?\n                isLastRepeatAttributeValid(segmentInfo.SegmentTimeline) :\n                true;\n        } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n            segmentInfo = realRepresentation.SegmentTemplate;\n            if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                return isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n            }\n        }\n\n        return false;\n    }\n\n    function getRepresentationsForAdaptation(voAdaptation) {\n        const voRepresentations = [];\n        const processedRealAdaptation = getRealAdaptationFor(voAdaptation);\n        let segmentInfo,\n            baseUrl;\n\n        // TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations\n        // that we are processing. Making it works properly will require much further changes and given\n        // parsing base Urls parameters is needed for our ultra low latency examples, we will\n        // keep this \"tricky\" code until the real (and good) solution comes\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const baseUrls = getBaseURLsFromElement(voAdaptation.period.mpd.manifest);\n            if (baseUrls) {\n                baseUrl = baseUrls[0];\n            }\n        }\n\n        if (processedRealAdaptation && processedRealAdaptation.Representation_asArray) {\n            for (let i = 0, len = processedRealAdaptation.Representation_asArray.length; i < len; ++i) {\n                const realRepresentation = processedRealAdaptation.Representation_asArray[i];\n                const voRepresentation = new Representation();\n                voRepresentation.index = i;\n                voRepresentation.adaptation = voAdaptation;\n\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\n                    voRepresentation.id = realRepresentation.id;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\n                    voRepresentation.codecs = realRepresentation.codecs;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\n                    voRepresentation.width = realRepresentation.width;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\n                    voRepresentation.height = realRepresentation.height;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\n                    voRepresentation.scanType = realRepresentation.scanType;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\n                }\n\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                    segmentInfo = realRepresentation.SegmentBase;\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n                    segmentInfo = realRepresentation.SegmentList;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\n                        voRepresentation.useCalculatedLiveEdgeTime = true;\n                    }\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                    segmentInfo = realRepresentation.SegmentTemplate;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\n                    }\n                } else {\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\n                }\n\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\n\n                if (segmentInfo) {\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\n                        let initialization = segmentInfo.Initialization;\n\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\n                            voRepresentation.initialization = initialization.sourceURL;\n                        } else if (initialization.hasOwnProperty(DashConstants.RANGE)) {\n                            voRepresentation.range = initialization.range;\n                            // initialization source url will be determined from\n                            // BaseURL when resolved at load time.\n                        }\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE) && getIsTextTrack(realRepresentation.mimeType)) {\n                        voRepresentation.range = 0;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\n                        voRepresentation.timescale = segmentInfo.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\n                        // exceeds @maxSegmentDuration\n                        //representation.segmentDuration = Math.min(segmentInfo.duration / representation.timescale, adaptation.period.mpd.maxSegmentDuration);\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\n                        voRepresentation.media = segmentInfo.media;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\n                        voRepresentation.startNumber = segmentInfo.startNumber;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\n                        voRepresentation.indexRange = segmentInfo.indexRange;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                        voRepresentation.availabilityTimeOffset = segmentInfo.availabilityTimeOffset;\n                    } else if (baseUrl && baseUrl.availabilityTimeOffset !== undefined) {\n                        voRepresentation.availabilityTimeOffset = baseUrl.availabilityTimeOffset;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                        voRepresentation.availabilityTimeComplete = segmentInfo.availabilityTimeComplete !== 'false';\n                    } else if (baseUrl && baseUrl.availabilityTimeComplete !== undefined) {\n                        voRepresentation.availabilityTimeComplete = baseUrl.availabilityTimeComplete;\n                    }\n                }\n\n                voRepresentation.MSETimeOffset = timelineConverter.calcMSETimeOffset(voRepresentation);\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\n                voRepresentations.push(voRepresentation);\n            }\n        }\n\n        return voRepresentations;\n    }\n\n    function getAdaptationsForPeriod(voPeriod) {\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\n        const voAdaptations = [];\n        let voAdaptationSet,\n            realAdaptationSet,\n            i;\n\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\n                voAdaptationSet = new AdaptationSet();\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\n                    voAdaptationSet.id = realAdaptationSet.id;\n                }\n                voAdaptationSet.index = i;\n                voAdaptationSet.period = voPeriod;\n\n                if (getIsMuxed(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.MUXED;\n                } else if (getIsAudio(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.AUDIO;\n                } else if (getIsVideo(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.VIDEO;\n                } else if (getIsFragmentedText(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.FRAGMENTED_TEXT;\n                } else if (getIsImage(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.IMAGE;\n                } else {\n                    voAdaptationSet.type = Constants.TEXT;\n                }\n                voAdaptations.push(voAdaptationSet);\n            }\n        }\n\n        return voAdaptations;\n    }\n\n    function getRegularPeriods(mpd) {\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\n        const voPeriods = [];\n        let realPreviousPeriod = null;\n        let realPeriod = null;\n        let voPreviousPeriod = null;\n        let voPeriod = null;\n        let len,\n            i;\n\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\n            realPeriod = mpd.manifest.Period_asArray[i];\n\n            // If the attribute @start is present in the Period, then the\n            // Period is a regular Period and the PeriodStart is equal\n            // to the value of this attribute.\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\n                voPeriod = new Period();\n                voPeriod.start = realPeriod.start;\n            }\n            // If the @start attribute is absent, but the previous Period\n            // element contains a @duration attribute then then this new\n            // Period is also a regular Period. The start time of the new\n            // Period PeriodStart is the sum of the start time of the previous\n            // Period PeriodStart and the value of the attribute @duration\n            // of the previous Period.\n            else if (realPreviousPeriod !== null && realPreviousPeriod.hasOwnProperty(DashConstants.DURATION) && voPreviousPeriod !== null) {\n                voPeriod = new Period();\n                voPeriod.start = parseFloat((voPreviousPeriod.start + voPreviousPeriod.duration).toFixed(5));\n            }\n            // If (i) @start attribute is absent, and (ii) the Period element\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\n            // then the PeriodStart time shall be set to zero.\n            else if (i === 0 && !isDynamic) {\n                voPeriod = new Period();\n                voPeriod.start = 0;\n            }\n\n            // The Period extends until the PeriodStart of the next Period.\n            // The difference between the PeriodStart time of a Period and\n            // the PeriodStart time of the following Period.\n            if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n                if (voPeriod !== null) {\n                    voPreviousPeriod.duration = parseFloat((voPeriod.start - voPreviousPeriod.start).toFixed(5));\n                } else {\n                    logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');\n                }\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.id = getPeriodId(realPeriod, i);\n                voPeriod.index = i;\n                voPeriod.mpd = mpd;\n\n                if (realPeriod.hasOwnProperty(DashConstants.DURATION)) {\n                    voPeriod.duration = realPeriod.duration;\n                }\n\n                voPeriods.push(voPeriod);\n                realPreviousPeriod = realPeriod;\n                voPreviousPeriod = voPeriod;\n            }\n\n            realPeriod = null;\n            voPeriod = null;\n        }\n\n        if (voPeriods.length === 0) {\n            return voPeriods;\n        }\n\n        // The last Period extends until the end of the Media Presentation.\n        // The difference between the PeriodStart time of the last Period\n        // and the mpd duration\n        if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n            voPreviousPeriod.duration = parseFloat((getEndTimeForLastPeriod(voPreviousPeriod) - voPreviousPeriod.start).toFixed(5));\n        }\n\n        return voPeriods;\n    }\n\n    function getPeriodId(realPeriod, i) {\n        if (!realPeriod) {\n            throw new Error('Period cannot be null or undefined');\n        }\n\n        let id = Period.DEFAULT_ID + '_' + i;\n\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.length > 0 && realPeriod.id !== '__proto__') {\n            id = realPeriod.id;\n        }\n\n        return id;\n    }\n\n    function getMpd(manifest) {\n        const mpd = new Mpd();\n\n        if (manifest) {\n            mpd.manifest = manifest;\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\n            } else {\n                mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\n            }\n\n            if (manifest.hasOwnProperty(Constants.SUGGESTED_PRESENTATION_DELAY)) {\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\n            }\n        }\n\n        return mpd;\n    }\n\n\n    function getEndTimeForLastPeriod(voPeriod) {\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\n\n        let periodEnd;\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\n        } else if (voPeriod.duration) {\n            periodEnd = voPeriod.duration;\n        } else if (isDynamic) {\n            periodEnd = Number.POSITIVE_INFINITY;\n        } else {\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_PARSE_CODE, 'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.', voPeriod));\n        }\n\n        return periodEnd;\n    }\n\n    function getEventsForPeriod(period) {\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\n        const periodArray = manifest ? manifest.Period_asArray : null;\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\n        const events = [];\n        let i,\n            j;\n\n        if (eventStreams) {\n            for (i = 0; i < eventStreams.length; i++) {\n                const eventStream = new EventStream();\n                eventStream.period = period;\n                eventStream.timescale = 1;\n\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                    eventStream.schemeIdUri = eventStreams[i].schemeIdUri;\n                } else {\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                    eventStream.timescale = eventStreams[i].timescale;\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                    eventStream.value = eventStreams[i].value;\n                }\n                for (j = 0; eventStreams[i].Event_asArray && j < eventStreams[i].Event_asArray.length; j++) {\n                    const event = new Event();\n                    event.presentationTime = 0;\n                    event.eventStream = eventStream;\n\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                        event.presentationTime = eventStreams[i].Event_asArray[j].presentationTime;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.DURATION)) {\n                        event.duration = eventStreams[i].Event_asArray[j].duration;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.ID)) {\n                        event.id = eventStreams[i].Event_asArray[j].id;\n                    }\n\n                    if (eventStreams[i].Event_asArray[j].Signal && eventStreams[i].Event_asArray[j].Signal.Binary) {\n                        event.messageData = BASE64.decodeArray(eventStreams[i].Event_asArray[j].Signal.Binary);\n                    } else {\n                        // From Cor.1: 'NOTE: this attribute is an alternative\n                        // to specifying a complete XML element(s) in the Event.\n                        // It is useful when an event leans itself to a compact\n                        // string representation'.\n                        event.messageData =\n                            eventStreams[i].Event_asArray[j].messageData ||\n                            eventStreams[i].Event_asArray[j].__text;\n                    }\n\n                    events.push(event);\n                }\n            }\n        }\n\n        return events;\n    }\n\n    function getEventStreams(inbandStreams, representation) {\n        const eventStreams = [];\n        let i;\n\n        if (!inbandStreams) return eventStreams;\n\n        for (i = 0; i < inbandStreams.length; i++) {\n            const eventStream = new EventStream();\n            eventStream.timescale = 1;\n            eventStream.representation = representation;\n\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\n            } else {\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                eventStream.timescale = inbandStreams[i].timescale;\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                eventStream.value = inbandStreams[i].value;\n            }\n            eventStreams.push(eventStream);\n        }\n\n        return eventStreams;\n    }\n\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray;\n\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\n                if (adaptationArray) {\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, null);\n    }\n\n    function getEventStreamForRepresentation(manifest, representation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray,\n            representationArray;\n\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\n                    if (representationArray) {\n                        inbandStreams = representationArray.InbandEventStream_asArray;\n                    }\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, representation);\n    }\n\n    function getUTCTimingSources(manifest) {\n        const isDynamic = getIsDynamic(manifest);\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\n        const utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\n        const utcTimingEntries = [];\n\n        // do not bother synchronizing the clock unless MPD is live,\n        // or it is static and has availabilityStartTime attribute\n        if ((isDynamic || hasAST)) {\n            if (utcTimingsArray) {\n                // the order is important here - 23009-1 states that the order\n                // in the manifest \"indicates relative preference, first having\n                // the highest, and the last the lowest priority\".\n                utcTimingsArray.forEach(function (utcTiming) {\n                    const entry = new UTCTiming();\n\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\n                    } else {\n                        // entries of type DescriptorType with no schemeIdUri\n                        // are meaningless. let's just ignore this entry and\n                        // move on.\n                        return;\n                    }\n\n                    // this is (incorrectly) interpreted as a number - schema\n                    // defines it as a string\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\n                        entry.value = utcTiming.value.toString();\n                    } else {\n                        // without a value, there's not a lot we can do with\n                        // this entry. let's just ignore this one and move on\n                        return;\n                    }\n\n                    // we're not interested in the optional id or any other\n                    // attributes which might be attached to the entry\n\n                    utcTimingEntries.push(entry);\n                });\n            }\n        }\n\n        return utcTimingEntries;\n    }\n\n    function getBaseURLsFromElement(node) {\n        const baseUrls = [];\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\n        // will be [undefined] which entries.some will just skip\n        const entries = node.BaseURL_asArray || [node.baseUri];\n        let earlyReturn = false;\n\n        entries.some(entry => {\n            if (entry) {\n                const baseUrl = new BaseURL();\n                let text = entry.__text || entry;\n\n                if (urlUtils.isRelative(text)) {\n                    // it doesn't really make sense to have relative and\n                    // absolute URLs at the same level, or multiple\n                    // relative URLs at the same level, so assume we are\n                    // done from this level of the MPD\n                    earlyReturn = true;\n\n                    // deal with the specific case where the MPD@BaseURL\n                    // is specified and is relative. when no MPD@BaseURL\n                    // entries exist, that case is handled by the\n                    // [node.baseUri] in the entries definition.\n                    if (node.baseUri) {\n                        text = urlUtils.resolve(text, node.baseUri);\n                    }\n                }\n\n                baseUrl.url = text;\n\n                // serviceLocation is optional, but we need it in order\n                // to blacklist correctly. if it's not available, use\n                // anything unique since there's no relationship to any\n                // other BaseURL and, in theory, the url should be\n                // unique so use this instead.\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\n                    entry.serviceLocation.length) {\n                    baseUrl.serviceLocation = entry.serviceLocation;\n                } else {\n                    baseUrl.serviceLocation = text;\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                    baseUrl.availabilityTimeOffset = entry[DashConstants.AVAILABILITY_TIME_OFFSET];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                    baseUrl.availabilityTimeComplete = entry[DashConstants.AVAILABILITY_TIME_COMPLETE] !== 'false';\n                }\n                /* NOTE: byteRange currently unused\n                 */\n\n                baseUrls.push(baseUrl);\n\n                return earlyReturn;\n            }\n        });\n\n        return baseUrls;\n    }\n\n    function getLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(Constants.LOCATION)) {\n            // for now, do not support multiple Locations -\n            // just set Location to the first Location.\n            manifest.Location = manifest.Location_asArray[0];\n\n            return manifest.Location;\n        }\n\n        // may well be undefined\n        return undefined;\n    }\n\n    instance = {\n        getIsTypeOf: getIsTypeOf,\n        getIsTextTrack: getIsTextTrack,\n        getLanguageForAdaptation: getLanguageForAdaptation,\n        getViewpointForAdaptation: getViewpointForAdaptation,\n        getRolesForAdaptation: getRolesForAdaptation,\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\n        getAdaptationForIndex: getAdaptationForIndex,\n        getIndexForAdaptation: getIndexForAdaptation,\n        getAdaptationForId: getAdaptationForId,\n        getAdaptationsForType: getAdaptationsForType,\n        getCodec: getCodec,\n        getMimeType: getMimeType,\n        getKID: getKID,\n        getLabelsForAdaptation: getLabelsForAdaptation,\n        getContentProtectionData: getContentProtectionData,\n        getIsDynamic: getIsDynamic,\n        getIsDVB: getIsDVB,\n        getDuration: getDuration,\n        getBandwidth: getBandwidth,\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\n        getRepresentationCount: getRepresentationCount,\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\n        getRepresentationFor: getRepresentationFor,\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\n        getRegularPeriods: getRegularPeriods,\n        getMpd: getMpd,\n        getEventsForPeriod: getEventsForPeriod,\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\n        getUTCTimingSources: getUTCTimingSources,\n        getBaseURLsFromElement: getBaseURLsFromElement,\n        getRepresentationSortFunction: getRepresentationSortFunction,\n        getLocation: getLocation,\n        getUseCalculatedLiveEdgeTimeForAdaptation: getUseCalculatedLiveEdgeTimeForAdaptation\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\n"]}