{"version":3,"sources":["../../../../../src/dash/models/DashManifestModel.js"],"names":["Constants","DashConstants","Representation","AdaptationSet","Period","Mpd","UTCTiming","Event","BaseURL","EventStream","ObjectUtils","URLUtils","FactoryMaker","Debug","DashJSError","Errors","THUMBNAILS_SCHEME_ID_URIS","DashManifestModel","config","instance","logger","context","urlUtils","getInstance","timelineConverter","errHandler","BASE64","PROFILE_DVB","isInteger","Number","value","isFinite","Math","floor","setup","getLogger","getIsTypeOf","adaptation","type","i","len","representation","col","mimeTypeRegEx","codecs","result","found","Error","hasOwnProperty","ContentComponent_asArray","TEXT","RegExp","Representation_asArray","length","essentialProperties","getEssentialPropertiesForRepresentation","indexOf","schemeIdUri","IMAGE","CODECS","search","STPP","WVTT","FRAGMENTED_TEXT","MUXED","contentType","MIME_TYPE","test","mimeType","getIsAudio","AUDIO","getIsVideo","VIDEO","getIsFragmentedText","getIsMuxed","getIsImage","getIsTextTrack","getLanguageForAdaptation","lang","LANG","replace","getViewpointForAdaptation","VIEWPOINT","Viewpoint","getRolesForAdaptation","ROLE_ASARRAY","Role_asArray","getAccessibilityForAdaptation","ACCESSIBILITY_ASARRAY","Accessibility_asArray","getAudioChannelConfigurationForAdaptation","AUDIOCHANNELCONFIGURATION_ASARRAY","AudioChannelConfiguration_asArray","getRepresentationSortFunction","a","b","bandwidth","processAdaptation","realAdaptation","undefined","sort","getRealAdaptations","manifest","periodIndex","Period_asArray","AdaptationSet_asArray","getAdaptationForId","id","realAdaptations","ID","getAdaptationForIndex","index","getIndexForAdaptation","objectUtils","areEqual","getAdaptationsForType","adaptations","push","getCodec","representationId","addResolutionInfo","codec","width","height","getMimeType","getKID","CENC_DEFAULT_KID","getLabelsForAdaptation","Label_asArray","labelArray","text","__text","getContentProtectionData","CONTENTPROTECTION_ASARRAY","ContentProtection_asArray","getIsDynamic","isDynamic","DYNAMIC","hasProfile","profile","has","profiles","getIsDVB","getDuration","mpdDuration","MEDIA_PRESENTATION_DURATION","mediaPresentationDuration","MAX_SAFE_INTEGER","MAX_VALUE","getBandwidth","NaN","getManifestUpdatePeriod","latencyOfLastUpdate","delay","MINIMUM_UPDATE_PERIOD","minimumUpdatePeriod","isNaN","max","getRepresentationCount","getBitrateListForAdaptation","processedRealAdaptation","realRepresentations","map","realRepresentation","scanType","EssentialProperty_asArray","prop","getRepresentationFor","getRealAdaptationFor","voAdaptation","period","periodArray","mpd","isLastRepeatAttributeValid","segmentTimeline","s","S_asArray","r","getUseCalculatedLiveEdgeTimeForAdaptation","segmentInfo","SEGMENT_LIST","SegmentList","SEGMENT_TIMELINE","SegmentTimeline","SEGMENT_TEMPLATE","SegmentTemplate","getRepresentationsForAdaptation","voRepresentations","baseUrl","baseUrls","getBaseURLsFromElement","voRepresentation","CODEC_PRIVATE_DATA","codecPrivateData","BANDWITH","WIDTH","HEIGHT","SCAN_TYPE","MAX_PLAYOUT_RATE","maxPlayoutRate","SEGMENT_BASE","SegmentBase","segmentInfoType","useCalculatedLiveEdgeTime","INITIALIZATION_MINUS","initialization","split","join","BASE_URL","INITIALIZATION","Initialization","SOURCE_URL","sourceURL","RANGE","range","TIMESCALE","timescale","DURATION","segmentDuration","duration","MEDIA","media","START_NUMBER","startNumber","INDEX_RANGE","indexRange","PRESENTATION_TIME_OFFSET","presentationTimeOffset","AVAILABILITY_TIME_OFFSET","availabilityTimeOffset","AVAILABILITY_TIME_COMPLETE","availabilityTimeComplete","MSETimeOffset","calcMSETimeOffset","path","getAdaptationsForPeriod","voPeriod","realPeriod","voAdaptations","voAdaptationSet","realAdaptationSet","getRegularPeriods","voPeriods","realPreviousPeriod","voPreviousPeriod","START","start","parseFloat","toFixed","warn","getPeriodId","getEndTimeForLastPeriod","DEFAULT_ID","getMpd","AVAILABILITY_START_TIME","availabilityStartTime","Date","getTime","loadedTime","AVAILABILITY_END_TIME","availabilityEndTime","SUGGESTED_PRESENTATION_DELAY","suggestedPresentationDelay","TIMESHIFT_BUFFER_DEPTH","timeShiftBufferDepth","MAX_SEGMENT_DURATION","maxSegmentDuration","periodEnd","POSITIVE_INFINITY","error","MANIFEST_ERROR_ID_PARSE_CODE","getEventsForPeriod","eventStreams","EventStream_asArray","events","j","eventStream","SCHEME_ID_URI","VALUE","Event_asArray","event","presentationTime","PRESENTATION_TIME","Signal","Binary","messageData","decodeArray","getEventStreams","inbandStreams","getEventStreamForAdaptationSet","adaptationArray","InbandEventStream_asArray","getEventStreamForRepresentation","representationArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","forEach","utcTiming","entry","toString","node","entries","BaseURL_asArray","baseUri","earlyReturn","some","isRelative","resolve","url","SERVICE_LOCATION","serviceLocation","DVB_PRIORITY","dvb_priority","DVB_WEIGHT","dvb_weight","getLocation","LOCATION","Location","Location_asArray","__dashjs_factory_name","getSingletonFactory"],"mappings":"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","file":"DashManifestModel.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Constants from '../../streaming/constants/Constants';\r\nimport DashConstants from '../constants/DashConstants';\r\nimport Representation from '../vo/Representation';\r\nimport AdaptationSet from '../vo/AdaptationSet';\r\nimport Period from '../vo/Period';\r\nimport Mpd from '../vo/Mpd';\r\nimport UTCTiming from '../vo/UTCTiming';\r\nimport Event from '../vo/Event';\r\nimport BaseURL from '../vo/BaseURL';\r\nimport EventStream from '../vo/EventStream';\r\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\r\nimport URLUtils from '../../streaming/utils/URLUtils';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Debug from '../../core/Debug';\r\nimport DashJSError from '../../streaming/vo/DashJSError';\r\nimport Errors from '../../core/errors/Errors';\r\nimport { THUMBNAILS_SCHEME_ID_URIS } from '../../streaming/thumbnail/ThumbnailTracks';\r\n\r\nfunction DashManifestModel(config) {\r\n\r\n    config = config || {};\r\n\r\n    let instance,\r\n        logger;\r\n\r\n    const context = this.context;\r\n    const urlUtils = URLUtils(context).getInstance();\r\n    const timelineConverter = config.timelineConverter;\r\n    const errHandler = config.errHandler;\r\n    const BASE64 = config.BASE64;\r\n\r\n    const PROFILE_DVB = 'urn:dvb:dash:profile:dvb-dash:2014';\r\n\r\n    const isInteger = Number.isInteger || function (value) {\r\n        return typeof value === 'number' &&\r\n            isFinite(value) &&\r\n            Math.floor(value) === value;\r\n    };\r\n\r\n    function setup () {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n    }\r\n\r\n    function getIsTypeOf(adaptation, type) {\r\n\r\n        let i,\r\n            len,\r\n            representation,\r\n            col,\r\n            mimeTypeRegEx,\r\n            codecs;\r\n        let result = false;\r\n        let found = false;\r\n\r\n        if (!adaptation) {\r\n            throw new Error('adaptation is not defined');\r\n        }\r\n\r\n        if (!type) {\r\n            throw new Error('type is not defined');\r\n        }\r\n\r\n        if (adaptation.hasOwnProperty('ContentComponent_asArray')) {\r\n            col = adaptation.ContentComponent_asArray;\r\n        }\r\n\r\n        mimeTypeRegEx = (type !== Constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\r\n\r\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length && adaptation.Representation_asArray.length > 0) {\r\n            let essentialProperties = getEssentialPropertiesForRepresentation(adaptation.Representation_asArray[0]);\r\n            if (essentialProperties && essentialProperties.length > 0 && THUMBNAILS_SCHEME_ID_URIS.indexOf(essentialProperties[0].schemeIdUri) >= 0) {\r\n                return type === Constants.IMAGE;\r\n            }\r\n            if (adaptation.Representation_asArray[0].hasOwnProperty(DashConstants.CODECS)) {\r\n                // Just check the start of the codecs string\r\n                codecs = adaptation.Representation_asArray[0].codecs;\r\n                if (codecs.search(Constants.STPP) === 0 || codecs.search(Constants.WVTT) === 0) {\r\n                    return type === Constants.FRAGMENTED_TEXT;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (col) {\r\n            if (col.length > 1) {\r\n                return (type === Constants.MUXED);\r\n            } else if (col[0] && col[0].contentType === type) {\r\n                result = true;\r\n                found = true;\r\n            }\r\n        }\r\n\r\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\r\n            result = mimeTypeRegEx.test(adaptation.mimeType);\r\n            found = true;\r\n        }\r\n\r\n        // couldn't find on adaptationset, so check a representation\r\n        if (!found) {\r\n            i = 0;\r\n            len = adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\r\n            while (!found && i < len) {\r\n                representation = adaptation.Representation_asArray[i];\r\n\r\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\r\n                    result = mimeTypeRegEx.test(representation.mimeType);\r\n                    found = true;\r\n                }\r\n\r\n                i++;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    function getIsAudio(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.AUDIO);\r\n    }\r\n\r\n    function getIsVideo(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.VIDEO);\r\n    }\r\n\r\n    function getIsFragmentedText(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.FRAGMENTED_TEXT);\r\n    }\r\n\r\n    function getIsMuxed(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.MUXED);\r\n    }\r\n\r\n    function getIsImage(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.IMAGE);\r\n    }\r\n\r\n    function getIsTextTrack(type) {\r\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\r\n    }\r\n\r\n    function getLanguageForAdaptation(adaptation) {\r\n        let lang = '';\r\n\r\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\r\n            //Filter out any other characters not allowed according to RFC5646\r\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g, '');\r\n        }\r\n\r\n        return lang;\r\n    }\r\n\r\n    function getViewpointForAdaptation(adaptation) {\r\n        return adaptation && adaptation.hasOwnProperty(DashConstants.VIEWPOINT) ? adaptation.Viewpoint : null;\r\n    }\r\n\r\n    function getRolesForAdaptation(adaptation) {\r\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) ? adaptation.Role_asArray : [];\r\n    }\r\n\r\n    function getAccessibilityForAdaptation(adaptation) {\r\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) ? adaptation.Accessibility_asArray : [];\r\n    }\r\n\r\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\r\n        return adaptation && adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? adaptation.AudioChannelConfiguration_asArray : [];\r\n    }\r\n\r\n    function getRepresentationSortFunction() {\r\n        return (a, b) => a.bandwidth - b.bandwidth;\r\n    }\r\n\r\n    function processAdaptation(realAdaptation) {\r\n        if (realAdaptation && realAdaptation.Representation_asArray !== undefined && realAdaptation.Representation_asArray !== null) {\r\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\r\n        }\r\n\r\n        return realAdaptation;\r\n    }\r\n\r\n    function getRealAdaptations(manifest, periodIndex) {\r\n        return manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\r\n    }\r\n\r\n    function getAdaptationForId(id, manifest, periodIndex) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        let i,\r\n            len;\r\n\r\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\r\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\r\n                return realAdaptations[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getAdaptationForIndex(index, manifest, periodIndex) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        if (realAdaptations.length > 0 && isInteger(index)) {\r\n            return realAdaptations[index];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        const len = realAdaptations.length;\r\n\r\n        if (realAdaptation) {\r\n            for (let i = 0; i < len; i++) {\r\n                let objectUtils = ObjectUtils(context).getInstance();\r\n                if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function getAdaptationsForType(manifest, periodIndex, type) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        let i,\r\n            len;\r\n        const adaptations = [];\r\n\r\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\r\n            if (getIsTypeOf(realAdaptations[i], type)) {\r\n                adaptations.push(processAdaptation(realAdaptations[i]));\r\n            }\r\n        }\r\n\r\n        return adaptations;\r\n    }\r\n\r\n    function getCodec(adaptation, representationId, addResolutionInfo) {\r\n        let codec = null;\r\n\r\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\r\n            const representation = isInteger(representationId) && representationId >= 0 && representationId < adaptation.Representation_asArray.length ?\r\n                adaptation.Representation_asArray[representationId] : adaptation.Representation_asArray[0];\r\n            if (representation) {\r\n                codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\r\n                if (addResolutionInfo && representation.width !== undefined) {\r\n                    codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\r\n                }\r\n            }\r\n        }\r\n\r\n        return codec;\r\n    }\r\n\r\n    function getMimeType(adaptation) {\r\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\r\n    }\r\n\r\n    function getKID(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\r\n            return null;\r\n        }\r\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\r\n    }\r\n\r\n    function getLabelsForAdaptation(adaptation) {\r\n        if (!adaptation.Label_asArray || !adaptation.Label_asArray.length) {\r\n            return [];\r\n        }\r\n\r\n        const labelArray = [];\r\n\r\n        for (let i = 0; i < adaptation.Label_asArray.length; i++) {\r\n            labelArray.push({\r\n                lang: adaptation.Label_asArray[i].lang,\r\n                text: adaptation.Label_asArray[i].__text || adaptation.Label_asArray[i]\r\n            });\r\n        }\r\n\r\n        return labelArray;\r\n    }\r\n\r\n    function getContentProtectionData(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\r\n            return null;\r\n        }\r\n        return adaptation.ContentProtection_asArray;\r\n    }\r\n\r\n    function getIsDynamic(manifest) {\r\n        let isDynamic = false;\r\n        if (manifest && manifest.hasOwnProperty('type')) {\r\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\r\n        }\r\n        return isDynamic;\r\n    }\r\n\r\n    function hasProfile(manifest, profile) {\r\n        let has = false;\r\n\r\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\r\n            has = (manifest.profiles.indexOf(profile) !== -1);\r\n        }\r\n\r\n        return has;\r\n    }\r\n\r\n    function getIsDVB(manifest) {\r\n        return hasProfile(manifest, PROFILE_DVB);\r\n    }\r\n\r\n    function getDuration(manifest) {\r\n        let mpdDuration;\r\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\r\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\r\n            mpdDuration = manifest.mediaPresentationDuration;\r\n        } else {\r\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\r\n        }\r\n\r\n        return mpdDuration;\r\n    }\r\n\r\n    function getBandwidth(representation) {\r\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\r\n    }\r\n\r\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\r\n        let delay = NaN;\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\r\n            delay = manifest.minimumUpdatePeriod;\r\n        }\r\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\r\n    }\r\n\r\n    function getRepresentationCount(adaptation) {\r\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\r\n    }\r\n\r\n    function getBitrateListForAdaptation(realAdaptation) {\r\n        if (!realAdaptation || !realAdaptation.Representation_asArray || !realAdaptation.Representation_asArray.length) return null;\r\n\r\n        const processedRealAdaptation = processAdaptation(realAdaptation);\r\n        const realRepresentations = processedRealAdaptation.Representation_asArray;\r\n\r\n        return realRepresentations.map((realRepresentation) => {\r\n            return {\r\n                bandwidth: realRepresentation.bandwidth,\r\n                width: realRepresentation.width || 0,\r\n                height: realRepresentation.height || 0,\r\n                scanType: realRepresentation.scanType || null\r\n            };\r\n        });\r\n    }\r\n\r\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\r\n        if (!realRepresentation || ! realRepresentation.EssentialProperty_asArray || !realRepresentation.EssentialProperty_asArray.length) return null;\r\n\r\n        return realRepresentation.EssentialProperty_asArray.map( (prop) => {\r\n            return {\r\n                schemeIdUri: prop.schemeIdUri,\r\n                value: prop.value\r\n            };\r\n        });\r\n    }\r\n\r\n    function getRepresentationFor(index, adaptation) {\r\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 &&\r\n            isInteger(index) ? adaptation.Representation_asArray[index] : null;\r\n    }\r\n\r\n    function getRealAdaptationFor(voAdaptation) {\r\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\r\n            const periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\r\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\r\n                return processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isLastRepeatAttributeValid(segmentTimeline) {\r\n        let s = segmentTimeline.S_asArray[segmentTimeline.S_asArray.length - 1];\r\n        return !s.hasOwnProperty('r') || s.r >= 0;\r\n    }\r\n\r\n    function getUseCalculatedLiveEdgeTimeForAdaptation(voAdaptation) {\r\n        let realRepresentation = getRealAdaptationFor(voAdaptation).Representation_asArray[0];\r\n        let segmentInfo;\r\n        if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\r\n            segmentInfo = realRepresentation.SegmentList;\r\n            return segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ?\r\n                isLastRepeatAttributeValid(segmentInfo.SegmentTimeline) :\r\n                true;\r\n        } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\r\n            segmentInfo = realRepresentation.SegmentTemplate;\r\n            if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\r\n                return isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function getRepresentationsForAdaptation(voAdaptation) {\r\n        const voRepresentations = [];\r\n        const processedRealAdaptation = getRealAdaptationFor(voAdaptation);\r\n        let segmentInfo,\r\n            baseUrl;\r\n\r\n        // TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations\r\n        // that we are processing. Making it works properly will require much further changes and given\r\n        // parsing base Urls parameters is needed for our ultra low latency examples, we will\r\n        // keep this \"tricky\" code until the real (and good) solution comes\r\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\r\n            const baseUrls = getBaseURLsFromElement(voAdaptation.period.mpd.manifest);\r\n            if (baseUrls) {\r\n                baseUrl = baseUrls[0];\r\n            }\r\n        }\r\n\r\n        if (processedRealAdaptation && processedRealAdaptation.Representation_asArray) {\r\n            for (let i = 0, len = processedRealAdaptation.Representation_asArray.length; i < len; ++i) {\r\n                const realRepresentation = processedRealAdaptation.Representation_asArray[i];\r\n                const voRepresentation = new Representation();\r\n                voRepresentation.index = i;\r\n                voRepresentation.adaptation = voAdaptation;\r\n\r\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\r\n                    voRepresentation.id = realRepresentation.id;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\r\n                    voRepresentation.codecs = realRepresentation.codecs;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\r\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\r\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\r\n                    voRepresentation.width = realRepresentation.width;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\r\n                    voRepresentation.height = realRepresentation.height;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\r\n                    voRepresentation.scanType = realRepresentation.scanType;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\r\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\r\n                }\r\n\r\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\r\n                    segmentInfo = realRepresentation.SegmentBase;\r\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\r\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\r\n                    segmentInfo = realRepresentation.SegmentList;\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\r\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\r\n                    } else {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\r\n                        voRepresentation.useCalculatedLiveEdgeTime = true;\r\n                    }\r\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\r\n                    segmentInfo = realRepresentation.SegmentTemplate;\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\r\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\r\n                    } else {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\r\n                    }\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\r\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\r\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\r\n                    }\r\n                } else {\r\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\r\n                }\r\n\r\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\r\n\r\n                if (segmentInfo) {\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\r\n                        let initialization = segmentInfo.Initialization;\r\n\r\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\r\n                            voRepresentation.initialization = initialization.sourceURL;\r\n                        } else if (initialization.hasOwnProperty(DashConstants.RANGE)) {\r\n                            voRepresentation.range = initialization.range;\r\n                            // initialization source url will be determined from\r\n                            // BaseURL when resolved at load time.\r\n                        }\r\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE) && getIsTextTrack(realRepresentation.mimeType)) {\r\n                        voRepresentation.range = 0;\r\n                    }\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\r\n                        voRepresentation.timescale = segmentInfo.timescale;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\r\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\r\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\r\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\r\n                        // exceeds @maxSegmentDuration\r\n                        //representation.segmentDuration = Math.min(segmentInfo.duration / representation.timescale, adaptation.period.mpd.maxSegmentDuration);\r\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\r\n                        voRepresentation.media = segmentInfo.media;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\r\n                        voRepresentation.startNumber = segmentInfo.startNumber;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\r\n                        voRepresentation.indexRange = segmentInfo.indexRange;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\r\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\r\n                        voRepresentation.availabilityTimeOffset = segmentInfo.availabilityTimeOffset;\r\n                    } else if (baseUrl && baseUrl.availabilityTimeOffset !== undefined) {\r\n                        voRepresentation.availabilityTimeOffset = baseUrl.availabilityTimeOffset;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\r\n                        voRepresentation.availabilityTimeComplete = segmentInfo.availabilityTimeComplete !== 'false';\r\n                    } else if (baseUrl && baseUrl.availabilityTimeComplete !== undefined) {\r\n                        voRepresentation.availabilityTimeComplete = baseUrl.availabilityTimeComplete;\r\n                    }\r\n                }\r\n\r\n                voRepresentation.MSETimeOffset = timelineConverter.calcMSETimeOffset(voRepresentation);\r\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\r\n                voRepresentations.push(voRepresentation);\r\n            }\r\n        }\r\n\r\n        return voRepresentations;\r\n    }\r\n\r\n    function getAdaptationsForPeriod(voPeriod) {\r\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\r\n        const voAdaptations = [];\r\n        let voAdaptationSet,\r\n            realAdaptationSet,\r\n            i;\r\n\r\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\r\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\r\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\r\n                voAdaptationSet = new AdaptationSet();\r\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\r\n                    voAdaptationSet.id = realAdaptationSet.id;\r\n                }\r\n                voAdaptationSet.index = i;\r\n                voAdaptationSet.period = voPeriod;\r\n\r\n                if (getIsMuxed(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.MUXED;\r\n                } else if (getIsAudio(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.AUDIO;\r\n                } else if (getIsVideo(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.VIDEO;\r\n                } else if (getIsFragmentedText(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.FRAGMENTED_TEXT;\r\n                } else if (getIsImage(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.IMAGE;\r\n                } else {\r\n                    voAdaptationSet.type = Constants.TEXT;\r\n                }\r\n                voAdaptations.push(voAdaptationSet);\r\n            }\r\n        }\r\n\r\n        return voAdaptations;\r\n    }\r\n\r\n    function getRegularPeriods(mpd) {\r\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\r\n        const voPeriods = [];\r\n        let realPreviousPeriod = null;\r\n        let realPeriod = null;\r\n        let voPreviousPeriod = null;\r\n        let voPeriod = null;\r\n        let len,\r\n            i;\r\n\r\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\r\n            realPeriod = mpd.manifest.Period_asArray[i];\r\n\r\n            // If the attribute @start is present in the Period, then the\r\n            // Period is a regular Period and the PeriodStart is equal\r\n            // to the value of this attribute.\r\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\r\n                voPeriod = new Period();\r\n                voPeriod.start = realPeriod.start;\r\n            }\r\n            // If the @start attribute is absent, but the previous Period\r\n            // element contains a @duration attribute then then this new\r\n            // Period is also a regular Period. The start time of the new\r\n            // Period PeriodStart is the sum of the start time of the previous\r\n            // Period PeriodStart and the value of the attribute @duration\r\n            // of the previous Period.\r\n            else if (realPreviousPeriod !== null && realPreviousPeriod.hasOwnProperty(DashConstants.DURATION) && voPreviousPeriod !== null) {\r\n                voPeriod = new Period();\r\n                voPeriod.start = parseFloat((voPreviousPeriod.start + voPreviousPeriod.duration).toFixed(5));\r\n            }\r\n            // If (i) @start attribute is absent, and (ii) the Period element\r\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\r\n            // then the PeriodStart time shall be set to zero.\r\n            else if (i === 0 && !isDynamic) {\r\n                voPeriod = new Period();\r\n                voPeriod.start = 0;\r\n            }\r\n\r\n            // The Period extends until the PeriodStart of the next Period.\r\n            // The difference between the PeriodStart time of a Period and\r\n            // the PeriodStart time of the following Period.\r\n            if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\r\n                if (voPeriod !== null) {\r\n                    voPreviousPeriod.duration = parseFloat((voPeriod.start - voPreviousPeriod.start).toFixed(5));\r\n                } else {\r\n                    logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');\r\n                }\r\n            }\r\n\r\n            if (voPeriod !== null) {\r\n                voPeriod.id = getPeriodId(realPeriod, i);\r\n                voPeriod.index = i;\r\n                voPeriod.mpd = mpd;\r\n\r\n                if (realPeriod.hasOwnProperty(DashConstants.DURATION)) {\r\n                    voPeriod.duration = realPeriod.duration;\r\n                }\r\n\r\n                voPeriods.push(voPeriod);\r\n                realPreviousPeriod = realPeriod;\r\n                voPreviousPeriod = voPeriod;\r\n            }\r\n\r\n            realPeriod = null;\r\n            voPeriod = null;\r\n        }\r\n\r\n        if (voPeriods.length === 0) {\r\n            return voPeriods;\r\n        }\r\n\r\n        // The last Period extends until the end of the Media Presentation.\r\n        // The difference between the PeriodStart time of the last Period\r\n        // and the mpd duration\r\n        if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\r\n            voPreviousPeriod.duration = parseFloat((getEndTimeForLastPeriod(voPreviousPeriod) - voPreviousPeriod.start).toFixed(5));\r\n        }\r\n\r\n        return voPeriods;\r\n    }\r\n\r\n    function getPeriodId(realPeriod, i) {\r\n        if (!realPeriod) {\r\n            throw new Error('Period cannot be null or undefined');\r\n        }\r\n\r\n        let id = Period.DEFAULT_ID + '_' + i;\r\n\r\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.length > 0 && realPeriod.id !== '__proto__') {\r\n            id = realPeriod.id;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    function getMpd(manifest) {\r\n        const mpd = new Mpd();\r\n\r\n        if (manifest) {\r\n            mpd.manifest = manifest;\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\r\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\r\n            } else {\r\n                mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\r\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\r\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\r\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(Constants.SUGGESTED_PRESENTATION_DELAY)) {\r\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\r\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\r\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\r\n            }\r\n        }\r\n\r\n        return mpd;\r\n    }\r\n\r\n\r\n    function getEndTimeForLastPeriod(voPeriod) {\r\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\r\n\r\n        let periodEnd;\r\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\r\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\r\n        } else if (voPeriod.duration) {\r\n            periodEnd = voPeriod.duration;\r\n        } else if (isDynamic) {\r\n            periodEnd = Number.POSITIVE_INFINITY;\r\n        } else {\r\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_PARSE_CODE, 'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.', voPeriod));\r\n        }\r\n\r\n        return periodEnd;\r\n    }\r\n\r\n    function getEventsForPeriod(period) {\r\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\r\n        const periodArray = manifest ? manifest.Period_asArray : null;\r\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\r\n        const events = [];\r\n        let i,\r\n            j;\r\n\r\n        if (eventStreams) {\r\n            for (i = 0; i < eventStreams.length; i++) {\r\n                const eventStream = new EventStream();\r\n                eventStream.period = period;\r\n                eventStream.timescale = 1;\r\n\r\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\r\n                    eventStream.schemeIdUri = eventStreams[i].schemeIdUri;\r\n                } else {\r\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\r\n                }\r\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\r\n                    eventStream.timescale = eventStreams[i].timescale;\r\n                }\r\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\r\n                    eventStream.value = eventStreams[i].value;\r\n                }\r\n                for (j = 0; eventStreams[i].Event_asArray && j < eventStreams[i].Event_asArray.length; j++) {\r\n                    const event = new Event();\r\n                    event.presentationTime = 0;\r\n                    event.eventStream = eventStream;\r\n\r\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\r\n                        event.presentationTime = eventStreams[i].Event_asArray[j].presentationTime;\r\n                    }\r\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.DURATION)) {\r\n                        event.duration = eventStreams[i].Event_asArray[j].duration;\r\n                    }\r\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.ID)) {\r\n                        event.id = eventStreams[i].Event_asArray[j].id;\r\n                    }\r\n\r\n                    if (eventStreams[i].Event_asArray[j].Signal && eventStreams[i].Event_asArray[j].Signal.Binary) {\r\n                        event.messageData = BASE64.decodeArray(eventStreams[i].Event_asArray[j].Signal.Binary);\r\n                    } else {\r\n                        // From Cor.1: 'NOTE: this attribute is an alternative\r\n                        // to specifying a complete XML element(s) in the Event.\r\n                        // It is useful when an event leans itself to a compact\r\n                        // string representation'.\r\n                        event.messageData =\r\n                            eventStreams[i].Event_asArray[j].messageData ||\r\n                            eventStreams[i].Event_asArray[j].__text;\r\n                    }\r\n\r\n                    events.push(event);\r\n                }\r\n            }\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    function getEventStreams(inbandStreams, representation) {\r\n        const eventStreams = [];\r\n        let i;\r\n\r\n        if (!inbandStreams) return eventStreams;\r\n\r\n        for (i = 0; i < inbandStreams.length; i++) {\r\n            const eventStream = new EventStream();\r\n            eventStream.timescale = 1;\r\n            eventStream.representation = representation;\r\n\r\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\r\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\r\n            } else {\r\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\r\n            }\r\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\r\n                eventStream.timescale = inbandStreams[i].timescale;\r\n            }\r\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\r\n                eventStream.value = inbandStreams[i].value;\r\n            }\r\n            eventStreams.push(eventStream);\r\n        }\r\n\r\n        return eventStreams;\r\n    }\r\n\r\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\r\n        let inbandStreams,\r\n            periodArray,\r\n            adaptationArray;\r\n\r\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\r\n            periodArray = manifest.Period_asArray[adaptation.period.index];\r\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\r\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\r\n                if (adaptationArray) {\r\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        return getEventStreams(inbandStreams, null);\r\n    }\r\n\r\n    function getEventStreamForRepresentation(manifest, representation) {\r\n        let inbandStreams,\r\n            periodArray,\r\n            adaptationArray,\r\n            representationArray;\r\n\r\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\r\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\r\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\r\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\r\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\r\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\r\n                    if (representationArray) {\r\n                        inbandStreams = representationArray.InbandEventStream_asArray;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return getEventStreams(inbandStreams, representation);\r\n    }\r\n\r\n    function getUTCTimingSources(manifest) {\r\n        const isDynamic = getIsDynamic(manifest);\r\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\r\n        const utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\r\n        const utcTimingEntries = [];\r\n\r\n        // do not bother synchronizing the clock unless MPD is live,\r\n        // or it is static and has availabilityStartTime attribute\r\n        if ((isDynamic || hasAST)) {\r\n            if (utcTimingsArray) {\r\n                // the order is important here - 23009-1 states that the order\r\n                // in the manifest \"indicates relative preference, first having\r\n                // the highest, and the last the lowest priority\".\r\n                utcTimingsArray.forEach(function (utcTiming) {\r\n                    const entry = new UTCTiming();\r\n\r\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\r\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\r\n                    } else {\r\n                        // entries of type DescriptorType with no schemeIdUri\r\n                        // are meaningless. let's just ignore this entry and\r\n                        // move on.\r\n                        return;\r\n                    }\r\n\r\n                    // this is (incorrectly) interpreted as a number - schema\r\n                    // defines it as a string\r\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\r\n                        entry.value = utcTiming.value.toString();\r\n                    } else {\r\n                        // without a value, there's not a lot we can do with\r\n                        // this entry. let's just ignore this one and move on\r\n                        return;\r\n                    }\r\n\r\n                    // we're not interested in the optional id or any other\r\n                    // attributes which might be attached to the entry\r\n\r\n                    utcTimingEntries.push(entry);\r\n                });\r\n            }\r\n        }\r\n\r\n        return utcTimingEntries;\r\n    }\r\n\r\n    function getBaseURLsFromElement(node) {\r\n        const baseUrls = [];\r\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\r\n        // will be [undefined] which entries.some will just skip\r\n        const entries = node.BaseURL_asArray || [node.baseUri];\r\n        let earlyReturn = false;\r\n\r\n        entries.some(entry => {\r\n            if (entry) {\r\n                const baseUrl = new BaseURL();\r\n                let text = entry.__text || entry;\r\n\r\n                if (urlUtils.isRelative(text)) {\r\n                    // it doesn't really make sense to have relative and\r\n                    // absolute URLs at the same level, or multiple\r\n                    // relative URLs at the same level, so assume we are\r\n                    // done from this level of the MPD\r\n                    earlyReturn = true;\r\n\r\n                    // deal with the specific case where the MPD@BaseURL\r\n                    // is specified and is relative. when no MPD@BaseURL\r\n                    // entries exist, that case is handled by the\r\n                    // [node.baseUri] in the entries definition.\r\n                    if (node.baseUri) {\r\n                        text = urlUtils.resolve(text, node.baseUri);\r\n                    }\r\n                }\r\n\r\n                baseUrl.url = text;\r\n\r\n                // serviceLocation is optional, but we need it in order\r\n                // to blacklist correctly. if it's not available, use\r\n                // anything unique since there's no relationship to any\r\n                // other BaseURL and, in theory, the url should be\r\n                // unique so use this instead.\r\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\r\n                    entry.serviceLocation.length) {\r\n                    baseUrl.serviceLocation = entry.serviceLocation;\r\n                } else {\r\n                    baseUrl.serviceLocation = text;\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\r\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\r\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\r\n                    baseUrl.availabilityTimeOffset = entry[DashConstants.AVAILABILITY_TIME_OFFSET];\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\r\n                    baseUrl.availabilityTimeComplete = entry[DashConstants.AVAILABILITY_TIME_COMPLETE] !== 'false';\r\n                }\r\n                /* NOTE: byteRange currently unused\r\n                 */\r\n\r\n                baseUrls.push(baseUrl);\r\n\r\n                return earlyReturn;\r\n            }\r\n        });\r\n\r\n        return baseUrls;\r\n    }\r\n\r\n    function getLocation(manifest) {\r\n        if (manifest && manifest.hasOwnProperty(Constants.LOCATION)) {\r\n            // for now, do not support multiple Locations -\r\n            // just set Location to the first Location.\r\n            manifest.Location = manifest.Location_asArray[0];\r\n\r\n            return manifest.Location;\r\n        }\r\n\r\n        // may well be undefined\r\n        return undefined;\r\n    }\r\n\r\n    instance = {\r\n        getIsTypeOf: getIsTypeOf,\r\n        getIsTextTrack: getIsTextTrack,\r\n        getLanguageForAdaptation: getLanguageForAdaptation,\r\n        getViewpointForAdaptation: getViewpointForAdaptation,\r\n        getRolesForAdaptation: getRolesForAdaptation,\r\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\r\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\r\n        getAdaptationForIndex: getAdaptationForIndex,\r\n        getIndexForAdaptation: getIndexForAdaptation,\r\n        getAdaptationForId: getAdaptationForId,\r\n        getAdaptationsForType: getAdaptationsForType,\r\n        getCodec: getCodec,\r\n        getMimeType: getMimeType,\r\n        getKID: getKID,\r\n        getLabelsForAdaptation: getLabelsForAdaptation,\r\n        getContentProtectionData: getContentProtectionData,\r\n        getIsDynamic: getIsDynamic,\r\n        getIsDVB: getIsDVB,\r\n        getDuration: getDuration,\r\n        getBandwidth: getBandwidth,\r\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\r\n        getRepresentationCount: getRepresentationCount,\r\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\r\n        getRepresentationFor: getRepresentationFor,\r\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\r\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\r\n        getRegularPeriods: getRegularPeriods,\r\n        getMpd: getMpd,\r\n        getEventsForPeriod: getEventsForPeriod,\r\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\r\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\r\n        getUTCTimingSources: getUTCTimingSources,\r\n        getBaseURLsFromElement: getBaseURLsFromElement,\r\n        getRepresentationSortFunction: getRepresentationSortFunction,\r\n        getLocation: getLocation,\r\n        getUseCalculatedLiveEdgeTimeForAdaptation: getUseCalculatedLiveEdgeTimeForAdaptation\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\r\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\r\n"]}