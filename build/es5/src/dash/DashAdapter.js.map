{"version":3,"sources":["../../../../src/dash/DashAdapter.js"],"names":["Constants","DashConstants","RepresentationInfo","MediaInfo","StreamInfo","ManifestInfo","Event","FactoryMaker","cea608parser","checkInteger","DashAdapter","instance","dashManifestModel","voPeriods","voAdaptations","currentMediaInfo","setup","reset","setConfig","config","getRepresentationForRepresentationInfo","representationInfo","representationController","getRepresentationForQuality","quality","getAdaptationForMediaInfo","mediaInfo","streamInfo","id","undefined","index","getPeriodForStreamInfo","voPeriodsArray","ln","length","i","voPeriod","convertRepresentationToRepresentationInfo","voRepresentation","realAdaptation","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","realRepresentation","getRepresentationFor","bandwidth","getBandwidth","DVRWindow","segmentAvailabilityRange","fragmentDuration","segmentDuration","segments","duration","NaN","MSETimeOffset","useCalculatedLiveEdgeTime","convertAdaptationToMediaInfo","viewpoint","type","convertPeriodToStreamInfo","representationCount","getRepresentationCount","labels","getLabelsForAdaptation","lang","getLanguageForAdaptation","getViewpointForAdaptation","value","accessibility","getAccessibilityForAdaptation","map","accessibilityValue","accessibilityData","schemeIdUri","search","embeddedCaptions","audioChannelConfiguration","getAudioChannelConfigurationForAdaptation","roles","getRolesForAdaptation","role","codec","getCodec","mimeType","getMimeType","contentProtection","getContentProtectionData","bitrateList","getBitrateListForAdaptation","forEach","item","KID","getKID","isText","getIsTextTrack","convertVideoInfoToEmbeddedTextInfo","channel","parseInt","substring","EMBEDDED_TEXT","isEmbedded","convertVideoInfoToThumbnailInfo","IMAGE","THRESHOLD","start","manifestInfo","convertMpdToManifestInfo","isLast","Math","abs","DVRWindowSize","timeShiftBufferDepth","loadedTime","availableFrom","availabilityStartTime","minBufferTime","maxFragmentDuration","maxSegmentDuration","getDuration","isDynamic","getIsDynamic","getMediaInfoForType","getAdaptationForType","selectedVoPeriod","periodId","idx","getIndexForAdaptation","getAdaptationsForPeriod","getIsMain","filter","MAIN","periodIndex","adaptations","getAdaptationsForType","allMediaInfoForType","getAllMediaInfoForType","isMediaInfoEqual","externalManifest","voLocalPeriods","mediaArr","data","media","j","checkSetConfigCall","getMpd","getRegularPeriods","adaptationsForType","VIDEO","accessibilityLength","indexOf","parts","split","call","push","CC1","hasOwnProperty","Error","updatePeriods","newManifest","getStreamsInfo","maxStreamsInfo","streams","checkStreamProcessor","streamProcessor","checkRepresentationController","getInitRequest","representation","indexHandler","getRepresentationController","getIndexHandler","getFragmentRequest","time","options","fragRequest","getSegmentRequestForTime","getNextSegmentRequest","getIndexHandlerTime","getCurrentTime","setIndexHandlerTime","setCurrentTime","resetIndexHandler","resetIndex","updateData","getStreamInfo","getMediaInfo","voAdaptation","getType","getAdaptationForId","getAdaptationForIndex","getRepresentationInfo","getCurrentRepresentation","getEvent","eventBox","eventStreams","startTime","event","scheme_id_uri","timescale","presentationTimeDelta","presentation_time_delta","event_duration","messageData","message_data","presentationTime","eventStream","getEventsFor","info","events","getEventsForPeriod","getEventStreamForAdaptationSet","getEventStreamForRepresentation","setCurrentMediaInfo","streamId","convertDataToRepresentationInfo","getDataForMedia","__dashjs_factory_name","getSingletonFactory"],"mappings":"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","file":"DashAdapter.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport Constants from '../streaming/constants/Constants';\r\nimport DashConstants from './constants/DashConstants';\r\nimport RepresentationInfo from '../streaming/vo/RepresentationInfo';\r\nimport MediaInfo from '../streaming/vo/MediaInfo';\r\nimport StreamInfo from '../streaming/vo/StreamInfo';\r\nimport ManifestInfo from '../streaming/vo/ManifestInfo';\r\nimport Event from './vo/Event';\r\nimport FactoryMaker from '../core/FactoryMaker';\r\nimport cea608parser from '../../externals/cea608-parser';\r\nimport { checkInteger } from '../streaming/utils/SupervisorTools';\r\n\r\nfunction DashAdapter() {\r\n    let instance,\r\n        dashManifestModel,\r\n        voPeriods,\r\n        voAdaptations,\r\n        currentMediaInfo;\r\n\r\n    function setup() {\r\n        reset();\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.dashManifestModel) {\r\n            dashManifestModel = config.dashManifestModel;\r\n        }\r\n    }\r\n\r\n    function getRepresentationForRepresentationInfo(representationInfo, representationController) {\r\n        return representationController && representationInfo ? representationController.getRepresentationForQuality(representationInfo.quality) : null;\r\n    }\r\n\r\n    function getAdaptationForMediaInfo(mediaInfo) {\r\n\r\n        if (!mediaInfo || !mediaInfo.streamInfo || mediaInfo.streamInfo.id === undefined || !voAdaptations[mediaInfo.streamInfo.id]) return null;\r\n        return voAdaptations[mediaInfo.streamInfo.id][mediaInfo.index];\r\n    }\r\n\r\n    function getPeriodForStreamInfo(streamInfo, voPeriodsArray) {\r\n        const ln = voPeriodsArray.length;\r\n\r\n        for (let i = 0; i < ln; i++) {\r\n            let voPeriod = voPeriodsArray[i];\r\n\r\n            if (streamInfo.id === voPeriod.id) return voPeriod;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function convertRepresentationToRepresentationInfo(voRepresentation) {\r\n        let representationInfo = new RepresentationInfo();\r\n        const realAdaptation = voRepresentation.adaptation.period.mpd.manifest.Period_asArray[voRepresentation.adaptation.period.index].AdaptationSet_asArray[voRepresentation.adaptation.index];\r\n        const realRepresentation = dashManifestModel.getRepresentationFor(voRepresentation.index, realAdaptation);\r\n\r\n        representationInfo.id = voRepresentation.id;\r\n        representationInfo.quality = voRepresentation.index;\r\n        representationInfo.bandwidth = dashManifestModel.getBandwidth(realRepresentation);\r\n        representationInfo.DVRWindow = voRepresentation.segmentAvailabilityRange;\r\n        representationInfo.fragmentDuration = voRepresentation.segmentDuration || (voRepresentation.segments && voRepresentation.segments.length > 0 ? voRepresentation.segments[0].duration : NaN);\r\n        representationInfo.MSETimeOffset = voRepresentation.MSETimeOffset;\r\n        representationInfo.useCalculatedLiveEdgeTime = voRepresentation.useCalculatedLiveEdgeTime;\r\n        representationInfo.mediaInfo = convertAdaptationToMediaInfo(voRepresentation.adaptation);\r\n\r\n        return representationInfo;\r\n    }\r\n\r\n    function convertAdaptationToMediaInfo(adaptation) {\r\n        let mediaInfo = new MediaInfo();\r\n        const realAdaptation = adaptation.period.mpd.manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index];\r\n        let viewpoint;\r\n\r\n        mediaInfo.id = adaptation.id;\r\n        mediaInfo.index = adaptation.index;\r\n        mediaInfo.type = adaptation.type;\r\n        mediaInfo.streamInfo = convertPeriodToStreamInfo(adaptation.period);\r\n        mediaInfo.representationCount = dashManifestModel.getRepresentationCount(realAdaptation);\r\n        mediaInfo.labels = dashManifestModel.getLabelsForAdaptation(realAdaptation);\r\n        mediaInfo.lang = dashManifestModel.getLanguageForAdaptation(realAdaptation);\r\n        viewpoint = dashManifestModel.getViewpointForAdaptation(realAdaptation);\r\n        mediaInfo.viewpoint = viewpoint ? viewpoint.value : undefined;\r\n        mediaInfo.accessibility = dashManifestModel.getAccessibilityForAdaptation(realAdaptation).map(function (accessibility) {\r\n            let accessibilityValue = accessibility.value;\r\n            let accessibilityData = accessibilityValue;\r\n            if (accessibility.schemeIdUri && (accessibility.schemeIdUri.search('cea-608') >= 0) && typeof (cea608parser) !== 'undefined') {\r\n                if (accessibilityValue) {\r\n                    accessibilityData = 'cea-608:' + accessibilityValue;\r\n                } else {\r\n                    accessibilityData = 'cea-608';\r\n                }\r\n                mediaInfo.embeddedCaptions = true;\r\n            }\r\n            return accessibilityData;\r\n        });\r\n\r\n        mediaInfo.audioChannelConfiguration = dashManifestModel.getAudioChannelConfigurationForAdaptation(realAdaptation).map(function (audioChannelConfiguration) {\r\n            return audioChannelConfiguration.value;\r\n        });\r\n        mediaInfo.roles = dashManifestModel.getRolesForAdaptation(realAdaptation).map(function (role) {\r\n            return role.value;\r\n        });\r\n        mediaInfo.codec = dashManifestModel.getCodec(realAdaptation);\r\n        mediaInfo.mimeType = dashManifestModel.getMimeType(realAdaptation);\r\n        mediaInfo.contentProtection = dashManifestModel.getContentProtectionData(realAdaptation);\r\n        mediaInfo.bitrateList = dashManifestModel.getBitrateListForAdaptation(realAdaptation);\r\n\r\n        if (mediaInfo.contentProtection) {\r\n            mediaInfo.contentProtection.forEach(function (item) {\r\n                item.KID = dashManifestModel.getKID(item);\r\n            });\r\n        }\r\n\r\n        mediaInfo.isText = dashManifestModel.getIsTextTrack(mediaInfo.mimeType);\r\n\r\n        return mediaInfo;\r\n    }\r\n\r\n    function convertVideoInfoToEmbeddedTextInfo(mediaInfo, channel, lang) {\r\n        mediaInfo.id = channel; // CC1, CC2, CC3, or CC4\r\n        mediaInfo.index = 100 + parseInt(channel.substring(2, 3));\r\n        mediaInfo.type = Constants.EMBEDDED_TEXT;\r\n        mediaInfo.codec = 'cea-608-in-SEI';\r\n        mediaInfo.isText = true;\r\n        mediaInfo.isEmbedded = true;\r\n        mediaInfo.lang = lang;\r\n        mediaInfo.roles = ['caption'];\r\n    }\r\n\r\n    function convertVideoInfoToThumbnailInfo(mediaInfo) {\r\n        mediaInfo.type = Constants.IMAGE;\r\n    }\r\n\r\n    function convertPeriodToStreamInfo(period) {\r\n        let streamInfo = new StreamInfo();\r\n        const THRESHOLD = 1;\r\n\r\n        streamInfo.id = period.id;\r\n        streamInfo.index = period.index;\r\n        streamInfo.start = period.start;\r\n        streamInfo.duration = period.duration;\r\n        streamInfo.manifestInfo = convertMpdToManifestInfo(period.mpd);\r\n        streamInfo.isLast = period.mpd.manifest.Period_asArray.length === 1 || Math.abs((streamInfo.start + streamInfo.duration) - streamInfo.manifestInfo.duration) < THRESHOLD;\r\n\r\n        return streamInfo;\r\n    }\r\n\r\n    function convertMpdToManifestInfo(mpd) {\r\n        let manifestInfo = new ManifestInfo();\r\n\r\n        manifestInfo.DVRWindowSize = mpd.timeShiftBufferDepth;\r\n        manifestInfo.loadedTime = mpd.manifest.loadedTime;\r\n        manifestInfo.availableFrom = mpd.availabilityStartTime;\r\n        manifestInfo.minBufferTime = mpd.manifest.minBufferTime;\r\n        manifestInfo.maxFragmentDuration = mpd.maxSegmentDuration;\r\n        manifestInfo.duration = dashManifestModel.getDuration(mpd.manifest);\r\n        manifestInfo.isDynamic = dashManifestModel.getIsDynamic(mpd.manifest);\r\n\r\n        return manifestInfo;\r\n    }\r\n\r\n    function getMediaInfoForType(streamInfo, type) {\r\n\r\n        if (voPeriods.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const manifest = voPeriods[0].mpd.manifest;\r\n        let realAdaptation = getAdaptationForType(manifest, streamInfo.index, type, streamInfo);\r\n        if (!realAdaptation) return null;\r\n\r\n        let selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\r\n        let periodId = selectedVoPeriod.id;\r\n        let idx = dashManifestModel.getIndexForAdaptation(realAdaptation, manifest, streamInfo.index);\r\n\r\n        voAdaptations[periodId] = voAdaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\r\n\r\n        return convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);\r\n    }\r\n\r\n    function getIsMain(adaptation) {\r\n        return dashManifestModel.getRolesForAdaptation(adaptation).filter(function (role) {\r\n            return role.value === DashConstants.MAIN;\r\n        })[0];\r\n    }\r\n\r\n    function getAdaptationForType(manifest, periodIndex, type, streamInfo) {\r\n        const adaptations = dashManifestModel.getAdaptationsForType(manifest, periodIndex, type);\r\n\r\n        if (!adaptations || adaptations.length === 0) return null;\r\n\r\n        if (adaptations.length > 1 && streamInfo) {\r\n            const allMediaInfoForType = getAllMediaInfoForType(streamInfo, type);\r\n\r\n            if (currentMediaInfo[streamInfo.id] && currentMediaInfo[streamInfo.id][type]) {\r\n                for (let i = 0, ln = adaptations.length; i < ln; i++) {\r\n                    if (currentMediaInfo[streamInfo.id][type].isMediaInfoEqual(allMediaInfoForType[i])) {\r\n                        return adaptations[i];\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\r\n                if (getIsMain(adaptations[i])) {\r\n                    return adaptations[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return adaptations[0];\r\n    }\r\n\r\n    function getAllMediaInfoForType(streamInfo, type, externalManifest) {\r\n        let voLocalPeriods = voPeriods;\r\n        let manifest = externalManifest;\r\n        let mediaArr = [];\r\n        let data,\r\n            media,\r\n            idx,\r\n            i,\r\n            j,\r\n            ln;\r\n\r\n        if (manifest) {\r\n            checkSetConfigCall();\r\n            const mpd = dashManifestModel.getMpd(manifest);\r\n\r\n            voLocalPeriods = dashManifestModel.getRegularPeriods(mpd);\r\n        } else {\r\n            if (voPeriods.length > 0) {\r\n                manifest = voPeriods[0].mpd.manifest;\r\n            } else {\r\n                return mediaArr;\r\n            }\r\n        }\r\n\r\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voLocalPeriods);\r\n        const periodId = selectedVoPeriod.id;\r\n        const adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo.index, type !== Constants.EMBEDDED_TEXT ? type : Constants.VIDEO);\r\n\r\n        if (!adaptationsForType) return mediaArr;\r\n\r\n        voAdaptations[periodId] = voAdaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\r\n\r\n        for (i = 0, ln = adaptationsForType.length; i < ln; i++) {\r\n            data = adaptationsForType[i];\r\n            idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\r\n            media = convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);\r\n\r\n            if (type === Constants.EMBEDDED_TEXT) {\r\n                let accessibilityLength = media.accessibility.length;\r\n                for (j = 0; j < accessibilityLength; j++) {\r\n                    if (!media) {\r\n                        continue;\r\n                    }\r\n                    let accessibility = media.accessibility[j];\r\n                    if (accessibility.indexOf('cea-608:') === 0) {\r\n                        let value = accessibility.substring(8);\r\n                        let parts = value.split(';');\r\n                        if (parts[0].substring(0, 2) === 'CC') {\r\n                            for (j = 0; j < parts.length; j++) {\r\n                                if (!media) {\r\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[periodId][idx]);\r\n                                }\r\n                                convertVideoInfoToEmbeddedTextInfo(media, parts[j].substring(0, 3), parts[j].substring(4));\r\n                                mediaArr.push(media);\r\n                                media = null;\r\n                            }\r\n                        } else {\r\n                            for (j = 0; j < parts.length; j++) { // Only languages for CC1, CC2, ...\r\n                                if (!media) {\r\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[periodId][idx]);\r\n                                }\r\n                                convertVideoInfoToEmbeddedTextInfo(media, 'CC' + (j + 1), parts[j]);\r\n                                mediaArr.push(media);\r\n                                media = null;\r\n                            }\r\n                        }\r\n                    } else if (accessibility.indexOf('cea-608') === 0) { // Nothing known. We interpret it as CC1=eng\r\n                        convertVideoInfoToEmbeddedTextInfo(media, Constants.CC1, 'eng');\r\n                        mediaArr.push(media);\r\n                        media = null;\r\n                    }\r\n                }\r\n            } else if (type === Constants.IMAGE) {\r\n                convertVideoInfoToThumbnailInfo(media);\r\n                mediaArr.push(media);\r\n                media = null;\r\n            } else if (media) {\r\n                mediaArr.push(media);\r\n            }\r\n        }\r\n\r\n        return mediaArr;\r\n    }\r\n\r\n    function checkSetConfigCall() {\r\n        if (!dashManifestModel || !dashManifestModel.hasOwnProperty('getMpd') || !dashManifestModel.hasOwnProperty('getRegularPeriods')) {\r\n            throw new Error('setConfig function has to be called previously');\r\n        }\r\n    }\r\n\r\n    function updatePeriods(newManifest) {\r\n        if (!newManifest) return null;\r\n\r\n        checkSetConfigCall();\r\n\r\n        const mpd = dashManifestModel.getMpd(newManifest);\r\n\r\n        voPeriods = dashManifestModel.getRegularPeriods(mpd);\r\n        voAdaptations = {};\r\n    }\r\n\r\n    function getStreamsInfo(externalManifest, maxStreamsInfo) {\r\n        const streams = [];\r\n        let voLocalPeriods = voPeriods;\r\n\r\n        //if manifest is defined, getStreamsInfo is for an outside manifest, not the current one\r\n        if (externalManifest) {\r\n            checkSetConfigCall();\r\n            const mpd = dashManifestModel.getMpd(externalManifest);\r\n\r\n            voLocalPeriods = dashManifestModel.getRegularPeriods(mpd);\r\n        }\r\n\r\n        if (!maxStreamsInfo) {\r\n            maxStreamsInfo = voLocalPeriods.length;\r\n        }\r\n        for (let i = 0; i < maxStreamsInfo; i++) {\r\n            streams.push(convertPeriodToStreamInfo(voLocalPeriods[i]));\r\n        }\r\n\r\n        return streams;\r\n    }\r\n\r\n    function checkStreamProcessor(streamProcessor) {\r\n        if (!streamProcessor || !streamProcessor.hasOwnProperty('getRepresentationController') || !streamProcessor.hasOwnProperty('getIndexHandler') ||\r\n            !streamProcessor.hasOwnProperty('getMediaInfo') || !streamProcessor.hasOwnProperty('getType') || !streamProcessor.hasOwnProperty('getStreamInfo')) {\r\n            throw new Error('streamProcessor parameter is missing or malformed!');\r\n        }\r\n    }\r\n\r\n    function checkRepresentationController(representationController) {\r\n        if (!representationController || !representationController.hasOwnProperty('getRepresentationForQuality') || !representationController.hasOwnProperty('getCurrentRepresentation')) {\r\n            throw new Error('representationController parameter is missing or malformed!');\r\n        }\r\n    }\r\n\r\n    function getInitRequest(streamProcessor, quality) {\r\n        let representationController,\r\n            representation,\r\n            indexHandler;\r\n\r\n        checkStreamProcessor(streamProcessor);\r\n        checkInteger(quality);\r\n\r\n        representationController = streamProcessor.getRepresentationController();\r\n        indexHandler = streamProcessor.getIndexHandler();\r\n\r\n        representation = representationController ? representationController.getRepresentationForQuality(quality) : null;\r\n\r\n        return indexHandler ? indexHandler.getInitRequest(representation) : null;\r\n    }\r\n\r\n    function getFragmentRequest(streamProcessor, representationInfo, time, options) {\r\n        let representationController,\r\n            representation,\r\n            indexHandler;\r\n\r\n        let fragRequest = null;\r\n\r\n        checkStreamProcessor(streamProcessor);\r\n\r\n        representationController = streamProcessor.getRepresentationController();\r\n        representation = getRepresentationForRepresentationInfo(representationInfo, representationController);\r\n        indexHandler = streamProcessor.getIndexHandler();\r\n\r\n        if (indexHandler) {\r\n            //if time and options are undefined, it means the next segment is requested\r\n            //otherwise, the segment at this specific time is requested.\r\n            if (time !== undefined && options !== undefined) {\r\n                fragRequest = indexHandler.getSegmentRequestForTime(representation, time, options);\r\n            } else {\r\n                fragRequest = indexHandler.getNextSegmentRequest(representation);\r\n            }\r\n        }\r\n\r\n        return fragRequest;\r\n    }\r\n\r\n    function getIndexHandlerTime(streamProcessor) {\r\n        checkStreamProcessor(streamProcessor);\r\n\r\n        const indexHandler = streamProcessor.getIndexHandler();\r\n\r\n        return indexHandler ? indexHandler.getCurrentTime() : NaN;\r\n    }\r\n\r\n    function setIndexHandlerTime(streamProcessor, value) {\r\n        checkStreamProcessor(streamProcessor);\r\n\r\n        const indexHandler = streamProcessor.getIndexHandler();\r\n        if (indexHandler) {\r\n            indexHandler.setCurrentTime(value);\r\n        }\r\n    }\r\n\r\n    function resetIndexHandler(streamProcessor) {\r\n        checkStreamProcessor(streamProcessor);\r\n\r\n        const indexHandler = streamProcessor.getIndexHandler();\r\n        if (indexHandler) {\r\n            indexHandler.resetIndex();\r\n        }\r\n    }\r\n\r\n    function updateData(streamProcessor) {\r\n        checkStreamProcessor(streamProcessor);\r\n\r\n        const selectedVoPeriod = getPeriodForStreamInfo(streamProcessor.getStreamInfo(), voPeriods);\r\n        const mediaInfo = streamProcessor.getMediaInfo();\r\n        const voAdaptation = getAdaptationForMediaInfo(mediaInfo);\r\n        const type = streamProcessor.getType();\r\n\r\n        let id,\r\n            realAdaptation;\r\n\r\n        id = mediaInfo ? mediaInfo.id : null;\r\n        if (voPeriods.length > 0) {\r\n            realAdaptation = id ? dashManifestModel.getAdaptationForId(id, voPeriods[0].mpd.manifest, selectedVoPeriod.index) : dashManifestModel.getAdaptationForIndex(mediaInfo.index, voPeriods[0].mpd.manifest, selectedVoPeriod.index);\r\n            streamProcessor.getRepresentationController().updateData(realAdaptation, voAdaptation, type);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a specific voRepresentation. If quality parameter is defined, this function will return the voRepresentation for this quality.\r\n     * Otherwise, this function will return the current voRepresentation used by the representationController.\r\n     * @param {RepresentationController} representationController - RepresentationController reference\r\n     * @param {number} quality - quality index of the voRepresentaion expected.\r\n     */\r\n    function getRepresentationInfo(representationController, quality) {\r\n        checkRepresentationController(representationController);\r\n        let voRepresentation;\r\n\r\n        if (quality !== undefined) {\r\n            checkInteger(quality);\r\n            voRepresentation = representationController.getRepresentationForQuality(quality);\r\n        } else {\r\n            voRepresentation = representationController.getCurrentRepresentation();\r\n        }\r\n\r\n        return voRepresentation ? convertRepresentationToRepresentationInfo(voRepresentation) : null;\r\n    }\r\n\r\n    function getEvent(eventBox, eventStreams, startTime) {\r\n        if (!eventBox || !eventStreams) {\r\n            return null;\r\n        }\r\n        const event = new Event();\r\n        const schemeIdUri = eventBox.scheme_id_uri;\r\n        const value = eventBox.value;\r\n        const timescale = eventBox.timescale;\r\n        const presentationTimeDelta = eventBox.presentation_time_delta;\r\n        const duration = eventBox.event_duration;\r\n        const id = eventBox.id;\r\n        const messageData = eventBox.message_data;\r\n        const presentationTime = startTime * timescale + presentationTimeDelta;\r\n\r\n        if (!eventStreams[schemeIdUri + '/' + value]) return null;\r\n\r\n        event.eventStream = eventStreams[schemeIdUri + '/' + value];\r\n        event.eventStream.value = value;\r\n        event.eventStream.timescale = timescale;\r\n        event.duration = duration;\r\n        event.id = id;\r\n        event.presentationTime = presentationTime;\r\n        event.messageData = messageData;\r\n        event.presentationTimeDelta = presentationTimeDelta;\r\n\r\n        return event;\r\n    }\r\n\r\n    function getEventsFor(info, streamProcessor) {\r\n        let events = [];\r\n\r\n        if (voPeriods.length === 0) {\r\n            return events;\r\n        }\r\n\r\n        const manifest = voPeriods[0].mpd.manifest;\r\n\r\n        if (info instanceof StreamInfo) {\r\n            events = dashManifestModel.getEventsForPeriod(getPeriodForStreamInfo(info, voPeriods));\r\n        } else if (info instanceof MediaInfo) {\r\n            events = dashManifestModel.getEventStreamForAdaptationSet(manifest, getAdaptationForMediaInfo(info));\r\n        } else if (info instanceof RepresentationInfo) {\r\n            events = dashManifestModel.getEventStreamForRepresentation(manifest, getRepresentationForRepresentationInfo(info, streamProcessor.getRepresentationController()));\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    function setCurrentMediaInfo(streamId, type, mediaInfo) {\r\n        currentMediaInfo[streamId] = currentMediaInfo[streamId] || {};\r\n        currentMediaInfo[streamId][type] = currentMediaInfo[streamId][type] || {};\r\n        currentMediaInfo[streamId][type] = mediaInfo;\r\n    }\r\n\r\n    function reset() {\r\n        voPeriods = [];\r\n        voAdaptations = {};\r\n        currentMediaInfo = {};\r\n    }\r\n\r\n    instance = {\r\n        convertDataToRepresentationInfo: convertRepresentationToRepresentationInfo,\r\n        getDataForMedia: getAdaptationForMediaInfo,\r\n        getStreamsInfo: getStreamsInfo,\r\n        getMediaInfoForType: getMediaInfoForType,\r\n        getAllMediaInfoForType: getAllMediaInfoForType,\r\n        getRepresentationInfo: getRepresentationInfo,\r\n        getAdaptationForType: getAdaptationForType,\r\n        updateData: updateData,\r\n        getInitRequest: getInitRequest,\r\n        getFragmentRequest: getFragmentRequest,\r\n        getIndexHandlerTime: getIndexHandlerTime,\r\n        setIndexHandlerTime: setIndexHandlerTime,\r\n        getEventsFor: getEventsFor,\r\n        getEvent: getEvent,\r\n        setConfig: setConfig,\r\n        updatePeriods: updatePeriods,\r\n        reset: reset,\r\n        resetIndexHandler: resetIndexHandler,\r\n        setCurrentMediaInfo: setCurrentMediaInfo\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nDashAdapter.__dashjs_factory_name = 'DashAdapter';\r\nexport default FactoryMaker.getSingletonFactory(DashAdapter);\r\n"]}