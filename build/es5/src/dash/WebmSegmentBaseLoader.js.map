{"version":3,"sources":["../../../../src/dash/WebmSegmentBaseLoader.js"],"names":["WebmSegmentBaseLoader","context","eventBus","getInstance","instance","logger","WebM","errHandler","requestModifier","metricsModel","mediaPlayerModel","httpLoader","baseURLController","setup","getLogger","EBML","tag","required","Segment","SeekHead","Info","TimecodeScale","parse","Duration","Tracks","Cues","CuePoint","CueTime","CueTrackPositions","CueTrack","CueClusterPosition","Void","initialize","create","setConfig","config","Error","Constants","MISSING_CONFIG_ERROR","parseCues","ab","cues","cue","cueTrack","ebmlParser","data","consumeTagAndSize","moreData","parseTag","CueTracks","consumeTag","cueTrackPositionSize","getMatroskaCodedNum","startPos","getPos","Track","ClusterPosition","push","setPos","length","parseSegments","segmentStart","segmentEnd","segmentDuration","duration","parsed","segments","segment","i","len","start","end","startTime","timescale","mediaRange","debug","parseEbmlHeader","media","theRange","callback","parts","split","request","info","url","range","parseFloat","skipOverElement","undefined","infoTag","infoElementSize","getFragmentRequest","onload","response","onloadend","error","load","success","checkSetConfigCall","hasOwnProperty","loadInitialization","representation","loadingInfo","baseUrl","resolve","path","initRange","init","trigger","Events","INITIALIZATION_LOADED","loadSegments","type","bytesToLoad","bytesLoaded","onLoaded","SEGMENTS_LOADED","mediaType","DashJSError","Errors","SEGMENT_BASE_LOADER_ERROR_CODE","SEGMENT_BASE_LOADER_ERROR_MESSAGE","FragmentRequest","HTTPRequest","INIT_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","reset","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"WebmSegmentBaseLoader.js","sourcesContent":["import Events from '../core/events/Events';\r\nimport EventBus from '../core/EventBus';\r\nimport EBMLParser from '../streaming/utils/EBMLParser';\r\nimport Constants from '../streaming/constants/Constants';\r\nimport FactoryMaker from '../core/FactoryMaker';\r\nimport Debug from '../core/Debug';\r\nimport RequestModifier from '../streaming/utils/RequestModifier';\r\nimport Segment from './vo/Segment';\r\nimport {\r\n    HTTPRequest\r\n} from '../streaming/vo/metrics/HTTPRequest';\r\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\r\nimport HTTPLoader from '../streaming/net/HTTPLoader';\r\nimport DashJSError from '../streaming/vo/DashJSError';\r\nimport Errors from '../core/errors/Errors';\r\n\r\nfunction WebmSegmentBaseLoader() {\r\n\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        logger,\r\n        WebM,\r\n        errHandler,\r\n        requestModifier,\r\n        metricsModel,\r\n        mediaPlayerModel,\r\n        httpLoader,\r\n        baseURLController;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        WebM = {\r\n            EBML: {\r\n                tag: 0x1A45DFA3,\r\n                required: true\r\n            },\r\n            Segment: {\r\n                tag: 0x18538067,\r\n                required: true,\r\n                SeekHead: {\r\n                    tag: 0x114D9B74,\r\n                    required: true\r\n                },\r\n                Info: {\r\n                    tag: 0x1549A966,\r\n                    required: true,\r\n                    TimecodeScale: {\r\n                        tag: 0x2AD7B1,\r\n                        required: true,\r\n                        parse: 'getMatroskaUint'\r\n                    },\r\n                    Duration: {\r\n                        tag: 0x4489,\r\n                        required: true,\r\n                        parse: 'getMatroskaFloat'\r\n                    }\r\n                },\r\n                Tracks: {\r\n                    tag: 0x1654AE6B,\r\n                    required: true\r\n                },\r\n                Cues: {\r\n                    tag: 0x1C53BB6B,\r\n                    required: true,\r\n                    CuePoint: {\r\n                        tag: 0xBB,\r\n                        required: true,\r\n                        CueTime: {\r\n                            tag: 0xB3,\r\n                            required: true,\r\n                            parse: 'getMatroskaUint'\r\n                        },\r\n                        CueTrackPositions: {\r\n                            tag: 0xB7,\r\n                            required: true,\r\n                            CueTrack: {\r\n                                tag: 0xF7,\r\n                                required: true,\r\n                                parse: 'getMatroskaUint'\r\n                            },\r\n                            CueClusterPosition: {\r\n                                tag: 0xF1,\r\n                                required: true,\r\n                                parse: 'getMatroskaUint'\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            Void: {\r\n                tag: 0xEC,\r\n                required: true\r\n            }\r\n        };\r\n    }\r\n\r\n    function initialize() {\r\n        requestModifier = RequestModifier(context).getInstance();\r\n        httpLoader = HTTPLoader(context).create({\r\n            errHandler: errHandler,\r\n            metricsModel: metricsModel,\r\n            mediaPlayerModel: mediaPlayerModel,\r\n            requestModifier: requestModifier\r\n        });\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config.baseURLController || !config.metricsModel || !config.mediaPlayerModel || !config.errHandler) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n        baseURLController = config.baseURLController;\r\n        metricsModel = config.metricsModel;\r\n        mediaPlayerModel = config.mediaPlayerModel;\r\n        errHandler = config.errHandler;\r\n    }\r\n\r\n    function parseCues(ab) {\r\n        let cues = [];\r\n        let cue;\r\n        let cueTrack;\r\n        let ebmlParser = EBMLParser(context).create({\r\n            data: ab\r\n        });\r\n\r\n        ebmlParser.consumeTagAndSize(WebM.Segment.Cues);\r\n\r\n        while (ebmlParser.moreData() &&\r\n            ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint, true)) {\r\n            cue = {};\r\n\r\n            cue.CueTime = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);\r\n\r\n            cue.CueTracks = [];\r\n            while (ebmlParser.moreData() &&\r\n                ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions, true)) {\r\n                const cueTrackPositionSize = ebmlParser.getMatroskaCodedNum();\r\n                const startPos = ebmlParser.getPos();\r\n                cueTrack = {};\r\n\r\n                cueTrack.Track = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);\r\n                if (cueTrack.Track === 0) {\r\n                    throw new Error('Cue track cannot be 0');\r\n                }\r\n\r\n                cueTrack.ClusterPosition =\r\n                    ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);\r\n\r\n                cue.CueTracks.push(cueTrack);\r\n\r\n                // we're not interested any other elements - skip remaining bytes\r\n                ebmlParser.setPos(startPos + cueTrackPositionSize);\r\n            }\r\n\r\n            if (cue.CueTracks.length === 0) {\r\n                throw new Error('Mandatory cuetrack not found');\r\n            }\r\n            cues.push(cue);\r\n        }\r\n\r\n        if (cues.length === 0) {\r\n            throw new Error('mandatory cuepoint not found');\r\n        }\r\n        return cues;\r\n    }\r\n\r\n    function parseSegments(data, segmentStart, segmentEnd, segmentDuration) {\r\n        let duration;\r\n        let parsed;\r\n        let segments;\r\n        let segment;\r\n        let i;\r\n        let len;\r\n        let start;\r\n        let end;\r\n\r\n        parsed = parseCues(data);\r\n        segments = [];\r\n\r\n        // we are assuming one cue track per cue point\r\n        // both duration and media range require the i + 1 segment\r\n        // the final segment has to use global segment parameters\r\n        for (i = 0, len = parsed.length; i < len; i += 1) {\r\n            segment = new Segment();\r\n            duration = 0;\r\n\r\n            if (i < parsed.length - 1) {\r\n                duration = parsed[i + 1].CueTime - parsed[i].CueTime;\r\n            } else {\r\n                duration = segmentDuration - parsed[i].CueTime;\r\n            }\r\n\r\n            // note that we don't explicitly set segment.media as this will be\r\n            // computed when all BaseURLs are resolved later\r\n            segment.duration = duration;\r\n            segment.startTime = parsed[i].CueTime;\r\n            segment.timescale = 1000; // hardcoded for ms\r\n            start = parsed[i].CueTracks[0].ClusterPosition + segmentStart;\r\n\r\n            if (i < parsed.length - 1) {\r\n                end = parsed[i + 1].CueTracks[0].ClusterPosition + segmentStart - 1;\r\n            } else {\r\n                end = segmentEnd - 1;\r\n            }\r\n\r\n            segment.mediaRange = start + '-' + end;\r\n            segments.push(segment);\r\n        }\r\n\r\n        logger.debug('Parsed cues: ' + segments.length + ' cues.');\r\n\r\n        return segments;\r\n    }\r\n\r\n    function parseEbmlHeader(data, media, theRange, callback) {\r\n        let ebmlParser = EBMLParser(context).create({\r\n            data: data\r\n        });\r\n        let duration;\r\n        let segments;\r\n        let parts = theRange.split('-');\r\n        let request = null;\r\n        let info = {\r\n            url: media,\r\n            range: {\r\n                start: parseFloat(parts[0]),\r\n                end: parseFloat(parts[1])\r\n            },\r\n            request: request\r\n        };\r\n        let segmentEnd;\r\n        let segmentStart;\r\n\r\n        logger.debug('Parse EBML header: ' + info.url);\r\n\r\n        // skip over the header itself\r\n        ebmlParser.skipOverElement(WebM.EBML);\r\n        ebmlParser.consumeTag(WebM.Segment);\r\n\r\n        // segments start here\r\n        segmentEnd = ebmlParser.getMatroskaCodedNum();\r\n        segmentEnd += ebmlParser.getPos();\r\n        segmentStart = ebmlParser.getPos();\r\n\r\n        // skip over any top level elements to get to the segment info\r\n        while (ebmlParser.moreData() &&\r\n            !ebmlParser.consumeTagAndSize(WebM.Segment.Info, true)) {\r\n            if (!(ebmlParser.skipOverElement(WebM.Segment.SeekHead, true) ||\r\n                    ebmlParser.skipOverElement(WebM.Segment.Tracks, true) ||\r\n                    ebmlParser.skipOverElement(WebM.Segment.Cues, true) ||\r\n                    ebmlParser.skipOverElement(WebM.Void, true))) {\r\n                throw new Error('no valid top level element found');\r\n            }\r\n        }\r\n\r\n        // we only need one thing in segment info, duration\r\n        while (duration === undefined) {\r\n            let infoTag = ebmlParser.getMatroskaCodedNum(true);\r\n            let infoElementSize = ebmlParser.getMatroskaCodedNum();\r\n\r\n            switch (infoTag) {\r\n                case WebM.Segment.Info.Duration.tag:\r\n                    duration = ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);\r\n                    break;\r\n                default:\r\n                    ebmlParser.setPos(ebmlParser.getPos() + infoElementSize);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // once we have what we need from segment info, we jump right to the\r\n        // cues\r\n\r\n        request = getFragmentRequest(info);\r\n\r\n        const onload = function (response) {\r\n            segments = parseSegments(response, segmentStart, segmentEnd, duration);\r\n            callback(segments);\r\n        };\r\n\r\n        const onloadend = function () {\r\n            logger.error('Download Error: Cues ' + info.url);\r\n            callback(null);\r\n        };\r\n\r\n        httpLoader.load({\r\n            request: request,\r\n            success: onload,\r\n            error: onloadend\r\n        });\r\n\r\n        logger.debug('Perform cues load: ' + info.url + ' bytes=' + info.range.start + '-' + info.range.end);\r\n    }\r\n\r\n    function checkSetConfigCall() {\r\n        if (!baseURLController || !baseURLController.hasOwnProperty('resolve')) {\r\n            throw new Error('setConfig function has to be called previously');\r\n        }\r\n    }\r\n\r\n    function loadInitialization(representation, loadingInfo) {\r\n        checkSetConfigCall();\r\n        let request = null;\r\n        let baseUrl = baseURLController.resolve(representation.path);\r\n        let media = baseUrl ? baseUrl.url : undefined;\r\n        let initRange = representation.range.split('-');\r\n        let info = loadingInfo || {\r\n            range: {\r\n                start: parseFloat(initRange[0]),\r\n                end: parseFloat(initRange[1])\r\n            },\r\n            request: request,\r\n            url: media,\r\n            init: true\r\n        };\r\n\r\n        logger.info('Start loading initialization.');\r\n\r\n        request = getFragmentRequest(info);\r\n\r\n        const onload = function () {\r\n            // note that we don't explicitly set rep.initialization as this\r\n            // will be computed when all BaseURLs are resolved later\r\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {\r\n                representation: representation\r\n            });\r\n        };\r\n\r\n        const onloadend = function () {\r\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {\r\n                representation: representation\r\n            });\r\n        };\r\n\r\n        httpLoader.load({\r\n            request: request,\r\n            success: onload,\r\n            error: onloadend\r\n        });\r\n\r\n        logger.debug('Perform init load: ' + info.url);\r\n    }\r\n\r\n    function loadSegments(representation, type, theRange, callback) {\r\n        checkSetConfigCall();\r\n        let request = null;\r\n        let baseUrl = baseURLController.resolve(representation.path);\r\n        let media = baseUrl ? baseUrl.url : undefined;\r\n        let bytesToLoad = 8192;\r\n        let info = {\r\n            bytesLoaded: 0,\r\n            bytesToLoad: bytesToLoad,\r\n            range: {\r\n                start: 0,\r\n                end: bytesToLoad\r\n            },\r\n            request: request,\r\n            url: media,\r\n            init: false\r\n        };\r\n\r\n        callback = !callback ? onLoaded : callback;\r\n        request = getFragmentRequest(info);\r\n\r\n        // first load the header, but preserve the manifest range so we can\r\n        // load the cues after parsing the header\r\n        // NOTE: we expect segment info to appear in the first 8192 bytes\r\n        logger.debug('Parsing ebml header');\r\n\r\n        const onload = function (response) {\r\n            parseEbmlHeader(response, media, theRange, function (segments) {\r\n                callback(segments, representation, type);\r\n            });\r\n        };\r\n\r\n        const onloadend = function () {\r\n            callback(null, representation, type);\r\n        };\r\n\r\n        httpLoader.load({\r\n            request: request,\r\n            success: onload,\r\n            error: onloadend\r\n        });\r\n    }\r\n\r\n    function onLoaded(segments, representation, type) {\r\n        if (segments) {\r\n            eventBus.trigger(Events.SEGMENTS_LOADED, {\r\n                segments: segments,\r\n                representation: representation,\r\n                mediaType: type\r\n            });\r\n        } else {\r\n            eventBus.trigger(Events.SEGMENTS_LOADED, {\r\n                segments: null,\r\n                representation: representation,\r\n                mediaType: type,\r\n                error: new DashJSError(Errors.SEGMENT_BASE_LOADER_ERROR_CODE, Errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\r\n            });\r\n        }\r\n    }\r\n\r\n    function getFragmentRequest(info) {\r\n        let request = new FragmentRequest();\r\n\r\n        request.type = info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\r\n        request.url = info.url;\r\n        request.range = info.range.start + '-' + info.range.end;\r\n\r\n        return request;\r\n    }\r\n\r\n    function reset() {\r\n        errHandler = null;\r\n        requestModifier = null;\r\n    }\r\n\r\n    instance = {\r\n        setConfig: setConfig,\r\n        initialize: initialize,\r\n        loadInitialization: loadInitialization,\r\n        loadSegments: loadSegments,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nWebmSegmentBaseLoader.__dashjs_factory_name = 'WebmSegmentBaseLoader';\r\nexport default FactoryMaker.getSingletonFactory(WebmSegmentBaseLoader);\r\n"]}