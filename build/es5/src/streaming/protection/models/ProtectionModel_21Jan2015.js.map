{"version":3,"sources":["../../../../../../src/streaming/protection/models/ProtectionModel_21Jan2015.js"],"names":["ProtectionModel_21Jan2015","config","context","eventBus","events","debug","instance","logger","keySystem","videoElement","mediaKeys","sessions","eventHandler","protectionKeyController","setup","getLogger","getInstance","createEventHandler","reset","numSessions","length","session","done","removeSession","removeEventListener","setMediaKeys","then","trigger","TEARDOWN_COMPLETE","i","s","closed","closeKeySessionInternal","catch","stop","getUsable","getKeySystem","getAllInitData","retVal","initData","push","requestKeySystemAccess","ksConfigurations","requestKeySystemAccessInternal","selectKeySystem","keySystemAccess","mksa","createMediaKeys","mkeys","INTERNAL_KEY_SYSTEM_SELECTED","error","systemString","setMediaElement","mediaElement","addEventListener","setServerCertificate","serverCertificate","Error","info","SERVER_CERTIFICATE_UPDATED","DashJSError","ProtectionErrors","SERVER_CERTIFICATE_UPDATED_ERROR_CODE","SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE","name","createKeySession","protData","sessionType","cdmData","Uint8Array","createSession","sessionToken","createSessionToken","ks","dataType","ProtectionConstants","CLEARKEY_KEYSTEM_STRING","clearkeys","generateRequest","getSessionID","KEY_SESSION_CREATED","data","KEY_SESSION_CREATED_ERROR_CODE","KEY_SESSION_CREATED_ERROR_MESSAGE","updateKeySession","message","btoa","String","fromCharCode","apply","isClearKey","toJWK","update","KEY_ERROR","MEDIA_KEYERR_CODE","loadKeySession","sessionID","sessionId","warn","load","success","removeKeySession","remove","KEY_SESSION_REMOVED","closeKeySession","KEY_SESSION_CLOSED","idx","navigator","requestMediaKeySystemAccess","undefined","KEY_SYSTEM_ACCESS_COMPLETE","configs","PLAYREADY_KEYSTEM_STRING","persistentState","mediaKeySystemAccess","configuration","getConfiguration","KeySystemAccess","close","handleEvent","event","type","ArrayBuffer","isView","buffer","NEED_KEY","key","NeedKey","initDataType","token","splice","parseKeyStatus","args","status","keyId","KEY_STATUSES_CHANGED","target","keyStatuses","forEach","keyStatus","arguments","INTERNAL_KEY_STATUS_CHANGED","KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE","KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE","INTERNAL_KEY_MESSAGE","KeyMessage","messageType","getExpirationTime","expiration","getKeyStatuses","usable","getSessionType","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"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","file":"ProtectionModel_21Jan2015.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Most recent EME implementation\n *\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\n *\n * @implements ProtectionModel\n * @class\n */\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport DashJSError from '../../vo/DashJSError';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemAccess from '../vo/KeySystemAccess';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nfunction ProtectionModel_21Jan2015(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n\n    let instance,\n        logger,\n        keySystem,\n        videoElement,\n        mediaKeys,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        keySystem = null;\n        videoElement = null;\n        mediaKeys = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        const numSessions = sessions.length;\n        let session;\n\n        if (numSessions !== 0) {\n            // Called when we are done closing a session.  Success or fail\n            const done = function (session) {\n                removeSession(session);\n                if (sessions.length === 0) {\n                    if (videoElement) {\n                        videoElement.removeEventListener('encrypted', eventHandler);\n                        videoElement.setMediaKeys(null).then(function () {\n                            eventBus.trigger(events.TEARDOWN_COMPLETE);\n                        });\n                    } else {\n                        eventBus.trigger(events.TEARDOWN_COMPLETE);\n                    }\n                }\n            };\n            for (let i = 0; i < numSessions; i++) {\n                session = sessions[i];\n                (function (s) {\n                    // Override closed promise resolver\n                    session.session.closed.then(function () {\n                        done(s);\n                    });\n                    // Close the session and handle errors, otherwise promise\n                    // resolver above will be called\n                    closeKeySessionInternal(session).catch(function () {\n                        done(s);\n                    });\n\n                })(session);\n            }\n        } else {\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        }\n    }\n\n    function stop() {\n        // Close and remove not usable sessions\n        let session;\n        for (let i = 0; i < sessions.length; i++) {\n            session = sessions[i];\n            if (!session.getUsable()) {\n                closeKeySessionInternal(session).catch(function () {\n                    removeSession(session);\n                });\n            }\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i].initData) {\n                retVal.push(sessions[i].initData);\n            }\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n        requestKeySystemAccessInternal(ksConfigurations, 0);\n    }\n\n    function selectKeySystem(keySystemAccess) {\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\n            keySystem = keySystemAccess.keySystem;\n            mediaKeys = mkeys;\n            if (videoElement) {\n                videoElement.setMediaKeys(mediaKeys).then(function () {\n                    eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n                });\n            } else {\n                eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n            }\n\n        }).catch(function () {\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\n        });\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys) {\n                videoElement.setMediaKeys(null);\n            }\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener('encrypted', eventHandler);\n            if (videoElement.setMediaKeys && mediaKeys) {\n                videoElement.setMediaKeys(mediaKeys);\n            }\n        }\n    }\n\n    function setServerCertificate(serverCertificate) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not set server certificate until you have selected a key system');\n        }\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\n            logger.info('DRM: License server certificate successfully updated.');\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);\n        }).catch(function (error) {\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED, {error: new DashJSError(ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_CODE, ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + error.name)});\n        });\n    }\n\n    function createKeySession(initData, protData, sessionType, cdmData) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Patch for StickTV: provide CustomData to PlayReady CDM using setServerCertificate API\n        if (cdmData && keySystem.systemString === 'com.microsoft.playready') {\n            mediaKeys.setServerCertificate(new Uint8Array(cdmData));\n        }\n\n        const session = mediaKeys.createSession(sessionType);\n        const sessionToken = createSessionToken(session, initData, sessionType);\n        const ks = this.getKeySystem();\n\n        // Generate initial key request.\n        // keyids type is used for clearkey when keys are provided directly in the protection data and then request to a license server is not needed\n        const dataType = ks.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING && protData && protData.clearkeys ? 'keyids' : 'cenc';\n        session.generateRequest(dataType, initData).then(function () {\n            logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(events.KEY_SESSION_CREATED, {data: sessionToken});\n        }).catch(function (error) {\n            // TODO: Better error string\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CREATED, {data: null, error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Error generating key request -- ' + error.name)});\n        });\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const session = sessionToken.session;\n\n        logger.debug('DRM: license: ' + btoa(String.fromCharCode.apply(null, new Uint8Array(message))));\n\n        // Send our request to the key session\n        if (protectionKeyController.isClearKey(keySystem)) {\n            message = message.toJWK();\n        }\n        session.update(message).catch(function (error) {\n            eventBus.trigger(events.KEY_ERROR, {data: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, 'Error sending update() message! ' + error.name, sessionToken)});\n        });\n    }\n\n    function loadKeySession(sessionID, initData, sessionType) {\n        if (!keySystem || !mediaKeys) {\n            throw new Error('Can not load sessions until you have selected a key system');\n        }\n\n        // Check if session Id is not already loaded or loading\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessionID === sessions[i].sessionId) {\n                logger.warn('DRM: Ignoring session ID because we have already seen it!');\n                return;\n            }\n        }\n\n        const session = mediaKeys.createSession(sessionType);\n        const sessionToken = createSessionToken(session, initData, sessionType, sessionID);\n\n        // Load persisted session data into our newly created session object\n        session.load(sessionID).then(function (success) {\n            if (success) {\n                logger.debug('DRM: Session loaded.  SessionID = ' + sessionToken.getSessionID());\n                eventBus.trigger(events.KEY_SESSION_CREATED, {data: sessionToken});\n            } else {\n                removeSession(sessionToken);\n                eventBus.trigger(events.KEY_SESSION_CREATED, {data: null, error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session! Invalid Session ID (' + sessionID + ')')});\n            }\n        }).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CREATED, {data: null, error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session (' + sessionID + ')! ' + error.name)});\n        });\n    }\n\n    function removeKeySession(sessionToken) {\n        const session = sessionToken.session;\n\n        session.remove().then(function () {\n            logger.debug('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionID()});\n        }, function (error) {\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {data: null, error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name});\n\n        });\n    }\n\n    function closeKeySession(sessionToken) {\n        // Send our request to the key session\n        closeKeySessionInternal(sessionToken).catch(function (error) {\n            removeSession(sessionToken);\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {data: null, error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name});\n        });\n    }\n\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\n\n        if (navigator.requestMediaKeySystemAccess === undefined ||\n            typeof navigator.requestMediaKeySystemAccess !== 'function') {\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Insecure origins are not allowed'});\n            return;\n        }\n\n        (function (i) {\n            const keySystem = ksConfigurations[i].ks;\n            const configs = ksConfigurations[i].configs;\n            let systemString = keySystem.systemString;\n\n            // PATCH to support persistent licenses on Edge browser (see issue #2658)\n            if (systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING && configs[0].persistentState === 'required') {\n                systemString += '.recommendation';\n            }\n\n            navigator.requestMediaKeySystemAccess(systemString, configs).then(function (mediaKeySystemAccess) {\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\n                const configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\n                        mediaKeySystemAccess.getConfiguration() : null;\n                const keySystemAccess = new KeySystemAccess(keySystem, configuration);\n                keySystemAccess.mksa = mediaKeySystemAccess;\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\n\n            }).catch(function (error) {\n                if (++i < ksConfigurations.length) {\n                    requestKeySystemAccessInternal(ksConfigurations, i);\n                } else {\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! ' + error.message});\n                }\n            });\n        })(idx);\n    }\n\n    function closeKeySessionInternal(sessionToken) {\n        const session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener('keystatuseschange', sessionToken);\n        session.removeEventListener('message', sessionToken);\n\n        // Send our request to the key session\n        return session.close();\n    }\n\n    // This is our main event handler for all desired HTMLMediaElement events\n    // related to EME.  These events are translated into our API-independent\n    // versions of the same events\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'encrypted':\n                        if (event.initData) {\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n    function removeSession(token) {\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === token) {\n                sessions.splice(i,1);\n                break;\n            }\n        }\n    }\n\n    function parseKeyStatus(args) {\n        // Edge and Chrome implement different version of keystatues, param are not on same order\n        let status, keyId;\n        if (args && args.length > 0) {\n            if (args[0]) {\n                if (typeof args[0] === 'string') {\n                    status = args[0];\n                } else {\n                    keyId = args[0];\n                }\n            }\n\n            if (args[1]) {\n                if (typeof args[1] === 'string') {\n                    status = args[1];\n                } else {\n                    keyId = args[1];\n                }\n            }\n        }\n        return {\n            status: status,\n            keyId: keyId\n        };\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(session, initData, sessionType, sessionID) {\n        const token = { // Implements SessionToken\n            session: session,\n            initData: initData,\n            sessionId: sessionID,\n\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case 'keystatuseschange':\n                        eventBus.trigger(events.KEY_STATUSES_CHANGED, {data: this});\n                        event.target.keyStatuses.forEach(function () {\n                            let keyStatus = parseKeyStatus(arguments);\n                            switch (keyStatus.status) {\n                                case 'expired':\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, {error: new DashJSError(ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE)});\n                                    break;\n                                default:\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, keyStatus);\n                                    break;\n                            }\n                        });\n                        break;\n\n                    case 'message':\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\n                        break;\n                }\n            },\n\n            getSessionID: function () {\n                return session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return session.expiration;\n            },\n\n            getKeyStatuses: function () {\n                return session.keyStatuses;\n            },\n\n            getUsable: function () {\n                let usable  = false;\n                session.keyStatuses.forEach(function () {\n                    let keyStatus = parseKeyStatus(arguments);\n                    if (keyStatus.status === 'usable') {\n                        usable = true;\n                    }\n                });\n                return usable;\n            },\n\n            getSessionType: function () {\n                return sessionType;\n            }\n        };\n\n        // Add all event listeners\n        session.addEventListener('keystatuseschange', token);\n        session.addEventListener('message', token);\n\n        // Register callback for session closed Promise\n        session.closed.then(function () {\n            removeSession(token);\n            logger.debug('DRM: Session closed.  SessionID = ' + token.getSessionID());\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {data: token.getSessionID()});\n        });\n\n        // Add to our session list\n        sessions.push(token);\n\n        return token;\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        setServerCertificate: setServerCertificate,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        closeKeySession: closeKeySession,\n        stop: stop,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015); /* jshint ignore:line */\n"]}