{"version":3,"sources":["../../../../../src/streaming/utils/Capabilities.js"],"names":["FactoryMaker","Capabilities","instance","encryptedMediaSupported","setup","supportsMediaSource","hasWebKit","window","hasMediaSource","supportsEncryptedMedia","setEncryptedMediaSupported","value","supportsCodec","codec","MediaSource","isTypeSupported","WebKitMediaSource","__dashjs_factory_name","getSingletonFactory"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BA,MAAOA,aAAP,KAAyB,yBAAzB,CAEA,QAASC,aAAT,EAAwB,CAEpB,GAAIC,SAAJ,CACIC,uBADJ,CAGA,QAASC,MAAT,EAAiB,CACbD,wBAA0B,KAA1B,CACH,CAED,QAASE,oBAAT,EAA+B,CAC3B,GAAIC,WAAa,qBAAuBC,OAAxC,CACA,GAAIC,gBAAkB,eAAiBD,OAAvC,CAEA,MAAQD,YAAaE,cAArB,CACH,CAED;;;;;OAMA,QAASC,uBAAT,EAAkC,CAC9B,MAAON,wBAAP,CACH,CAED,QAASO,2BAAT,CAAoCC,KAApC,CAA2C,CACvCR,wBAA0BQ,KAA1B,CACH,CAED,QAASC,cAAT,CAAuBC,KAAvB,CAA8B,CAC1B,GAAI,eAAiBN,OAAjB,EAA2BO,YAAYC,eAAZ,CAA4BF,KAA5B,CAA/B,CAAmE,CAC/D,MAAO,KAAP,CACH,CAED,GAAI,qBAAuBN,OAAvB,EAAiCS,kBAAkBD,eAAlB,CAAkCF,KAAlC,CAArC,CAA+E,CAC3E,MAAO,KAAP,CACH,CAED,MAAO,MAAP,CACH,CAEDX,SAAW,CACPG,oBAAqBA,mBADd,CAEPI,uBAAwBA,sBAFjB,CAGPG,cAAeA,aAHR,CAIPF,2BAA4BA,0BAJrB,CAAX,CAOAN,QAEA,MAAOF,SAAP,CACH,CACDD,aAAagB,qBAAb,CAAqC,cAArC,CACA,cAAejB,cAAakB,mBAAb,CAAiCjB,YAAjC,CAAf","file":"Capabilities.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nfunction Capabilities() {\r\n\r\n    let instance,\r\n        encryptedMediaSupported;\r\n\r\n    function setup() {\r\n        encryptedMediaSupported = false;\r\n    }\r\n\r\n    function supportsMediaSource() {\r\n        let hasWebKit = ('WebKitMediaSource' in window);\r\n        let hasMediaSource = ('MediaSource' in window);\r\n\r\n        return (hasWebKit || hasMediaSource);\r\n    }\r\n\r\n    /**\r\n     * Returns whether Encrypted Media Extensions are supported on this\r\n     * user agent\r\n     *\r\n     * @return {boolean} true if EME is supported, false otherwise\r\n     */\r\n    function supportsEncryptedMedia() {\r\n        return encryptedMediaSupported;\r\n    }\r\n\r\n    function setEncryptedMediaSupported(value) {\r\n        encryptedMediaSupported = value;\r\n    }\r\n\r\n    function supportsCodec(codec) {\r\n        if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\r\n            return true;\r\n        }\r\n\r\n        if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    instance = {\r\n        supportsMediaSource: supportsMediaSource,\r\n        supportsEncryptedMedia: supportsEncryptedMedia,\r\n        supportsCodec: supportsCodec,\r\n        setEncryptedMediaSupported: setEncryptedMediaSupported\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\nCapabilities.__dashjs_factory_name = 'Capabilities';\r\nexport default FactoryMaker.getSingletonFactory(Capabilities);"]}