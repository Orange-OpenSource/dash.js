{"version":3,"sources":["../../../../../src/streaming/controllers/BaseURLController.js"],"names":["BaseURLTreeModel","BaseURLSelector","URLUtils","BaseURL","FactoryMaker","EventBus","Events","BaseURLController","instance","dashManifestModel","context","eventBus","getInstance","urlUtils","baseURLTreeModel","baseURLSelector","onBlackListChanged","e","invalidateSelectedIndexes","entry","setup","create","on","SERVICE_LOCATION_BLACKLIST_CHANGED","setConfig","config","update","manifest","chooseSelectorFromManifest","resolve","path","baseUrls","getForPath","baseUrl","reduce","p","c","b","select","isRelative","url","serviceLocation","availabilityTimeOffset","availabilityTimeComplete","reset","initialize","data","__dashjs_factory_name","getSingletonFactory"],"mappings":"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","file":"BaseURLController.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport BaseURLTreeModel from '../models/BaseURLTreeModel';\r\nimport BaseURLSelector from '../utils/BaseURLSelector';\r\nimport URLUtils from '../utils/URLUtils';\r\nimport BaseURL from '../../dash/vo/BaseURL';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport EventBus from '../../core/EventBus';\r\nimport Events from '../../core/events/Events';\r\n\r\nfunction BaseURLController() {\r\n\r\n    let instance;\r\n    let dashManifestModel;\r\n\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n    const urlUtils = URLUtils(context).getInstance();\r\n\r\n    let baseURLTreeModel,\r\n        baseURLSelector;\r\n\r\n    function onBlackListChanged(e) {\r\n        baseURLTreeModel.invalidateSelectedIndexes(e.entry);\r\n    }\r\n\r\n    function setup() {\r\n        baseURLTreeModel = BaseURLTreeModel(context).create();\r\n        baseURLSelector = BaseURLSelector(context).create();\r\n\r\n        eventBus.on(Events.SERVICE_LOCATION_BLACKLIST_CHANGED, onBlackListChanged, instance);\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (config.baseURLTreeModel) {\r\n            baseURLTreeModel = config.baseURLTreeModel;\r\n        }\r\n\r\n        if (config.baseURLSelector) {\r\n            baseURLSelector = config.baseURLSelector;\r\n        }\r\n\r\n        if (config.dashManifestModel) {\r\n            dashManifestModel = config.dashManifestModel;\r\n        }\r\n    }\r\n\r\n    function update(manifest) {\r\n        baseURLTreeModel.update(manifest);\r\n        baseURLSelector.chooseSelectorFromManifest(manifest);\r\n    }\r\n\r\n    function resolve(path) {\r\n        const baseUrls = baseURLTreeModel.getForPath(path);\r\n\r\n        const baseUrl = baseUrls.reduce((p, c) => {\r\n            const b = baseURLSelector.select(c);\r\n\r\n            if (b) {\r\n                if (!urlUtils.isRelative(b.url)) {\r\n                    p.url = b.url;\r\n                    p.serviceLocation = b.serviceLocation;\r\n                } else {\r\n                    p.url = urlUtils.resolve(b.url, p.url);\r\n                }\r\n                p.availabilityTimeOffset = b.availabilityTimeOffset;\r\n                p.availabilityTimeComplete = b.availabilityTimeComplete;\r\n            } else {\r\n                return new BaseURL();\r\n            }\r\n\r\n            return p;\r\n        }, new BaseURL());\r\n\r\n        if (!urlUtils.isRelative(baseUrl.url)) {\r\n            return baseUrl;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        baseURLTreeModel.reset();\r\n        baseURLSelector.reset();\r\n    }\r\n\r\n    function initialize(data) {\r\n\r\n        // report config to baseURLTreeModel and baseURLSelector\r\n        baseURLTreeModel.setConfig({\r\n            dashManifestModel: dashManifestModel\r\n        });\r\n        baseURLSelector.setConfig({\r\n            dashManifestModel: dashManifestModel\r\n        });\r\n\r\n        update(data);\r\n    }\r\n\r\n    instance = {\r\n        reset: reset,\r\n        initialize: initialize,\r\n        resolve: resolve,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\r\nexport default FactoryMaker.getSingletonFactory(BaseURLController);\r\n"]}