{"version":3,"sources":["../../../../../src/mss/parser/MssParser.js"],"names":["MssParser","config","BASE64","debug","constants","manifestModel","mediaPlayerModel","DEFAULT_TIME_SCALE","SUPPORTED_CODECS","ROLE","ACCESSIBILITY","samplingFrequencyIndex","mimeTypeMap","instance","logger","setup","getLogger","mapPeriod","smoothStreamingMedia","timescale","period","streams","adaptation","AdaptationSet_asArray","getElementsByTagName","i","length","mapAdaptationSet","push","AdaptationSet","streamIndex","adaptationSet","representations","segmentTemplate","qualityLevels","representation","segments","id","getAttribute","contentType","lang","mimeType","subType","maxWidth","maxHeight","role","schemeIdUri","value","Role","Role_asArray","accessibility","Accessibility","Accessibility_asArray","mapSegmentTemplate","BaseURL","Id","mapRepresentation","SegmentTemplate","Representation","Representation_asArray","SegmentTimeline","S_asArray","qualityLevel","type","fourCCValue","bandwidth","parseInt","width","height","indexOf","toUpperCase","warn","codecs","getH264Codec","getAACCodec","audioSamplingRate","audioChannels","STPP","codecPrivateData","toString","nalHeader","avcoti","exec","substr","undefined","samplingRate","objectType","codecPrivateDataHex","arr16","indexFreq","extensionSamplingFrequencyIndex","Uint8Array","Channels","Uint16Array","setAttribute","mediaUrl","streamIndexTimeScale","replace","parseFloat","media","mapSegmentTimeline","segmentTimeline","chunks","segment","prevSegment","tManifest","j","r","duration","t","d","S","getKIDFromProtectionHeader","protectionHeader","prHeader","wrmHeader","xmlReader","KID","decodeArray","firstChild","data","getWRMHeaderFromPRHeader","buffer","String","fromCharCode","apply","DOMParser","parseFromString","querySelector","textContent","convertUuidEndianness","recordCount","recordType","recordLength","recordValue","set","subarray","uuid","swapBytes","bytes","pos1","pos2","temp","createPRContentProtection","pro","__text","__prefix","pro_asArray","createWidevineContentProtection","wvCencHeader","pssh","encodeASCII","processManifest","xmlDoc","manifestLoadedTime","manifest","contentProtections","protection","adaptations","contentProtection","timestampOffset","startTime","segmentDuration","protocol","profiles","dvrWindowLength","Infinity","timeShiftBufferDepth","mediaPresentationDuration","minBufferTime","ttmlTimeIsRelative","availabilityStartTime","Date","getTime","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","Period","Period_asArray","start","ContentProtection","ContentProtection_asArray","initialization","Math","min","targetLiveDelay","getLiveDelay","getLiveDelayFragmentCount","targetDelayCapping","max","liveDelay","setLiveDelay","bufferTime","setStableBufferTime","setBufferTimeAtTopQuality","setBufferTimeAtTopQualityLongForm","prevManifest","getValue","presentationTimeOffset","floor","parseDOM","window","parser","Error","getMatchers","getIron","internalParse","performance","now","xmlParseTime","mss2dashTime","info","toPrecision","parse","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"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","file":"MssParser.js","sourcesContent":["/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module MssParser\r\n * @param {Object} config object\r\n */\r\nfunction MssParser(config) {\r\n    config = config || {};\r\n    const BASE64 = config.BASE64;\r\n    const debug = config.debug;\r\n    const constants = config.constants;\r\n    const manifestModel = config.manifestModel;\r\n    const mediaPlayerModel = config.mediaPlayerModel;\r\n\r\n    const DEFAULT_TIME_SCALE = 10000000.0;\r\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AVC1', 'H264', 'TTML', 'DFXP'];\r\n    // MPEG-DASH Role and accessibility mapping according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\r\n    const ROLE = {\r\n        'SUBT': 'alternate',\r\n        'CAPT': 'alternate', // 'CAPT' is commonly equivalent to 'SUBT'\r\n        'DESC': 'main'\r\n    };\r\n    const ACCESSIBILITY = {\r\n        'DESC': '2'\r\n    };\r\n    const samplingFrequencyIndex = {\r\n        96000: 0x0,\r\n        88200: 0x1,\r\n        64000: 0x2,\r\n        48000: 0x3,\r\n        44100: 0x4,\r\n        32000: 0x5,\r\n        24000: 0x6,\r\n        22050: 0x7,\r\n        16000: 0x8,\r\n        12000: 0x9,\r\n        11025: 0xA,\r\n        8000: 0xB,\r\n        7350: 0xC\r\n    };\r\n    const mimeTypeMap = {\r\n        'video': 'video/mp4',\r\n        'audio': 'audio/mp4',\r\n        'text': 'application/mp4'\r\n    };\r\n\r\n    let instance,\r\n        logger;\r\n\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n    }\r\n\r\n    function mapPeriod(smoothStreamingMedia, timescale) {\r\n        const period = {};\r\n        let streams,\r\n            adaptation;\r\n\r\n        // For each StreamIndex node, create an AdaptationSet element\r\n        period.AdaptationSet_asArray = [];\r\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\r\n        for (let i = 0; i < streams.length; i++) {\r\n            adaptation = mapAdaptationSet(streams[i], timescale);\r\n            if (adaptation !== null) {\r\n                period.AdaptationSet_asArray.push(adaptation);\r\n            }\r\n        }\r\n\r\n        if (period.AdaptationSet_asArray.length > 0) {\r\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\r\n        }\r\n\r\n        return period;\r\n    }\r\n\r\n    function mapAdaptationSet(streamIndex, timescale) {\r\n        const adaptationSet = {};\r\n        const representations = [];\r\n        let segmentTemplate;\r\n        let qualityLevels,\r\n            representation,\r\n            segments,\r\n            i;\r\n\r\n        adaptationSet.id = streamIndex.getAttribute('Name') ? streamIndex.getAttribute('Name') : streamIndex.getAttribute('Type');\r\n        adaptationSet.contentType = streamIndex.getAttribute('Type');\r\n        adaptationSet.lang = streamIndex.getAttribute('Language') || 'und';\r\n        adaptationSet.mimeType = mimeTypeMap[adaptationSet.contentType];\r\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\r\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\r\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\r\n\r\n        // Map subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\r\n        if (adaptationSet.subType) {\r\n            if (ROLE[adaptationSet.subType]) {\r\n                let role = {\r\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\r\n                    value: ROLE[adaptationSet.subType]\r\n                };\r\n                adaptationSet.Role = role;\r\n                adaptationSet.Role_asArray = [role];\r\n            }\r\n            if (ACCESSIBILITY[adaptationSet.subType]) {\r\n                let accessibility = {\r\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\r\n                    value: ACCESSIBILITY[adaptationSet.subType]\r\n                };\r\n                adaptationSet.Accessibility = accessibility;\r\n                adaptationSet.Accessibility_asArray = [accessibility];\r\n            }\r\n        }\r\n\r\n        // Create a SegmentTemplate with a SegmentTimeline\r\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\r\n\r\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\r\n        // For each QualityLevel node, create a Representation element\r\n        for (i = 0; i < qualityLevels.length; i++) {\r\n            // Propagate BaseURL and mimeType\r\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\r\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\r\n\r\n            // Set quality level id\r\n            qualityLevels[i].Id = adaptationSet.id + '_' + qualityLevels[i].getAttribute('Index');\r\n\r\n            // Map Representation to QualityLevel\r\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\r\n\r\n            if (representation !== null) {\r\n                // Copy SegmentTemplate into Representation\r\n                representation.SegmentTemplate = segmentTemplate;\r\n\r\n                representations.push(representation);\r\n            }\r\n        }\r\n\r\n        if (representations.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\r\n        adaptationSet.Representation_asArray = representations;\r\n\r\n        // Set SegmentTemplate\r\n        adaptationSet.SegmentTemplate = segmentTemplate;\r\n\r\n        segments = segmentTemplate.SegmentTimeline.S_asArray;\r\n\r\n        return adaptationSet;\r\n    }\r\n\r\n    function mapRepresentation(qualityLevel, streamIndex) {\r\n        const representation = {};\r\n        const type = streamIndex.getAttribute('Type');\r\n        let fourCCValue = null;\r\n\r\n        representation.id = qualityLevel.Id;\r\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\r\n        representation.mimeType = qualityLevel.mimeType;\r\n        representation.width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\r\n        representation.height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\r\n\r\n        fourCCValue = qualityLevel.getAttribute('FourCC');\r\n\r\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\r\n        if (fourCCValue === null || fourCCValue === '') {\r\n            fourCCValue = streamIndex.getAttribute('FourCC');\r\n        }\r\n\r\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\r\n        // then we consider the stream is an audio AAC stream\r\n        if (fourCCValue === null || fourCCValue === '') {\r\n            if (type === 'audio') {\r\n                fourCCValue = 'AAC';\r\n            } else if (type === 'video') {\r\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Check if codec is supported\r\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\r\n            // Do not send warning\r\n            logger.warn('Codec not supported: ' + fourCCValue);\r\n            return null;\r\n        }\r\n\r\n        // Get codecs value according to FourCC field\r\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\r\n            representation.codecs = getH264Codec(qualityLevel);\r\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\r\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\r\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\r\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\r\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\r\n            representation.codecs = constants.STPP;\r\n        }\r\n\r\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\r\n        representation.BaseURL = qualityLevel.BaseURL;\r\n\r\n        return representation;\r\n    }\r\n\r\n    function getH264Codec(qualityLevel) {\r\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\r\n        let nalHeader,\r\n            avcoti;\r\n\r\n\r\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\r\n        // three bytes in the sequence parameter set NAL unit.\r\n        // => Find the SPS nal header\r\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\r\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\r\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\r\n\r\n        return 'avc1.' + avcoti;\r\n    }\r\n\r\n    function getAACCodec(qualityLevel, fourCCValue) {\r\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\r\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\r\n        let objectType = 0;\r\n        let codecPrivateDataHex,\r\n            arr16,\r\n            indexFreq,\r\n            extensionSamplingFrequencyIndex;\r\n\r\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\r\n        //set objectType to 5 => strange, it should be 2\r\n        if (fourCCValue === 'AACH') {\r\n            objectType = 0x05;\r\n        }\r\n        //if codecPrivateData is empty, build it :\r\n        if (codecPrivateData === undefined || codecPrivateData === '') {\r\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\r\n            indexFreq = samplingFrequencyIndex[samplingRate];\r\n            if (fourCCValue === 'AACH') {\r\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\r\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\r\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\r\n                codecPrivateData = new Uint8Array(4);\r\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\r\n                // equals to SamplingRate*2\r\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\r\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\r\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\r\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\r\n                codecPrivateData[3] = 0x0; //alignment bits\r\n\r\n                arr16 = new Uint16Array(2);\r\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\r\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\r\n                //convert decimal to hex value\r\n                codecPrivateDataHex = arr16[0].toString(16);\r\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\r\n\r\n            } else {\r\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\r\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\r\n                codecPrivateData = new Uint8Array(2);\r\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\r\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\r\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\r\n                // put the 2 bytes in an 16 bits array\r\n                arr16 = new Uint16Array(1);\r\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\r\n                //convert decimal to hex value\r\n                codecPrivateDataHex = arr16[0].toString(16);\r\n            }\r\n\r\n            codecPrivateData = '' + codecPrivateDataHex;\r\n            codecPrivateData = codecPrivateData.toUpperCase();\r\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\r\n        } else if (objectType === 0) {\r\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\r\n        }\r\n\r\n        return 'mp4a.40.' + objectType;\r\n    }\r\n\r\n    function mapSegmentTemplate(streamIndex, timescale) {\r\n        const segmentTemplate = {};\r\n        let mediaUrl,\r\n            streamIndexTimeScale;\r\n\r\n        mediaUrl = streamIndex.getAttribute('Url').replace('{bitrate}', '$Bandwidth$');\r\n        mediaUrl = mediaUrl.replace('{start time}', '$Time$');\r\n\r\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\r\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\r\n\r\n        segmentTemplate.media = mediaUrl;\r\n        segmentTemplate.timescale = streamIndexTimeScale;\r\n\r\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\r\n\r\n        return segmentTemplate;\r\n    }\r\n\r\n    function mapSegmentTimeline(streamIndex, timescale) {\r\n        const segmentTimeline = {};\r\n        const chunks = streamIndex.getElementsByTagName('c');\r\n        const segments = [];\r\n        let segment,\r\n            prevSegment,\r\n            tManifest,\r\n            i,j,r;\r\n        let duration = 0;\r\n\r\n        for (i = 0; i < chunks.length; i++) {\r\n            segment = {};\r\n\r\n            // Get time 't' attribute value\r\n            tManifest = chunks[i].getAttribute('t');\r\n\r\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\r\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\r\n            segment.tManifest = parseFloat(tManifest);\r\n            segment.t = parseFloat(tManifest);\r\n\r\n            // Get duration 'd' attribute value\r\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\r\n\r\n            // If 't' not defined for first segment then t=0\r\n            if ((i === 0) && !segment.t) {\r\n                segment.t = 0;\r\n            }\r\n\r\n            if (i > 0) {\r\n                prevSegment = segments[segments.length - 1];\r\n                // Update previous segment duration if not defined\r\n                if (!prevSegment.d) {\r\n                    if (prevSegment.tManifest) {\r\n                        prevSegment.d = parseFloat(tManifest) - parseFloat(prevSegment.tManifest);\r\n                    } else {\r\n                        prevSegment.d = segment.t - prevSegment.t;\r\n                    }\r\n                    duration += prevSegment.d;\r\n                }\r\n                // Set segment absolute timestamp if not set in manifest\r\n                if (!segment.t) {\r\n                    if (prevSegment.tManifest) {\r\n                        segment.tManifest = parseFloat(prevSegment.tManifest) + prevSegment.d;\r\n                        segment.t = parseFloat(segment.tManifest);\r\n                    } else {\r\n                        segment.t = prevSegment.t + prevSegment.d;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (segment.d) {\r\n                duration += segment.d;\r\n            }\r\n\r\n            // Create new segment\r\n            segments.push(segment);\r\n\r\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\r\n            r = parseFloat(chunks[i].getAttribute('r'));\r\n            if (r) {\r\n\r\n                for (j = 0; j < (r - 1); j++) {\r\n                    prevSegment = segments[segments.length - 1];\r\n                    segment = {};\r\n                    segment.t = prevSegment.t + prevSegment.d;\r\n                    segment.d = prevSegment.d;\r\n                    if (prevSegment.tManifest) {\r\n                        segment.tManifest  = parseFloat(prevSegment.tManifest) + prevSegment.d;\r\n                    }\r\n                    duration += segment.d;\r\n                    segments.push(segment);\r\n                }\r\n            }\r\n        }\r\n\r\n        segmentTimeline.S = segments;\r\n        segmentTimeline.S_asArray = segments;\r\n        segmentTimeline.duration = duration / timescale;\r\n\r\n        return segmentTimeline;\r\n    }\r\n\r\n    function getKIDFromProtectionHeader(protectionHeader) {\r\n        let prHeader,\r\n            wrmHeader,\r\n            xmlReader,\r\n            KID;\r\n\r\n        // Get PlayReady header as byte array (base64 decoded)\r\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\r\n\r\n        // Get Right Management header (WRMHEADER) from PlayReady header\r\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\r\n\r\n        // Convert from multi-byte to unicode\r\n        wrmHeader = new Uint16Array(wrmHeader.buffer);\r\n\r\n        // Convert to string\r\n        wrmHeader = String.fromCharCode.apply(null, wrmHeader);\r\n\r\n        // Parse <WRMHeader> to get KID field value\r\n        xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\r\n        KID = xmlReader.querySelector('KID').textContent;\r\n\r\n        // Get KID (base64 decoded) as byte array\r\n        KID = BASE64.decodeArray(KID);\r\n\r\n        // Convert UUID from little-endian to big-endian\r\n        convertUuidEndianness(KID);\r\n\r\n        return KID;\r\n    }\r\n\r\n    function getWRMHeaderFromPRHeader(prHeader) {\r\n        let length,\r\n            recordCount,\r\n            recordType,\r\n            recordLength,\r\n            recordValue;\r\n        let i = 0;\r\n\r\n        // Parse PlayReady header\r\n\r\n        // Length - 32 bits (LE format)\r\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i];\r\n        i += 4;\r\n\r\n        // Record count - 16 bits (LE format)\r\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i];\r\n        i += 2;\r\n\r\n        // Parse records\r\n        while (i < prHeader.length) {\r\n            // Record type - 16 bits (LE format)\r\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\r\n            i += 2;\r\n\r\n            // Check if Rights Management header (record type = 0x01)\r\n            if (recordType === 0x01) {\r\n\r\n                // Record length - 16 bits (LE format)\r\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\r\n                i += 2;\r\n\r\n                // Record value => contains <WRMHEADER>\r\n                recordValue = new Uint8Array(recordLength);\r\n                recordValue.set(prHeader.subarray(i, i + recordLength));\r\n                return recordValue;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function convertUuidEndianness(uuid) {\r\n        swapBytes(uuid, 0, 3);\r\n        swapBytes(uuid, 1, 2);\r\n        swapBytes(uuid, 4, 5);\r\n        swapBytes(uuid, 6, 7);\r\n    }\r\n\r\n    function swapBytes(bytes, pos1, pos2) {\r\n        const temp = bytes[pos1];\r\n        bytes[pos1] = bytes[pos2];\r\n        bytes[pos2] = temp;\r\n    }\r\n\r\n\r\n    function createPRContentProtection(protectionHeader) {\r\n        let pro = {\r\n            __text: protectionHeader.firstChild.data,\r\n            __prefix: 'mspr'\r\n        };\r\n        return {\r\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\r\n            value: 'com.microsoft.playready',\r\n            pro: pro,\r\n            pro_asArray: pro\r\n        };\r\n    }\r\n\r\n    function createWidevineContentProtection(protectionHeader, KID) {\r\n        // Create Widevine CENC header (Protocol Buffer) with KID value\r\n        const wvCencHeader = new Uint8Array(2 + KID.length);\r\n        wvCencHeader[0] = 0x12;\r\n        wvCencHeader[1] = 0x10;\r\n        wvCencHeader.set(KID, 2);\r\n\r\n        // Create a pssh box\r\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\r\n        let pssh = new Uint8Array(length);\r\n        let i = 0;\r\n\r\n        // Set box length value\r\n        pssh[i++] = (length & 0xFF000000) >> 24;\r\n        pssh[i++] = (length & 0x00FF0000) >> 16;\r\n        pssh[i++] = (length & 0x0000FF00) >> 8;\r\n        pssh[i++] = (length & 0x000000FF);\r\n\r\n        // Set type ('pssh'), version (0) and flags (0)\r\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\r\n        i += 8;\r\n\r\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\r\n        pssh.set([0xed, 0xef, 0x8b, 0xa9,  0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\r\n        i += 16;\r\n\r\n        // Set data length value\r\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\r\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\r\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\r\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\r\n\r\n        // Copy Widevine CENC header\r\n        pssh.set(wvCencHeader, i);\r\n\r\n        // Convert to BASE64 string\r\n        pssh = String.fromCharCode.apply(null, pssh);\r\n        pssh = BASE64.encodeASCII(pssh);\r\n\r\n        return {\r\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\r\n            value: 'com.widevine.alpha',\r\n            pssh: {\r\n                __text: pssh\r\n            }\r\n        };\r\n    }\r\n\r\n    function processManifest(xmlDoc, manifestLoadedTime) {\r\n        const manifest = {};\r\n        const contentProtections = [];\r\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\r\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\r\n        let protectionHeader = null;\r\n        let period,\r\n            adaptations,\r\n            contentProtection,\r\n            KID,\r\n            timestampOffset,\r\n            startTime,\r\n            segments,\r\n            timescale,\r\n            segmentDuration,\r\n            i, j;\r\n\r\n        // Set manifest node properties\r\n        manifest.protocol = 'MSS';\r\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\r\n        manifest.type = smoothStreamingMedia.getAttribute('IsLive') === 'TRUE' ? 'dynamic' : 'static';\r\n        timescale =  smoothStreamingMedia.getAttribute('TimeScale');\r\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\r\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\r\n        if (dvrWindowLength === 0 && smoothStreamingMedia.getAttribute('CanSeek') === 'TRUE') {\r\n            dvrWindowLength = Infinity;\r\n        }\r\n        if (dvrWindowLength > 0) {\r\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\r\n        }\r\n\r\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\r\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\r\n        // By default, set minBufferTime to 2 sec. (but set below according to video segment duration)\r\n        manifest.minBufferTime = 2;\r\n        manifest.ttmlTimeIsRelative = true;\r\n\r\n        // Live manifest with Duration = start-over\r\n        if (manifest.type === 'dynamic' && duration > 0) {\r\n            manifest.type = 'static';\r\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\r\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\r\n            // Duration will be set according to current segment timeline duration (see below)\r\n        }\r\n\r\n        // In case of live streams, set availabilityStartTime property according to DVRWindowLength\r\n        if (manifest.type === 'dynamic'  && manifest.timeShiftBufferDepth < Infinity) {\r\n            manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - (manifest.timeShiftBufferDepth * 1000));\r\n            manifest.refreshManifestOnSwitchTrack = true;\r\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\r\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\r\n        }\r\n\r\n        // Map period node to manifest root node\r\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\r\n        manifest.Period_asArray = [manifest.Period];\r\n\r\n        // Initialize period start time\r\n        period = manifest.Period;\r\n        period.start = 0;\r\n\r\n        // Uncomment to test live to static manifests\r\n        // if (manifest.type !== 'static') {\r\n        //     manifest.type = 'static';\r\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\r\n        //     manifest.timeShiftBufferDepth = null;\r\n        // }\r\n\r\n        // ContentProtection node\r\n        if (protection !== undefined) {\r\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\r\n\r\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\r\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\r\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\r\n\r\n            // Get KID (in CENC format) from protection header\r\n            KID = getKIDFromProtectionHeader(protectionHeader);\r\n\r\n            // Create ContentProtection for PlayReady\r\n            contentProtection = createPRContentProtection(protectionHeader);\r\n            contentProtection['cenc:default_KID'] = KID;\r\n            contentProtections.push(contentProtection);\r\n\r\n            // Create ContentProtection for Widevine (as a CENC protection)\r\n            contentProtection = createWidevineContentProtection(protectionHeader, KID);\r\n            contentProtection['cenc:default_KID'] = KID;\r\n            contentProtections.push(contentProtection);\r\n\r\n            manifest.ContentProtection = contentProtections;\r\n            manifest.ContentProtection_asArray = contentProtections;\r\n        }\r\n\r\n        adaptations = period.AdaptationSet_asArray;\r\n\r\n        for (i = 0; i < adaptations.length; i += 1) {\r\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\r\n            // Propagate content protection information into each adaptation\r\n            if (manifest.ContentProtection !== undefined) {\r\n                adaptations[i].ContentProtection = manifest.ContentProtection;\r\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\r\n            }\r\n\r\n            if (adaptations[i].contentType === 'video') {\r\n                // Get video segment duration\r\n                segmentDuration = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0].d / adaptations[i].SegmentTemplate.timescale;\r\n                // Set minBufferTime\r\n                manifest.minBufferTime = segmentDuration * 2;\r\n            }\r\n\r\n            if (manifest.type === 'dynamic') {\r\n                // Set availabilityStartTime for infinite DVR Window from segment timeline duration\r\n                if (manifest.timeShiftBufferDepth === Infinity) {\r\n                    manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - (adaptations[i].SegmentTemplate.SegmentTimeline.duration * 1000));\r\n                }\r\n                // Match timeShiftBufferDepth to video segment timeline duration\r\n                if (manifest.timeShiftBufferDepth > 0 &&\r\n                    manifest.timeShiftBufferDepth !== Infinity &&\r\n                    adaptations[i].contentType === 'video' &&\r\n                    manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\r\n                    manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Cap minBufferTime to timeShiftBufferDepth\r\n        manifest.minBufferTime = Math.min(manifest.minBufferTime, (manifest.timeShiftBufferDepth ? manifest.timeShiftBufferDepth : Infinity));\r\n\r\n        // In case of live streams:\r\n        // 1- configure player buffering properties according to target live delay\r\n        // 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())\r\n        if (manifest.type === 'dynamic') {\r\n            let targetLiveDelay = mediaPlayerModel.getLiveDelay();\r\n            if (!targetLiveDelay) {\r\n                targetLiveDelay = segmentDuration * mediaPlayerModel.getLiveDelayFragmentCount();\r\n            }\r\n            let targetDelayCapping = Math.max(manifest.timeShiftBufferDepth - 10/*END_OF_PLAYLIST_PADDING*/, manifest.timeShiftBufferDepth / 2);\r\n            let liveDelay = Math.min(targetDelayCapping, targetLiveDelay);\r\n            mediaPlayerModel.setLiveDelay(liveDelay);\r\n            // Consider a margin of one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized\r\n            let bufferTime = liveDelay - segmentDuration;\r\n            mediaPlayerModel.setStableBufferTime(bufferTime);\r\n            mediaPlayerModel.setBufferTimeAtTopQuality(bufferTime);\r\n            mediaPlayerModel.setBufferTimeAtTopQualityLongForm(bufferTime);\r\n        }\r\n\r\n        // Delete Content Protection under root manifest node\r\n        delete manifest.ContentProtection;\r\n        delete manifest.ContentProtection_asArray;\r\n\r\n        // In case of VOD streams, check if start time is greater than 0\r\n        // Then determine timestamp offset according to higher audio/video start time\r\n        // (use case = live stream delinearization)\r\n        if (manifest.type === 'static') {\r\n            // In case of start-over stream and manifest reloading (due to track switch)\r\n            // we consider previous timestampOffset to keep timelines synchronized\r\n            var prevManifest = manifestModel.getValue();\r\n            if (prevManifest && prevManifest.timestampOffset) {\r\n                timestampOffset = prevManifest.timestampOffset;\r\n            } else {\r\n                for (i = 0; i < adaptations.length; i++) {\r\n                    if (adaptations[i].contentType === 'audio' || adaptations[i].contentType === 'video') {\r\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\r\n                        startTime = segments[0].t / adaptations[i].SegmentTemplate.timescale;\r\n                        if (timestampOffset === undefined) {\r\n                            timestampOffset = startTime;\r\n                        }\r\n                        timestampOffset = Math.min(timestampOffset, startTime);\r\n                        // Correct content duration according to minimum adaptation's segment timeline duration\r\n                        // in order to force <video> element sending 'ended' event\r\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\r\n                    }\r\n                }\r\n            }\r\n            // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\r\n            if (timestampOffset > 0) {\r\n                manifest.timestampOffset = timestampOffset;\r\n                for (i = 0; i < adaptations.length; i++) {\r\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\r\n                    for (j = 0; j < segments.length; j++) {\r\n                        if (!segments[j].tManifest) {\r\n                            segments[j].tManifest = segments[j].t;\r\n                        }\r\n                        segments[j].t -= (timestampOffset * adaptations[i].SegmentTemplate.timescale);\r\n                    }\r\n                    if (adaptations[i].contentType === 'audio' || adaptations[i].contentType === 'video') {\r\n                        period.start = Math.max(segments[0].t, period.start);\r\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\r\n                    }\r\n                }\r\n                period.start /= manifest.timescale;\r\n            }\r\n        }\r\n\r\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\r\n        // and the avoid 'ended' event not being raised\r\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\r\n        period.duration = manifest.mediaPresentationDuration;\r\n\r\n        return manifest;\r\n    }\r\n\r\n    function parseDOM(data) {\r\n        let xmlDoc = null;\r\n\r\n        if (window.DOMParser) {\r\n            const parser = new window.DOMParser();\r\n\r\n            xmlDoc = parser.parseFromString(data, 'text/xml');\r\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\r\n                throw new Error('parsing the manifest failed');\r\n            }\r\n        }\r\n\r\n        return xmlDoc;\r\n    }\r\n\r\n    function getMatchers() {\r\n        return null;\r\n    }\r\n\r\n    function getIron() {\r\n        return null;\r\n    }\r\n\r\n    function internalParse(data) {\r\n        let xmlDoc = null;\r\n        let manifest = null;\r\n\r\n        const startTime = window.performance.now();\r\n\r\n        // Parse the MSS XML manifest\r\n        xmlDoc = parseDOM(data);\r\n\r\n        const xmlParseTime = window.performance.now();\r\n\r\n        if (xmlDoc === null) {\r\n            return null;\r\n        }\r\n\r\n        // Convert MSS manifest into DASH manifest\r\n        manifest = processManifest(xmlDoc, new Date());\r\n\r\n        const mss2dashTime = window.performance.now();\r\n\r\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\r\n\r\n        return manifest;\r\n    }\r\n\r\n    instance = {\r\n        parse: internalParse,\r\n        getMatchers: getMatchers,\r\n        getIron: getIron\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nMssParser.__dashjs_factory_name = 'MssParser';\r\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\r\n"]}